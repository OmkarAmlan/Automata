2024-03-02 12:13:06,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:13:06,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:13:06,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:13:06,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:15:06,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:15:06,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:15:06,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:15:06,552:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:15:13,539:WARNING:D:\HackNITR\automata\polls\views.py:32: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:15:13,582:WARNING:D:\HackNITR\automata\polls\views.py:33: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:26:04,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:26:04,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:26:04,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:26:04,084:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:26:13,295:WARNING:D:\HackNITR\automata\polls\views.py:32: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:26:13,342:WARNING:D:\HackNITR\automata\polls\views.py:33: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:26:13,349:INFO:PyCaret RegressionExperiment
2024-03-02 12:26:13,350:INFO:Logging name: reg-default-name
2024-03-02 12:26:13,350:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 12:26:13,350:INFO:version 3.3.0
2024-03-02 12:26:13,350:INFO:Initializing setup()
2024-03-02 12:26:13,350:INFO:self.USI: 66d9
2024-03-02 12:26:13,350:INFO:self._variable_keys: {'n_jobs_param', 'exp_name_log', 'gpu_n_jobs_param', 'X_test', 'fold_generator', 'seed', 'y_test', 'logging_param', '_available_plots', 'idx', 'USI', 'transform_target_param', '_ml_usecase', 'pipeline', 'exp_id', 'data', 'target_param', 'log_plots_param', 'X', 'y', 'gpu_param', 'X_train', 'fold_groups_param', 'fold_shuffle_param', 'y_train', 'html_param', 'memory'}
2024-03-02 12:26:13,350:INFO:Checking environment
2024-03-02 12:26:13,350:INFO:python_version: 3.9.0
2024-03-02 12:26:13,350:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 12:26:13,350:INFO:machine: AMD64
2024-03-02 12:26:13,350:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 12:26:13,364:INFO:Memory: svmem(total=16476958720, available=4296331264, percent=73.9, used=12180627456, free=4296331264)
2024-03-02 12:26:13,364:INFO:Physical Core: 8
2024-03-02 12:26:13,364:INFO:Logical Core: 16
2024-03-02 12:26:13,364:INFO:Checking libraries
2024-03-02 12:26:13,364:INFO:System:
2024-03-02 12:26:13,364:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 12:26:13,364:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 12:26:13,364:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 12:26:13,364:INFO:PyCaret required dependencies:
2024-03-02 12:26:13,426:INFO:                 pip: 23.3.2
2024-03-02 12:26:13,427:INFO:          setuptools: 49.2.1
2024-03-02 12:26:13,427:INFO:             pycaret: 3.3.0
2024-03-02 12:26:13,427:INFO:             IPython: 8.18.1
2024-03-02 12:26:13,427:INFO:          ipywidgets: 8.1.2
2024-03-02 12:26:13,427:INFO:                tqdm: 4.66.1
2024-03-02 12:26:13,427:INFO:               numpy: 1.25.2
2024-03-02 12:26:13,427:INFO:              pandas: 2.1.1
2024-03-02 12:26:13,427:INFO:              jinja2: 3.1.2
2024-03-02 12:26:13,427:INFO:               scipy: 1.11.4
2024-03-02 12:26:13,427:INFO:              joblib: 1.3.2
2024-03-02 12:26:13,427:INFO:             sklearn: 1.4.1.post1
2024-03-02 12:26:13,427:INFO:                pyod: 1.1.3
2024-03-02 12:26:13,427:INFO:            imblearn: 0.12.0
2024-03-02 12:26:13,427:INFO:   category_encoders: 2.6.3
2024-03-02 12:26:13,427:INFO:            lightgbm: 4.3.0
2024-03-02 12:26:13,428:INFO:               numba: 0.58.1
2024-03-02 12:26:13,428:INFO:            requests: 2.31.0
2024-03-02 12:26:13,428:INFO:          matplotlib: 3.7.5
2024-03-02 12:26:13,428:INFO:          scikitplot: 0.3.7
2024-03-02 12:26:13,428:INFO:         yellowbrick: 1.5
2024-03-02 12:26:13,428:INFO:              plotly: 5.19.0
2024-03-02 12:26:13,428:INFO:    plotly-resampler: Not installed
2024-03-02 12:26:13,428:INFO:             kaleido: 0.2.1
2024-03-02 12:26:13,428:INFO:           schemdraw: 0.15
2024-03-02 12:26:13,428:INFO:         statsmodels: 0.14.1
2024-03-02 12:26:13,428:INFO:              sktime: 0.27.0
2024-03-02 12:26:13,428:INFO:               tbats: 1.1.3
2024-03-02 12:26:13,428:INFO:            pmdarima: 2.0.4
2024-03-02 12:26:13,428:INFO:              psutil: 5.9.8
2024-03-02 12:26:13,428:INFO:          markupsafe: 2.1.3
2024-03-02 12:26:13,428:INFO:             pickle5: Not installed
2024-03-02 12:26:13,429:INFO:         cloudpickle: 3.0.0
2024-03-02 12:26:13,429:INFO:         deprecation: 2.1.0
2024-03-02 12:26:13,429:INFO:              xxhash: 3.4.1
2024-03-02 12:26:13,429:INFO:           wurlitzer: Not installed
2024-03-02 12:26:13,429:INFO:PyCaret optional dependencies:
2024-03-02 12:26:13,485:INFO:                shap: Not installed
2024-03-02 12:26:13,485:INFO:           interpret: Not installed
2024-03-02 12:26:13,485:INFO:                umap: Not installed
2024-03-02 12:26:13,485:INFO:     ydata_profiling: 4.6.5
2024-03-02 12:26:13,485:INFO:  explainerdashboard: Not installed
2024-03-02 12:26:13,485:INFO:             autoviz: Not installed
2024-03-02 12:26:13,486:INFO:           fairlearn: Not installed
2024-03-02 12:26:13,486:INFO:          deepchecks: Not installed
2024-03-02 12:26:13,486:INFO:             xgboost: 2.0.3
2024-03-02 12:26:13,486:INFO:            catboost: Not installed
2024-03-02 12:26:13,486:INFO:              kmodes: Not installed
2024-03-02 12:26:13,486:INFO:             mlxtend: Not installed
2024-03-02 12:26:13,486:INFO:       statsforecast: Not installed
2024-03-02 12:26:13,486:INFO:        tune_sklearn: Not installed
2024-03-02 12:26:13,486:INFO:                 ray: Not installed
2024-03-02 12:26:13,486:INFO:            hyperopt: Not installed
2024-03-02 12:26:13,486:INFO:              optuna: Not installed
2024-03-02 12:26:13,486:INFO:               skopt: Not installed
2024-03-02 12:26:13,486:INFO:              mlflow: Not installed
2024-03-02 12:26:13,486:INFO:              gradio: Not installed
2024-03-02 12:26:13,486:INFO:             fastapi: Not installed
2024-03-02 12:26:13,486:INFO:             uvicorn: Not installed
2024-03-02 12:26:13,486:INFO:              m2cgen: Not installed
2024-03-02 12:26:13,487:INFO:           evidently: Not installed
2024-03-02 12:26:13,487:INFO:               fugue: Not installed
2024-03-02 12:26:13,487:INFO:           streamlit: 1.27.2
2024-03-02 12:26:13,487:INFO:             prophet: Not installed
2024-03-02 12:26:13,487:INFO:None
2024-03-02 12:26:13,487:INFO:Set up data.
2024-03-02 12:27:30,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:27:30,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:27:30,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:27:30,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:27:56,208:WARNING:D:\HackNITR\automata\polls\views.py:30: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:27:56,265:WARNING:D:\HackNITR\automata\polls\views.py:31: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:30:07,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:30:07,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:30:07,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:30:07,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:30:22,657:WARNING:D:\HackNITR\automata\polls\views.py:30: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:30:22,698:WARNING:D:\HackNITR\automata\polls\views.py:31: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:30:22,704:INFO:PyCaret RegressionExperiment
2024-03-02 12:30:22,704:INFO:Logging name: reg-default-name
2024-03-02 12:30:22,704:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 12:30:22,704:INFO:version 3.3.0
2024-03-02 12:30:22,704:INFO:Initializing setup()
2024-03-02 12:30:22,704:INFO:self.USI: c435
2024-03-02 12:30:22,704:INFO:self._variable_keys: {'_available_plots', 'pipeline', 'X_test', 'idx', 'y', 'X_train', 'fold_shuffle_param', 'USI', 'html_param', 'gpu_n_jobs_param', 'exp_id', 'y_test', 'n_jobs_param', 'memory', 'log_plots_param', 'logging_param', 'y_train', 'fold_groups_param', '_ml_usecase', 'seed', 'data', 'fold_generator', 'target_param', 'gpu_param', 'transform_target_param', 'X', 'exp_name_log'}
2024-03-02 12:30:22,704:INFO:Checking environment
2024-03-02 12:30:22,704:INFO:python_version: 3.9.0
2024-03-02 12:30:22,704:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 12:30:22,704:INFO:machine: AMD64
2024-03-02 12:30:22,704:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 12:30:22,711:INFO:Memory: svmem(total=16476958720, available=4283789312, percent=74.0, used=12193169408, free=4283789312)
2024-03-02 12:30:22,712:INFO:Physical Core: 8
2024-03-02 12:30:22,712:INFO:Logical Core: 16
2024-03-02 12:30:22,712:INFO:Checking libraries
2024-03-02 12:30:22,712:INFO:System:
2024-03-02 12:30:22,712:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 12:30:22,712:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 12:30:22,712:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 12:30:22,712:INFO:PyCaret required dependencies:
2024-03-02 12:30:22,750:INFO:                 pip: 23.3.2
2024-03-02 12:30:22,750:INFO:          setuptools: 49.2.1
2024-03-02 12:30:22,750:INFO:             pycaret: 3.3.0
2024-03-02 12:30:22,750:INFO:             IPython: 8.18.1
2024-03-02 12:30:22,750:INFO:          ipywidgets: 8.1.2
2024-03-02 12:30:22,750:INFO:                tqdm: 4.66.1
2024-03-02 12:30:22,750:INFO:               numpy: 1.25.2
2024-03-02 12:30:22,750:INFO:              pandas: 2.1.1
2024-03-02 12:30:22,750:INFO:              jinja2: 3.1.2
2024-03-02 12:30:22,750:INFO:               scipy: 1.11.4
2024-03-02 12:30:22,750:INFO:              joblib: 1.3.2
2024-03-02 12:30:22,750:INFO:             sklearn: 1.4.1.post1
2024-03-02 12:30:22,750:INFO:                pyod: 1.1.3
2024-03-02 12:30:22,750:INFO:            imblearn: 0.12.0
2024-03-02 12:30:22,750:INFO:   category_encoders: 2.6.3
2024-03-02 12:30:22,750:INFO:            lightgbm: 4.3.0
2024-03-02 12:30:22,750:INFO:               numba: 0.58.1
2024-03-02 12:30:22,750:INFO:            requests: 2.31.0
2024-03-02 12:30:22,750:INFO:          matplotlib: 3.7.5
2024-03-02 12:30:22,750:INFO:          scikitplot: 0.3.7
2024-03-02 12:30:22,750:INFO:         yellowbrick: 1.5
2024-03-02 12:30:22,750:INFO:              plotly: 5.19.0
2024-03-02 12:30:22,750:INFO:    plotly-resampler: Not installed
2024-03-02 12:30:22,750:INFO:             kaleido: 0.2.1
2024-03-02 12:30:22,750:INFO:           schemdraw: 0.15
2024-03-02 12:30:22,750:INFO:         statsmodels: 0.14.1
2024-03-02 12:30:22,750:INFO:              sktime: 0.27.0
2024-03-02 12:30:22,750:INFO:               tbats: 1.1.3
2024-03-02 12:30:22,750:INFO:            pmdarima: 2.0.4
2024-03-02 12:30:22,750:INFO:              psutil: 5.9.8
2024-03-02 12:30:22,750:INFO:          markupsafe: 2.1.3
2024-03-02 12:30:22,750:INFO:             pickle5: Not installed
2024-03-02 12:30:22,750:INFO:         cloudpickle: 3.0.0
2024-03-02 12:30:22,750:INFO:         deprecation: 2.1.0
2024-03-02 12:30:22,750:INFO:              xxhash: 3.4.1
2024-03-02 12:30:22,750:INFO:           wurlitzer: Not installed
2024-03-02 12:30:22,750:INFO:PyCaret optional dependencies:
2024-03-02 12:30:22,775:INFO:                shap: Not installed
2024-03-02 12:30:22,775:INFO:           interpret: Not installed
2024-03-02 12:30:22,775:INFO:                umap: Not installed
2024-03-02 12:30:22,775:INFO:     ydata_profiling: 4.6.5
2024-03-02 12:30:22,775:INFO:  explainerdashboard: Not installed
2024-03-02 12:30:22,775:INFO:             autoviz: Not installed
2024-03-02 12:30:22,775:INFO:           fairlearn: Not installed
2024-03-02 12:30:22,776:INFO:          deepchecks: Not installed
2024-03-02 12:30:22,776:INFO:             xgboost: 2.0.3
2024-03-02 12:30:22,776:INFO:            catboost: Not installed
2024-03-02 12:30:22,776:INFO:              kmodes: Not installed
2024-03-02 12:30:22,776:INFO:             mlxtend: Not installed
2024-03-02 12:30:22,776:INFO:       statsforecast: Not installed
2024-03-02 12:30:22,776:INFO:        tune_sklearn: Not installed
2024-03-02 12:30:22,776:INFO:                 ray: Not installed
2024-03-02 12:30:22,776:INFO:            hyperopt: Not installed
2024-03-02 12:30:22,776:INFO:              optuna: Not installed
2024-03-02 12:30:22,776:INFO:               skopt: Not installed
2024-03-02 12:30:22,776:INFO:              mlflow: Not installed
2024-03-02 12:30:22,776:INFO:              gradio: Not installed
2024-03-02 12:30:22,776:INFO:             fastapi: Not installed
2024-03-02 12:30:22,776:INFO:             uvicorn: Not installed
2024-03-02 12:30:22,776:INFO:              m2cgen: Not installed
2024-03-02 12:30:22,776:INFO:           evidently: Not installed
2024-03-02 12:30:22,776:INFO:               fugue: Not installed
2024-03-02 12:30:22,776:INFO:           streamlit: 1.27.2
2024-03-02 12:30:22,776:INFO:             prophet: Not installed
2024-03-02 12:30:22,776:INFO:None
2024-03-02 12:30:22,776:INFO:Set up data.
2024-03-02 12:30:55,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:30:55,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:30:55,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:30:55,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:31:01,910:WARNING:D:\HackNITR\automata\polls\views.py:30: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:31:01,952:WARNING:D:\HackNITR\automata\polls\views.py:32: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:31:01,957:INFO:PyCaret RegressionExperiment
2024-03-02 12:31:01,958:INFO:Logging name: reg-default-name
2024-03-02 12:31:01,958:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 12:31:01,958:INFO:version 3.3.0
2024-03-02 12:31:01,958:INFO:Initializing setup()
2024-03-02 12:31:01,958:INFO:self.USI: 5679
2024-03-02 12:31:01,958:INFO:self._variable_keys: {'logging_param', 'fold_generator', 'X_train', 'data', 'transform_target_param', 'exp_name_log', 'USI', 'pipeline', 'idx', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y', 'gpu_n_jobs_param', 'target_param', 'gpu_param', 'seed', 'X', 'html_param', 'log_plots_param', 'y_test', 'y_train', '_available_plots', 'exp_id', 'X_test', 'n_jobs_param', '_ml_usecase'}
2024-03-02 12:31:01,958:INFO:Checking environment
2024-03-02 12:31:01,958:INFO:python_version: 3.9.0
2024-03-02 12:31:01,958:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 12:31:01,958:INFO:machine: AMD64
2024-03-02 12:31:01,958:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 12:31:01,965:INFO:Memory: svmem(total=16476958720, available=4327641088, percent=73.7, used=12149317632, free=4327641088)
2024-03-02 12:31:01,965:INFO:Physical Core: 8
2024-03-02 12:31:01,965:INFO:Logical Core: 16
2024-03-02 12:31:01,965:INFO:Checking libraries
2024-03-02 12:31:01,965:INFO:System:
2024-03-02 12:31:01,965:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 12:31:01,965:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 12:31:01,965:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 12:31:01,965:INFO:PyCaret required dependencies:
2024-03-02 12:31:02,002:INFO:                 pip: 23.3.2
2024-03-02 12:31:02,002:INFO:          setuptools: 49.2.1
2024-03-02 12:31:02,002:INFO:             pycaret: 3.3.0
2024-03-02 12:31:02,002:INFO:             IPython: 8.18.1
2024-03-02 12:31:02,002:INFO:          ipywidgets: 8.1.2
2024-03-02 12:31:02,002:INFO:                tqdm: 4.66.1
2024-03-02 12:31:02,002:INFO:               numpy: 1.25.2
2024-03-02 12:31:02,002:INFO:              pandas: 2.1.1
2024-03-02 12:31:02,002:INFO:              jinja2: 3.1.2
2024-03-02 12:31:02,002:INFO:               scipy: 1.11.4
2024-03-02 12:31:02,002:INFO:              joblib: 1.3.2
2024-03-02 12:31:02,002:INFO:             sklearn: 1.4.1.post1
2024-03-02 12:31:02,002:INFO:                pyod: 1.1.3
2024-03-02 12:31:02,002:INFO:            imblearn: 0.12.0
2024-03-02 12:31:02,002:INFO:   category_encoders: 2.6.3
2024-03-02 12:31:02,002:INFO:            lightgbm: 4.3.0
2024-03-02 12:31:02,002:INFO:               numba: 0.58.1
2024-03-02 12:31:02,002:INFO:            requests: 2.31.0
2024-03-02 12:31:02,002:INFO:          matplotlib: 3.7.5
2024-03-02 12:31:02,002:INFO:          scikitplot: 0.3.7
2024-03-02 12:31:02,002:INFO:         yellowbrick: 1.5
2024-03-02 12:31:02,002:INFO:              plotly: 5.19.0
2024-03-02 12:31:02,002:INFO:    plotly-resampler: Not installed
2024-03-02 12:31:02,002:INFO:             kaleido: 0.2.1
2024-03-02 12:31:02,002:INFO:           schemdraw: 0.15
2024-03-02 12:31:02,003:INFO:         statsmodels: 0.14.1
2024-03-02 12:31:02,003:INFO:              sktime: 0.27.0
2024-03-02 12:31:02,003:INFO:               tbats: 1.1.3
2024-03-02 12:31:02,003:INFO:            pmdarima: 2.0.4
2024-03-02 12:31:02,003:INFO:              psutil: 5.9.8
2024-03-02 12:31:02,003:INFO:          markupsafe: 2.1.3
2024-03-02 12:31:02,003:INFO:             pickle5: Not installed
2024-03-02 12:31:02,003:INFO:         cloudpickle: 3.0.0
2024-03-02 12:31:02,003:INFO:         deprecation: 2.1.0
2024-03-02 12:31:02,003:INFO:              xxhash: 3.4.1
2024-03-02 12:31:02,003:INFO:           wurlitzer: Not installed
2024-03-02 12:31:02,003:INFO:PyCaret optional dependencies:
2024-03-02 12:31:02,026:INFO:                shap: Not installed
2024-03-02 12:31:02,026:INFO:           interpret: Not installed
2024-03-02 12:31:02,026:INFO:                umap: Not installed
2024-03-02 12:31:02,026:INFO:     ydata_profiling: 4.6.5
2024-03-02 12:31:02,026:INFO:  explainerdashboard: Not installed
2024-03-02 12:31:02,026:INFO:             autoviz: Not installed
2024-03-02 12:31:02,026:INFO:           fairlearn: Not installed
2024-03-02 12:31:02,026:INFO:          deepchecks: Not installed
2024-03-02 12:31:02,026:INFO:             xgboost: 2.0.3
2024-03-02 12:31:02,026:INFO:            catboost: Not installed
2024-03-02 12:31:02,026:INFO:              kmodes: Not installed
2024-03-02 12:31:02,026:INFO:             mlxtend: Not installed
2024-03-02 12:31:02,026:INFO:       statsforecast: Not installed
2024-03-02 12:31:02,026:INFO:        tune_sklearn: Not installed
2024-03-02 12:31:02,026:INFO:                 ray: Not installed
2024-03-02 12:31:02,026:INFO:            hyperopt: Not installed
2024-03-02 12:31:02,027:INFO:              optuna: Not installed
2024-03-02 12:31:02,027:INFO:               skopt: Not installed
2024-03-02 12:31:02,027:INFO:              mlflow: Not installed
2024-03-02 12:31:02,027:INFO:              gradio: Not installed
2024-03-02 12:31:02,027:INFO:             fastapi: Not installed
2024-03-02 12:31:02,027:INFO:             uvicorn: Not installed
2024-03-02 12:31:02,027:INFO:              m2cgen: Not installed
2024-03-02 12:31:02,027:INFO:           evidently: Not installed
2024-03-02 12:31:02,027:INFO:               fugue: Not installed
2024-03-02 12:31:02,027:INFO:           streamlit: 1.27.2
2024-03-02 12:31:02,027:INFO:             prophet: Not installed
2024-03-02 12:31:02,027:INFO:None
2024-03-02 12:31:02,027:INFO:Set up data.
2024-03-02 12:31:02,046:INFO:Set up folding strategy.
2024-03-02 12:31:02,046:INFO:Set up train/test split.
2024-03-02 12:31:02,058:INFO:Set up index.
2024-03-02 12:31:02,058:INFO:Assigning column types.
2024-03-02 12:31:02,061:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 12:31:02,061:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,065:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,069:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,119:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,155:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:02,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:02,157:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,161:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,164:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,209:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,244:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,245:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:02,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:02,247:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 12:31:02,251:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,254:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,300:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,335:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,335:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:02,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:02,341:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,345:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,390:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,425:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,426:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:02,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:02,430:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 12:31:02,437:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,482:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,516:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,517:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:02,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:02,526:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,572:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,606:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,607:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:02,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:02,610:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 12:31:02,661:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,701:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,701:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:02,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:02,757:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,792:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,792:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:02,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:02,795:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 12:31:02,849:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,884:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:02,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:02,940:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:02,976:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:02,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:02,979:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 12:31:03,067:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:03,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:03,157:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:03,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:03,163:INFO:Preparing preprocessing pipeline...
2024-03-02 12:31:03,163:INFO:Set up simple imputation.
2024-03-02 12:31:03,168:INFO:Set up encoding of categorical features.
2024-03-02 12:31:03,169:INFO:Set up column name cleaning.
2024-03-02 12:31:29,688:WARNING:D:\HackNITR\automata\polls\views.py:30: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:31:29,768:WARNING:D:\HackNITR\automata\polls\views.py:32: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:31:29,776:INFO:PyCaret RegressionExperiment
2024-03-02 12:31:29,776:INFO:Logging name: reg-default-name
2024-03-02 12:31:29,776:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 12:31:29,776:INFO:version 3.3.0
2024-03-02 12:31:29,776:INFO:Initializing setup()
2024-03-02 12:31:29,776:INFO:self.USI: b9e5
2024-03-02 12:31:29,776:INFO:self._variable_keys: {'logging_param', 'fold_generator', 'X_train', 'data', 'transform_target_param', 'exp_name_log', 'USI', 'pipeline', 'idx', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y', 'gpu_n_jobs_param', 'target_param', 'gpu_param', 'seed', 'X', 'html_param', 'log_plots_param', 'y_test', 'y_train', '_available_plots', 'exp_id', 'X_test', 'n_jobs_param', '_ml_usecase'}
2024-03-02 12:31:29,776:INFO:Checking environment
2024-03-02 12:31:29,776:INFO:python_version: 3.9.0
2024-03-02 12:31:29,776:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 12:31:29,776:INFO:machine: AMD64
2024-03-02 12:31:29,776:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 12:31:29,791:INFO:Memory: svmem(total=16476958720, available=4398538752, percent=73.3, used=12078419968, free=4398538752)
2024-03-02 12:31:29,792:INFO:Physical Core: 8
2024-03-02 12:31:29,792:INFO:Logical Core: 16
2024-03-02 12:31:29,792:INFO:Checking libraries
2024-03-02 12:31:29,792:INFO:System:
2024-03-02 12:31:29,792:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 12:31:29,792:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 12:31:29,792:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 12:31:29,792:INFO:PyCaret required dependencies:
2024-03-02 12:31:29,792:INFO:                 pip: 23.3.2
2024-03-02 12:31:29,792:INFO:          setuptools: 49.2.1
2024-03-02 12:31:29,792:INFO:             pycaret: 3.3.0
2024-03-02 12:31:29,793:INFO:             IPython: 8.18.1
2024-03-02 12:31:29,793:INFO:          ipywidgets: 8.1.2
2024-03-02 12:31:29,793:INFO:                tqdm: 4.66.1
2024-03-02 12:31:29,793:INFO:               numpy: 1.25.2
2024-03-02 12:31:29,793:INFO:              pandas: 2.1.1
2024-03-02 12:31:29,793:INFO:              jinja2: 3.1.2
2024-03-02 12:31:29,793:INFO:               scipy: 1.11.4
2024-03-02 12:31:29,793:INFO:              joblib: 1.3.2
2024-03-02 12:31:29,793:INFO:             sklearn: 1.4.1.post1
2024-03-02 12:31:29,793:INFO:                pyod: 1.1.3
2024-03-02 12:31:29,793:INFO:            imblearn: 0.12.0
2024-03-02 12:31:29,793:INFO:   category_encoders: 2.6.3
2024-03-02 12:31:29,793:INFO:            lightgbm: 4.3.0
2024-03-02 12:31:29,794:INFO:               numba: 0.58.1
2024-03-02 12:31:29,794:INFO:            requests: 2.31.0
2024-03-02 12:31:29,794:INFO:          matplotlib: 3.7.5
2024-03-02 12:31:29,794:INFO:          scikitplot: 0.3.7
2024-03-02 12:31:29,794:INFO:         yellowbrick: 1.5
2024-03-02 12:31:29,794:INFO:              plotly: 5.19.0
2024-03-02 12:31:29,794:INFO:    plotly-resampler: Not installed
2024-03-02 12:31:29,794:INFO:             kaleido: 0.2.1
2024-03-02 12:31:29,794:INFO:           schemdraw: 0.15
2024-03-02 12:31:29,794:INFO:         statsmodels: 0.14.1
2024-03-02 12:31:29,794:INFO:              sktime: 0.27.0
2024-03-02 12:31:29,794:INFO:               tbats: 1.1.3
2024-03-02 12:31:29,794:INFO:            pmdarima: 2.0.4
2024-03-02 12:31:29,794:INFO:              psutil: 5.9.8
2024-03-02 12:31:29,795:INFO:          markupsafe: 2.1.3
2024-03-02 12:31:29,795:INFO:             pickle5: Not installed
2024-03-02 12:31:29,795:INFO:         cloudpickle: 3.0.0
2024-03-02 12:31:29,795:INFO:         deprecation: 2.1.0
2024-03-02 12:31:29,795:INFO:              xxhash: 3.4.1
2024-03-02 12:31:29,795:INFO:           wurlitzer: Not installed
2024-03-02 12:31:29,795:INFO:PyCaret optional dependencies:
2024-03-02 12:31:29,795:INFO:                shap: Not installed
2024-03-02 12:31:29,795:INFO:           interpret: Not installed
2024-03-02 12:31:29,795:INFO:                umap: Not installed
2024-03-02 12:31:29,795:INFO:     ydata_profiling: 4.6.5
2024-03-02 12:31:29,795:INFO:  explainerdashboard: Not installed
2024-03-02 12:31:29,796:INFO:             autoviz: Not installed
2024-03-02 12:31:29,796:INFO:           fairlearn: Not installed
2024-03-02 12:31:29,796:INFO:          deepchecks: Not installed
2024-03-02 12:31:29,796:INFO:             xgboost: 2.0.3
2024-03-02 12:31:29,796:INFO:            catboost: Not installed
2024-03-02 12:31:29,796:INFO:              kmodes: Not installed
2024-03-02 12:31:29,796:INFO:             mlxtend: Not installed
2024-03-02 12:31:29,796:INFO:       statsforecast: Not installed
2024-03-02 12:31:29,796:INFO:        tune_sklearn: Not installed
2024-03-02 12:31:29,797:INFO:                 ray: Not installed
2024-03-02 12:31:29,797:INFO:            hyperopt: Not installed
2024-03-02 12:31:29,797:INFO:              optuna: Not installed
2024-03-02 12:31:29,797:INFO:               skopt: Not installed
2024-03-02 12:31:29,797:INFO:              mlflow: Not installed
2024-03-02 12:31:29,797:INFO:              gradio: Not installed
2024-03-02 12:31:29,797:INFO:             fastapi: Not installed
2024-03-02 12:31:29,797:INFO:             uvicorn: Not installed
2024-03-02 12:31:29,797:INFO:              m2cgen: Not installed
2024-03-02 12:31:29,797:INFO:           evidently: Not installed
2024-03-02 12:31:29,797:INFO:               fugue: Not installed
2024-03-02 12:31:29,797:INFO:           streamlit: 1.27.2
2024-03-02 12:31:29,797:INFO:             prophet: Not installed
2024-03-02 12:31:29,797:INFO:None
2024-03-02 12:31:29,798:INFO:Set up data.
2024-03-02 12:31:29,819:INFO:Set up folding strategy.
2024-03-02 12:31:29,820:INFO:Set up train/test split.
2024-03-02 12:31:29,835:INFO:Set up index.
2024-03-02 12:31:29,836:INFO:Assigning column types.
2024-03-02 12:31:29,840:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 12:31:29,840:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:31:29,845:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:29,849:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:29,902:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:29,937:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:29,938:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:29,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:29,940:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:31:29,944:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:29,947:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:29,993:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,028:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,029:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,032:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 12:31:30,035:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,039:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,084:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,120:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,121:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,128:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,131:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,216:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,217:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,219:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 12:31:30,226:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,272:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,305:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,305:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,314:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,360:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,393:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,394:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,396:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 12:31:30,451:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,485:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,486:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,541:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,576:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,577:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,579:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 12:31:30,632:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,667:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,722:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:30,757:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,759:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 12:31:30,845:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,938:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:30,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:30,941:INFO:Preparing preprocessing pipeline...
2024-03-02 12:31:30,941:INFO:Set up simple imputation.
2024-03-02 12:31:30,944:INFO:Set up encoding of categorical features.
2024-03-02 12:31:30,945:INFO:Set up column name cleaning.
2024-03-02 12:31:31,137:INFO:Finished creating preprocessing pipeline.
2024-03-02 12:31:31,144:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 12:31:31,144:INFO:Creating final display dataframe.
2024-03-02 12:31:31,584:INFO:Setup _display_container:                     Description             Value
0                    Session id              1838
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              b9e5
2024-03-02 12:31:31,676:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:31,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:31,768:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:31,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:31,771:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 12:31:31,771:INFO:setup() successfully completed in 2.0s...............
2024-03-02 12:31:31,771:INFO:Initializing compare_models()
2024-03-02 12:31:31,771:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001419DE89CD0>, include=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001419DE89CD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 12:31:31,771:INFO:Checking exceptions
2024-03-02 12:31:44,262:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:31:44,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:31:44,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:31:44,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:31:49,090:WARNING:D:\HackNITR\automata\polls\views.py:30: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:31:49,148:WARNING:D:\HackNITR\automata\polls\views.py:32: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:31:49,155:INFO:PyCaret RegressionExperiment
2024-03-02 12:31:49,155:INFO:Logging name: reg-default-name
2024-03-02 12:31:49,155:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 12:31:49,155:INFO:version 3.3.0
2024-03-02 12:31:49,155:INFO:Initializing setup()
2024-03-02 12:31:49,155:INFO:self.USI: 462f
2024-03-02 12:31:49,155:INFO:self._variable_keys: {'exp_id', 'fold_shuffle_param', '_available_plots', 'y', 'logging_param', 'log_plots_param', 'transform_target_param', '_ml_usecase', 'pipeline', 'gpu_n_jobs_param', 'idx', 'exp_name_log', 'gpu_param', 'seed', 'X_train', 'X', 'html_param', 'y_test', 'y_train', 'USI', 'memory', 'fold_groups_param', 'target_param', 'fold_generator', 'X_test', 'n_jobs_param', 'data'}
2024-03-02 12:31:49,155:INFO:Checking environment
2024-03-02 12:31:49,156:INFO:python_version: 3.9.0
2024-03-02 12:31:49,156:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 12:31:49,156:INFO:machine: AMD64
2024-03-02 12:31:49,156:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 12:31:49,169:INFO:Memory: svmem(total=16476958720, available=4421066752, percent=73.2, used=12055891968, free=4421066752)
2024-03-02 12:31:49,169:INFO:Physical Core: 8
2024-03-02 12:31:49,169:INFO:Logical Core: 16
2024-03-02 12:31:49,169:INFO:Checking libraries
2024-03-02 12:31:49,169:INFO:System:
2024-03-02 12:31:49,169:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 12:31:49,169:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 12:31:49,169:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 12:31:49,169:INFO:PyCaret required dependencies:
2024-03-02 12:31:49,211:INFO:                 pip: 23.3.2
2024-03-02 12:31:49,211:INFO:          setuptools: 49.2.1
2024-03-02 12:31:49,211:INFO:             pycaret: 3.3.0
2024-03-02 12:31:49,211:INFO:             IPython: 8.18.1
2024-03-02 12:31:49,211:INFO:          ipywidgets: 8.1.2
2024-03-02 12:31:49,211:INFO:                tqdm: 4.66.1
2024-03-02 12:31:49,211:INFO:               numpy: 1.25.2
2024-03-02 12:31:49,211:INFO:              pandas: 2.1.1
2024-03-02 12:31:49,212:INFO:              jinja2: 3.1.2
2024-03-02 12:31:49,212:INFO:               scipy: 1.11.4
2024-03-02 12:31:49,212:INFO:              joblib: 1.3.2
2024-03-02 12:31:49,212:INFO:             sklearn: 1.4.1.post1
2024-03-02 12:31:49,212:INFO:                pyod: 1.1.3
2024-03-02 12:31:49,212:INFO:            imblearn: 0.12.0
2024-03-02 12:31:49,212:INFO:   category_encoders: 2.6.3
2024-03-02 12:31:49,212:INFO:            lightgbm: 4.3.0
2024-03-02 12:31:49,212:INFO:               numba: 0.58.1
2024-03-02 12:31:49,212:INFO:            requests: 2.31.0
2024-03-02 12:31:49,212:INFO:          matplotlib: 3.7.5
2024-03-02 12:31:49,212:INFO:          scikitplot: 0.3.7
2024-03-02 12:31:49,212:INFO:         yellowbrick: 1.5
2024-03-02 12:31:49,212:INFO:              plotly: 5.19.0
2024-03-02 12:31:49,212:INFO:    plotly-resampler: Not installed
2024-03-02 12:31:49,212:INFO:             kaleido: 0.2.1
2024-03-02 12:31:49,212:INFO:           schemdraw: 0.15
2024-03-02 12:31:49,212:INFO:         statsmodels: 0.14.1
2024-03-02 12:31:49,212:INFO:              sktime: 0.27.0
2024-03-02 12:31:49,212:INFO:               tbats: 1.1.3
2024-03-02 12:31:49,212:INFO:            pmdarima: 2.0.4
2024-03-02 12:31:49,212:INFO:              psutil: 5.9.8
2024-03-02 12:31:49,212:INFO:          markupsafe: 2.1.3
2024-03-02 12:31:49,212:INFO:             pickle5: Not installed
2024-03-02 12:31:49,212:INFO:         cloudpickle: 3.0.0
2024-03-02 12:31:49,212:INFO:         deprecation: 2.1.0
2024-03-02 12:31:49,212:INFO:              xxhash: 3.4.1
2024-03-02 12:31:49,212:INFO:           wurlitzer: Not installed
2024-03-02 12:31:49,212:INFO:PyCaret optional dependencies:
2024-03-02 12:31:49,239:INFO:                shap: Not installed
2024-03-02 12:31:49,239:INFO:           interpret: Not installed
2024-03-02 12:31:49,240:INFO:                umap: Not installed
2024-03-02 12:31:49,240:INFO:     ydata_profiling: 4.6.5
2024-03-02 12:31:49,240:INFO:  explainerdashboard: Not installed
2024-03-02 12:31:49,240:INFO:             autoviz: Not installed
2024-03-02 12:31:49,240:INFO:           fairlearn: Not installed
2024-03-02 12:31:49,240:INFO:          deepchecks: Not installed
2024-03-02 12:31:49,240:INFO:             xgboost: 2.0.3
2024-03-02 12:31:49,240:INFO:            catboost: Not installed
2024-03-02 12:31:49,240:INFO:              kmodes: Not installed
2024-03-02 12:31:49,240:INFO:             mlxtend: Not installed
2024-03-02 12:31:49,240:INFO:       statsforecast: Not installed
2024-03-02 12:31:49,240:INFO:        tune_sklearn: Not installed
2024-03-02 12:31:49,240:INFO:                 ray: Not installed
2024-03-02 12:31:49,240:INFO:            hyperopt: Not installed
2024-03-02 12:31:49,240:INFO:              optuna: Not installed
2024-03-02 12:31:49,240:INFO:               skopt: Not installed
2024-03-02 12:31:49,240:INFO:              mlflow: Not installed
2024-03-02 12:31:49,240:INFO:              gradio: Not installed
2024-03-02 12:31:49,240:INFO:             fastapi: Not installed
2024-03-02 12:31:49,240:INFO:             uvicorn: Not installed
2024-03-02 12:31:49,240:INFO:              m2cgen: Not installed
2024-03-02 12:31:49,240:INFO:           evidently: Not installed
2024-03-02 12:31:49,240:INFO:               fugue: Not installed
2024-03-02 12:31:49,240:INFO:           streamlit: 1.27.2
2024-03-02 12:31:49,240:INFO:             prophet: Not installed
2024-03-02 12:31:49,240:INFO:None
2024-03-02 12:31:49,240:INFO:Set up data.
2024-03-02 12:31:49,259:INFO:Set up folding strategy.
2024-03-02 12:31:49,259:INFO:Set up train/test split.
2024-03-02 12:31:49,271:INFO:Set up index.
2024-03-02 12:31:49,271:INFO:Assigning column types.
2024-03-02 12:31:49,274:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 12:31:49,274:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,278:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,281:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,361:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:49,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:49,363:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,366:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,370:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,414:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,448:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,450:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:49,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:49,451:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 12:31:49,455:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,458:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,502:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,542:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,543:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:49,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:49,549:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,552:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,634:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:49,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:49,637:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 12:31:49,644:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,691:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,726:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,727:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:49,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:49,737:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,783:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,816:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,817:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:49,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:49,819:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 12:31:49,872:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:49,911:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:49,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:49,971:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:50,007:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:31:50,008:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:50,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:50,010:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 12:31:50,068:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:50,102:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:50,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:50,159:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:31:50,194:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:50,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:50,196:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 12:31:50,284:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:50,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:50,376:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:50,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:50,380:INFO:Preparing preprocessing pipeline...
2024-03-02 12:31:50,380:INFO:Set up simple imputation.
2024-03-02 12:31:50,384:INFO:Set up encoding of categorical features.
2024-03-02 12:31:50,385:INFO:Set up column name cleaning.
2024-03-02 12:31:50,574:INFO:Finished creating preprocessing pipeline.
2024-03-02 12:31:50,581:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 12:31:50,582:INFO:Creating final display dataframe.
2024-03-02 12:31:51,048:INFO:Setup _display_container:                     Description             Value
0                    Session id              3027
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              462f
2024-03-02 12:31:51,142:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:51,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:51,234:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:31:51,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:31:51,237:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 12:31:51,237:INFO:setup() successfully completed in 2.08s...............
2024-03-02 12:31:51,237:INFO:Initializing compare_models()
2024-03-02 12:31:51,238:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 12:31:51,238:INFO:Checking exceptions
2024-03-02 12:31:51,240:INFO:Preparing display monitor
2024-03-02 12:31:51,249:INFO:Time budget is 1 minutes
2024-03-02 12:31:51,250:INFO:Initializing Linear Regression
2024-03-02 12:31:51,250:INFO:Total runtime is 1.634359359741211e-05 minutes
2024-03-02 12:31:51,250:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:51,250:INFO:Initializing create_model()
2024-03-02 12:31:51,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:51,251:INFO:Checking exceptions
2024-03-02 12:31:51,251:INFO:Importing libraries
2024-03-02 12:31:51,251:INFO:Copying training dataset
2024-03-02 12:31:51,256:INFO:Defining folds
2024-03-02 12:31:51,257:INFO:Declaring metric variables
2024-03-02 12:31:51,257:INFO:Importing untrained model
2024-03-02 12:31:51,257:INFO:Linear Regression Imported successfully
2024-03-02 12:31:51,257:INFO:Starting cross validation
2024-03-02 12:31:51,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:31:54,552:INFO:Calculating mean and std
2024-03-02 12:31:54,553:INFO:Creating metrics dataframe
2024-03-02 12:31:54,556:INFO:Uploading results into container
2024-03-02 12:31:54,556:INFO:Uploading model into container now
2024-03-02 12:31:54,557:INFO:_master_model_container: 1
2024-03-02 12:31:54,557:INFO:_display_container: 2
2024-03-02 12:31:54,557:INFO:LinearRegression(n_jobs=-1)
2024-03-02 12:31:54,557:INFO:create_model() successfully completed......................................
2024-03-02 12:31:54,652:INFO:SubProcess create_model() end ==================================
2024-03-02 12:31:54,652:INFO:Creating metrics dataframe
2024-03-02 12:31:54,654:INFO:Initializing Lasso Regression
2024-03-02 12:31:54,654:INFO:Total runtime is 0.05675576130549113 minutes
2024-03-02 12:31:54,654:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:54,654:INFO:Initializing create_model()
2024-03-02 12:31:54,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:54,654:INFO:Checking exceptions
2024-03-02 12:31:54,655:INFO:Importing libraries
2024-03-02 12:31:54,655:INFO:Copying training dataset
2024-03-02 12:31:54,658:INFO:Defining folds
2024-03-02 12:31:54,658:INFO:Declaring metric variables
2024-03-02 12:31:54,658:INFO:Importing untrained model
2024-03-02 12:31:54,658:INFO:Lasso Regression Imported successfully
2024-03-02 12:31:54,659:INFO:Starting cross validation
2024-03-02 12:31:54,660:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:31:56,640:INFO:Calculating mean and std
2024-03-02 12:31:56,641:INFO:Creating metrics dataframe
2024-03-02 12:31:56,644:INFO:Uploading results into container
2024-03-02 12:31:56,644:INFO:Uploading model into container now
2024-03-02 12:31:56,644:INFO:_master_model_container: 2
2024-03-02 12:31:56,645:INFO:_display_container: 2
2024-03-02 12:31:56,645:INFO:Lasso(random_state=3027)
2024-03-02 12:31:56,645:INFO:create_model() successfully completed......................................
2024-03-02 12:31:56,737:INFO:SubProcess create_model() end ==================================
2024-03-02 12:31:56,737:INFO:Creating metrics dataframe
2024-03-02 12:31:56,740:INFO:Initializing Ridge Regression
2024-03-02 12:31:56,740:INFO:Total runtime is 0.0915114720662435 minutes
2024-03-02 12:31:56,740:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:56,740:INFO:Initializing create_model()
2024-03-02 12:31:56,740:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:56,740:INFO:Checking exceptions
2024-03-02 12:31:56,740:INFO:Importing libraries
2024-03-02 12:31:56,740:INFO:Copying training dataset
2024-03-02 12:31:56,743:INFO:Defining folds
2024-03-02 12:31:56,743:INFO:Declaring metric variables
2024-03-02 12:31:56,744:INFO:Importing untrained model
2024-03-02 12:31:56,744:INFO:Ridge Regression Imported successfully
2024-03-02 12:31:56,744:INFO:Starting cross validation
2024-03-02 12:31:56,746:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:31:56,890:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.10286e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:31:56,926:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.5732e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:31:56,928:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.0766e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:31:56,931:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.14778e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:31:56,932:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.13747e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:31:56,946:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.09844e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:31:56,947:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.32473e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:31:56,966:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.41006e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:31:56,966:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.5071e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:31:56,969:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.2825e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:31:57,015:INFO:Calculating mean and std
2024-03-02 12:31:57,016:INFO:Creating metrics dataframe
2024-03-02 12:31:57,018:INFO:Uploading results into container
2024-03-02 12:31:57,019:INFO:Uploading model into container now
2024-03-02 12:31:57,019:INFO:_master_model_container: 3
2024-03-02 12:31:57,019:INFO:_display_container: 2
2024-03-02 12:31:57,020:INFO:Ridge(random_state=3027)
2024-03-02 12:31:57,020:INFO:create_model() successfully completed......................................
2024-03-02 12:31:57,103:INFO:SubProcess create_model() end ==================================
2024-03-02 12:31:57,103:INFO:Creating metrics dataframe
2024-03-02 12:31:57,105:INFO:Initializing Elastic Net
2024-03-02 12:31:57,105:INFO:Total runtime is 0.0975999673207601 minutes
2024-03-02 12:31:57,105:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:57,105:INFO:Initializing create_model()
2024-03-02 12:31:57,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:57,105:INFO:Checking exceptions
2024-03-02 12:31:57,105:INFO:Importing libraries
2024-03-02 12:31:57,105:INFO:Copying training dataset
2024-03-02 12:31:57,108:INFO:Defining folds
2024-03-02 12:31:57,108:INFO:Declaring metric variables
2024-03-02 12:31:57,108:INFO:Importing untrained model
2024-03-02 12:31:57,108:INFO:Elastic Net Imported successfully
2024-03-02 12:31:57,109:INFO:Starting cross validation
2024-03-02 12:31:57,110:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:31:57,364:INFO:Calculating mean and std
2024-03-02 12:31:57,365:INFO:Creating metrics dataframe
2024-03-02 12:31:57,366:INFO:Uploading results into container
2024-03-02 12:31:57,367:INFO:Uploading model into container now
2024-03-02 12:31:57,367:INFO:_master_model_container: 4
2024-03-02 12:31:57,367:INFO:_display_container: 2
2024-03-02 12:31:57,367:INFO:ElasticNet(random_state=3027)
2024-03-02 12:31:57,367:INFO:create_model() successfully completed......................................
2024-03-02 12:31:57,451:INFO:SubProcess create_model() end ==================================
2024-03-02 12:31:57,451:INFO:Creating metrics dataframe
2024-03-02 12:31:57,453:INFO:Initializing Least Angle Regression
2024-03-02 12:31:57,453:INFO:Total runtime is 0.10340282519658407 minutes
2024-03-02 12:31:57,453:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:57,454:INFO:Initializing create_model()
2024-03-02 12:31:57,454:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:57,454:INFO:Checking exceptions
2024-03-02 12:31:57,454:INFO:Importing libraries
2024-03-02 12:31:57,454:INFO:Copying training dataset
2024-03-02 12:31:57,458:INFO:Defining folds
2024-03-02 12:31:57,458:INFO:Declaring metric variables
2024-03-02 12:31:57,458:INFO:Importing untrained model
2024-03-02 12:31:57,459:INFO:Least Angle Regression Imported successfully
2024-03-02 12:31:57,459:INFO:Starting cross validation
2024-03-02 12:31:57,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:31:57,714:INFO:Calculating mean and std
2024-03-02 12:31:57,715:INFO:Creating metrics dataframe
2024-03-02 12:31:57,716:INFO:Uploading results into container
2024-03-02 12:31:57,716:INFO:Uploading model into container now
2024-03-02 12:31:57,717:INFO:_master_model_container: 5
2024-03-02 12:31:57,717:INFO:_display_container: 2
2024-03-02 12:31:57,717:INFO:Lars(random_state=3027)
2024-03-02 12:31:57,717:INFO:create_model() successfully completed......................................
2024-03-02 12:31:57,799:INFO:SubProcess create_model() end ==================================
2024-03-02 12:31:57,799:INFO:Creating metrics dataframe
2024-03-02 12:31:57,801:INFO:Initializing Lasso Least Angle Regression
2024-03-02 12:31:57,801:INFO:Total runtime is 0.10919655561447145 minutes
2024-03-02 12:31:57,802:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:57,802:INFO:Initializing create_model()
2024-03-02 12:31:57,802:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:57,802:INFO:Checking exceptions
2024-03-02 12:31:57,802:INFO:Importing libraries
2024-03-02 12:31:57,802:INFO:Copying training dataset
2024-03-02 12:31:57,805:INFO:Defining folds
2024-03-02 12:31:57,805:INFO:Declaring metric variables
2024-03-02 12:31:57,806:INFO:Importing untrained model
2024-03-02 12:31:57,806:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 12:31:57,806:INFO:Starting cross validation
2024-03-02 12:31:57,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:31:58,079:INFO:Calculating mean and std
2024-03-02 12:31:58,080:INFO:Creating metrics dataframe
2024-03-02 12:31:58,081:INFO:Uploading results into container
2024-03-02 12:31:58,082:INFO:Uploading model into container now
2024-03-02 12:31:58,082:INFO:_master_model_container: 6
2024-03-02 12:31:58,082:INFO:_display_container: 2
2024-03-02 12:31:58,082:INFO:LassoLars(random_state=3027)
2024-03-02 12:31:58,082:INFO:create_model() successfully completed......................................
2024-03-02 12:31:58,166:INFO:SubProcess create_model() end ==================================
2024-03-02 12:31:58,166:INFO:Creating metrics dataframe
2024-03-02 12:31:58,168:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 12:31:58,168:INFO:Total runtime is 0.1153171976407369 minutes
2024-03-02 12:31:58,168:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:58,168:INFO:Initializing create_model()
2024-03-02 12:31:58,168:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:58,168:INFO:Checking exceptions
2024-03-02 12:31:58,168:INFO:Importing libraries
2024-03-02 12:31:58,168:INFO:Copying training dataset
2024-03-02 12:31:58,171:INFO:Defining folds
2024-03-02 12:31:58,171:INFO:Declaring metric variables
2024-03-02 12:31:58,172:INFO:Importing untrained model
2024-03-02 12:31:58,172:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 12:31:58,172:INFO:Starting cross validation
2024-03-02 12:31:58,173:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:31:58,443:INFO:Calculating mean and std
2024-03-02 12:31:58,444:INFO:Creating metrics dataframe
2024-03-02 12:31:58,445:INFO:Uploading results into container
2024-03-02 12:31:58,446:INFO:Uploading model into container now
2024-03-02 12:31:58,446:INFO:_master_model_container: 7
2024-03-02 12:31:58,446:INFO:_display_container: 2
2024-03-02 12:31:58,446:INFO:OrthogonalMatchingPursuit()
2024-03-02 12:31:58,446:INFO:create_model() successfully completed......................................
2024-03-02 12:31:58,530:INFO:SubProcess create_model() end ==================================
2024-03-02 12:31:58,530:INFO:Creating metrics dataframe
2024-03-02 12:31:58,532:INFO:Initializing Bayesian Ridge
2024-03-02 12:31:58,532:INFO:Total runtime is 0.1213877002398173 minutes
2024-03-02 12:31:58,532:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:58,532:INFO:Initializing create_model()
2024-03-02 12:31:58,532:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:58,532:INFO:Checking exceptions
2024-03-02 12:31:58,532:INFO:Importing libraries
2024-03-02 12:31:58,532:INFO:Copying training dataset
2024-03-02 12:31:58,535:INFO:Defining folds
2024-03-02 12:31:58,535:INFO:Declaring metric variables
2024-03-02 12:31:58,536:INFO:Importing untrained model
2024-03-02 12:31:58,536:INFO:Bayesian Ridge Imported successfully
2024-03-02 12:31:58,536:INFO:Starting cross validation
2024-03-02 12:31:58,537:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:31:58,821:INFO:Calculating mean and std
2024-03-02 12:31:58,822:INFO:Creating metrics dataframe
2024-03-02 12:31:58,823:INFO:Uploading results into container
2024-03-02 12:31:58,824:INFO:Uploading model into container now
2024-03-02 12:31:58,824:INFO:_master_model_container: 8
2024-03-02 12:31:58,824:INFO:_display_container: 2
2024-03-02 12:31:58,825:INFO:BayesianRidge()
2024-03-02 12:31:58,825:INFO:create_model() successfully completed......................................
2024-03-02 12:31:58,915:INFO:SubProcess create_model() end ==================================
2024-03-02 12:31:58,915:INFO:Creating metrics dataframe
2024-03-02 12:31:58,918:INFO:Initializing Passive Aggressive Regressor
2024-03-02 12:31:58,918:INFO:Total runtime is 0.12781174977620444 minutes
2024-03-02 12:31:58,918:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:58,918:INFO:Initializing create_model()
2024-03-02 12:31:58,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:58,918:INFO:Checking exceptions
2024-03-02 12:31:58,918:INFO:Importing libraries
2024-03-02 12:31:58,918:INFO:Copying training dataset
2024-03-02 12:31:58,921:INFO:Defining folds
2024-03-02 12:31:58,921:INFO:Declaring metric variables
2024-03-02 12:31:58,921:INFO:Importing untrained model
2024-03-02 12:31:58,922:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 12:31:58,922:INFO:Starting cross validation
2024-03-02 12:31:58,923:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:31:59,211:INFO:Calculating mean and std
2024-03-02 12:31:59,212:INFO:Creating metrics dataframe
2024-03-02 12:31:59,214:INFO:Uploading results into container
2024-03-02 12:31:59,214:INFO:Uploading model into container now
2024-03-02 12:31:59,214:INFO:_master_model_container: 9
2024-03-02 12:31:59,214:INFO:_display_container: 2
2024-03-02 12:31:59,214:INFO:PassiveAggressiveRegressor(random_state=3027)
2024-03-02 12:31:59,215:INFO:create_model() successfully completed......................................
2024-03-02 12:31:59,297:INFO:SubProcess create_model() end ==================================
2024-03-02 12:31:59,297:INFO:Creating metrics dataframe
2024-03-02 12:31:59,298:INFO:Initializing Huber Regressor
2024-03-02 12:31:59,298:INFO:Total runtime is 0.13415381113688152 minutes
2024-03-02 12:31:59,298:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:59,298:INFO:Initializing create_model()
2024-03-02 12:31:59,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:59,298:INFO:Checking exceptions
2024-03-02 12:31:59,298:INFO:Importing libraries
2024-03-02 12:31:59,298:INFO:Copying training dataset
2024-03-02 12:31:59,302:INFO:Defining folds
2024-03-02 12:31:59,302:INFO:Declaring metric variables
2024-03-02 12:31:59,302:INFO:Importing untrained model
2024-03-02 12:31:59,302:INFO:Huber Regressor Imported successfully
2024-03-02 12:31:59,303:INFO:Starting cross validation
2024-03-02 12:31:59,304:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:31:59,572:INFO:Calculating mean and std
2024-03-02 12:31:59,573:INFO:Creating metrics dataframe
2024-03-02 12:31:59,575:INFO:Uploading results into container
2024-03-02 12:31:59,575:INFO:Uploading model into container now
2024-03-02 12:31:59,575:INFO:_master_model_container: 10
2024-03-02 12:31:59,575:INFO:_display_container: 2
2024-03-02 12:31:59,575:INFO:HuberRegressor()
2024-03-02 12:31:59,575:INFO:create_model() successfully completed......................................
2024-03-02 12:31:59,659:INFO:SubProcess create_model() end ==================================
2024-03-02 12:31:59,659:INFO:Creating metrics dataframe
2024-03-02 12:31:59,661:INFO:Initializing K Neighbors Regressor
2024-03-02 12:31:59,661:INFO:Total runtime is 0.14020573695500693 minutes
2024-03-02 12:31:59,661:INFO:SubProcess create_model() called ==================================
2024-03-02 12:31:59,661:INFO:Initializing create_model()
2024-03-02 12:31:59,661:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:31:59,661:INFO:Checking exceptions
2024-03-02 12:31:59,661:INFO:Importing libraries
2024-03-02 12:31:59,662:INFO:Copying training dataset
2024-03-02 12:31:59,665:INFO:Defining folds
2024-03-02 12:31:59,665:INFO:Declaring metric variables
2024-03-02 12:31:59,665:INFO:Importing untrained model
2024-03-02 12:31:59,665:INFO:K Neighbors Regressor Imported successfully
2024-03-02 12:31:59,665:INFO:Starting cross validation
2024-03-02 12:31:59,666:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:32:00,047:INFO:Calculating mean and std
2024-03-02 12:32:00,048:INFO:Creating metrics dataframe
2024-03-02 12:32:00,049:INFO:Uploading results into container
2024-03-02 12:32:00,050:INFO:Uploading model into container now
2024-03-02 12:32:00,050:INFO:_master_model_container: 11
2024-03-02 12:32:00,050:INFO:_display_container: 2
2024-03-02 12:32:00,050:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 12:32:00,050:INFO:create_model() successfully completed......................................
2024-03-02 12:32:00,132:INFO:SubProcess create_model() end ==================================
2024-03-02 12:32:00,132:INFO:Creating metrics dataframe
2024-03-02 12:32:00,134:INFO:Initializing Decision Tree Regressor
2024-03-02 12:32:00,134:INFO:Total runtime is 0.1480874061584473 minutes
2024-03-02 12:32:00,134:INFO:SubProcess create_model() called ==================================
2024-03-02 12:32:00,135:INFO:Initializing create_model()
2024-03-02 12:32:00,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:32:00,135:INFO:Checking exceptions
2024-03-02 12:32:00,135:INFO:Importing libraries
2024-03-02 12:32:00,135:INFO:Copying training dataset
2024-03-02 12:32:00,138:INFO:Defining folds
2024-03-02 12:32:00,138:INFO:Declaring metric variables
2024-03-02 12:32:00,138:INFO:Importing untrained model
2024-03-02 12:32:00,138:INFO:Decision Tree Regressor Imported successfully
2024-03-02 12:32:00,138:INFO:Starting cross validation
2024-03-02 12:32:00,140:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:32:00,429:INFO:Calculating mean and std
2024-03-02 12:32:00,431:INFO:Creating metrics dataframe
2024-03-02 12:32:00,432:INFO:Uploading results into container
2024-03-02 12:32:00,433:INFO:Uploading model into container now
2024-03-02 12:32:00,433:INFO:_master_model_container: 12
2024-03-02 12:32:00,433:INFO:_display_container: 2
2024-03-02 12:32:00,433:INFO:DecisionTreeRegressor(random_state=3027)
2024-03-02 12:32:00,433:INFO:create_model() successfully completed......................................
2024-03-02 12:32:00,515:INFO:SubProcess create_model() end ==================================
2024-03-02 12:32:00,515:INFO:Creating metrics dataframe
2024-03-02 12:32:00,517:INFO:Initializing Random Forest Regressor
2024-03-02 12:32:00,517:INFO:Total runtime is 0.15446408192316693 minutes
2024-03-02 12:32:00,517:INFO:SubProcess create_model() called ==================================
2024-03-02 12:32:00,518:INFO:Initializing create_model()
2024-03-02 12:32:00,518:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:32:00,518:INFO:Checking exceptions
2024-03-02 12:32:00,518:INFO:Importing libraries
2024-03-02 12:32:00,518:INFO:Copying training dataset
2024-03-02 12:32:00,521:INFO:Defining folds
2024-03-02 12:32:00,521:INFO:Declaring metric variables
2024-03-02 12:32:00,521:INFO:Importing untrained model
2024-03-02 12:32:00,522:INFO:Random Forest Regressor Imported successfully
2024-03-02 12:32:00,522:INFO:Starting cross validation
2024-03-02 12:32:00,523:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:32:02,427:INFO:Calculating mean and std
2024-03-02 12:32:02,428:INFO:Creating metrics dataframe
2024-03-02 12:32:02,430:INFO:Uploading results into container
2024-03-02 12:32:02,430:INFO:Uploading model into container now
2024-03-02 12:32:02,431:INFO:_master_model_container: 13
2024-03-02 12:32:02,431:INFO:_display_container: 2
2024-03-02 12:32:02,431:INFO:RandomForestRegressor(n_jobs=-1, random_state=3027)
2024-03-02 12:32:02,431:INFO:create_model() successfully completed......................................
2024-03-02 12:32:02,528:INFO:SubProcess create_model() end ==================================
2024-03-02 12:32:02,528:INFO:Creating metrics dataframe
2024-03-02 12:32:02,531:INFO:Initializing Extra Trees Regressor
2024-03-02 12:32:02,531:INFO:Total runtime is 0.1880423426628113 minutes
2024-03-02 12:32:02,531:INFO:SubProcess create_model() called ==================================
2024-03-02 12:32:02,531:INFO:Initializing create_model()
2024-03-02 12:32:02,531:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:32:02,531:INFO:Checking exceptions
2024-03-02 12:32:02,531:INFO:Importing libraries
2024-03-02 12:32:02,531:INFO:Copying training dataset
2024-03-02 12:32:02,535:INFO:Defining folds
2024-03-02 12:32:02,535:INFO:Declaring metric variables
2024-03-02 12:32:02,535:INFO:Importing untrained model
2024-03-02 12:32:02,536:INFO:Extra Trees Regressor Imported successfully
2024-03-02 12:32:02,536:INFO:Starting cross validation
2024-03-02 12:32:02,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:32:03,713:INFO:Calculating mean and std
2024-03-02 12:32:03,714:INFO:Creating metrics dataframe
2024-03-02 12:32:03,715:INFO:Uploading results into container
2024-03-02 12:32:03,716:INFO:Uploading model into container now
2024-03-02 12:32:03,716:INFO:_master_model_container: 14
2024-03-02 12:32:03,716:INFO:_display_container: 2
2024-03-02 12:32:03,716:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3027)
2024-03-02 12:32:03,717:INFO:create_model() successfully completed......................................
2024-03-02 12:32:03,799:INFO:SubProcess create_model() end ==================================
2024-03-02 12:32:03,800:INFO:Creating metrics dataframe
2024-03-02 12:32:03,802:INFO:Initializing AdaBoost Regressor
2024-03-02 12:32:03,802:INFO:Total runtime is 0.2092167894045512 minutes
2024-03-02 12:32:03,802:INFO:SubProcess create_model() called ==================================
2024-03-02 12:32:03,802:INFO:Initializing create_model()
2024-03-02 12:32:03,802:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:32:03,802:INFO:Checking exceptions
2024-03-02 12:32:03,802:INFO:Importing libraries
2024-03-02 12:32:03,802:INFO:Copying training dataset
2024-03-02 12:32:03,805:INFO:Defining folds
2024-03-02 12:32:03,805:INFO:Declaring metric variables
2024-03-02 12:32:03,805:INFO:Importing untrained model
2024-03-02 12:32:03,806:INFO:AdaBoost Regressor Imported successfully
2024-03-02 12:32:03,806:INFO:Starting cross validation
2024-03-02 12:32:03,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:32:04,301:INFO:Calculating mean and std
2024-03-02 12:32:04,303:INFO:Creating metrics dataframe
2024-03-02 12:32:04,305:INFO:Uploading results into container
2024-03-02 12:32:04,305:INFO:Uploading model into container now
2024-03-02 12:32:04,305:INFO:_master_model_container: 15
2024-03-02 12:32:04,305:INFO:_display_container: 2
2024-03-02 12:32:04,305:INFO:AdaBoostRegressor(random_state=3027)
2024-03-02 12:32:04,305:INFO:create_model() successfully completed......................................
2024-03-02 12:32:04,390:INFO:SubProcess create_model() end ==================================
2024-03-02 12:32:04,390:INFO:Creating metrics dataframe
2024-03-02 12:32:04,392:INFO:Initializing Gradient Boosting Regressor
2024-03-02 12:32:04,392:INFO:Total runtime is 0.21905755599339805 minutes
2024-03-02 12:32:04,392:INFO:SubProcess create_model() called ==================================
2024-03-02 12:32:04,392:INFO:Initializing create_model()
2024-03-02 12:32:04,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:32:04,392:INFO:Checking exceptions
2024-03-02 12:32:04,392:INFO:Importing libraries
2024-03-02 12:32:04,392:INFO:Copying training dataset
2024-03-02 12:32:04,395:INFO:Defining folds
2024-03-02 12:32:04,396:INFO:Declaring metric variables
2024-03-02 12:32:04,396:INFO:Importing untrained model
2024-03-02 12:32:04,396:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 12:32:04,396:INFO:Starting cross validation
2024-03-02 12:32:04,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:32:05,361:INFO:Calculating mean and std
2024-03-02 12:32:05,362:INFO:Creating metrics dataframe
2024-03-02 12:32:05,363:INFO:Uploading results into container
2024-03-02 12:32:05,363:INFO:Uploading model into container now
2024-03-02 12:32:05,364:INFO:_master_model_container: 16
2024-03-02 12:32:05,364:INFO:_display_container: 2
2024-03-02 12:32:05,364:INFO:GradientBoostingRegressor(random_state=3027)
2024-03-02 12:32:05,364:INFO:create_model() successfully completed......................................
2024-03-02 12:32:05,446:INFO:SubProcess create_model() end ==================================
2024-03-02 12:32:05,447:INFO:Creating metrics dataframe
2024-03-02 12:32:05,449:INFO:Initializing Extreme Gradient Boosting
2024-03-02 12:32:05,449:INFO:Total runtime is 0.23666638930638634 minutes
2024-03-02 12:32:05,449:INFO:SubProcess create_model() called ==================================
2024-03-02 12:32:05,449:INFO:Initializing create_model()
2024-03-02 12:32:05,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:32:05,449:INFO:Checking exceptions
2024-03-02 12:32:05,449:INFO:Importing libraries
2024-03-02 12:32:05,449:INFO:Copying training dataset
2024-03-02 12:32:05,452:INFO:Defining folds
2024-03-02 12:32:05,452:INFO:Declaring metric variables
2024-03-02 12:32:05,452:INFO:Importing untrained model
2024-03-02 12:32:05,453:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 12:32:05,453:INFO:Starting cross validation
2024-03-02 12:32:05,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:32:06,852:INFO:Calculating mean and std
2024-03-02 12:32:06,853:INFO:Creating metrics dataframe
2024-03-02 12:32:06,855:INFO:Uploading results into container
2024-03-02 12:32:06,855:INFO:Uploading model into container now
2024-03-02 12:32:06,855:INFO:_master_model_container: 17
2024-03-02 12:32:06,855:INFO:_display_container: 2
2024-03-02 12:32:06,856:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=3027, ...)
2024-03-02 12:32:06,856:INFO:create_model() successfully completed......................................
2024-03-02 12:32:06,943:INFO:SubProcess create_model() end ==================================
2024-03-02 12:32:06,943:INFO:Creating metrics dataframe
2024-03-02 12:32:06,946:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 12:32:06,946:INFO:Total runtime is 0.26162442366282146 minutes
2024-03-02 12:32:06,946:INFO:SubProcess create_model() called ==================================
2024-03-02 12:32:06,946:INFO:Initializing create_model()
2024-03-02 12:32:06,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:32:06,946:INFO:Checking exceptions
2024-03-02 12:32:06,946:INFO:Importing libraries
2024-03-02 12:32:06,947:INFO:Copying training dataset
2024-03-02 12:32:06,952:INFO:Defining folds
2024-03-02 12:32:06,952:INFO:Declaring metric variables
2024-03-02 12:32:06,952:INFO:Importing untrained model
2024-03-02 12:32:06,952:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 12:32:06,952:INFO:Starting cross validation
2024-03-02 12:32:06,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:32:08,152:INFO:Calculating mean and std
2024-03-02 12:32:08,153:INFO:Creating metrics dataframe
2024-03-02 12:32:08,155:INFO:Uploading results into container
2024-03-02 12:32:08,156:INFO:Uploading model into container now
2024-03-02 12:32:08,156:INFO:_master_model_container: 18
2024-03-02 12:32:08,156:INFO:_display_container: 2
2024-03-02 12:32:08,156:INFO:LGBMRegressor(n_jobs=-1, random_state=3027)
2024-03-02 12:32:08,156:INFO:create_model() successfully completed......................................
2024-03-02 12:32:08,259:INFO:SubProcess create_model() end ==================================
2024-03-02 12:32:08,260:INFO:Creating metrics dataframe
2024-03-02 12:32:08,262:INFO:Initializing Dummy Regressor
2024-03-02 12:32:08,262:INFO:Total runtime is 0.28355756998062137 minutes
2024-03-02 12:32:08,262:INFO:SubProcess create_model() called ==================================
2024-03-02 12:32:08,262:INFO:Initializing create_model()
2024-03-02 12:32:08,262:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027B0E394220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:32:08,262:INFO:Checking exceptions
2024-03-02 12:32:08,263:INFO:Importing libraries
2024-03-02 12:32:08,263:INFO:Copying training dataset
2024-03-02 12:32:08,267:INFO:Defining folds
2024-03-02 12:32:08,267:INFO:Declaring metric variables
2024-03-02 12:32:08,267:INFO:Importing untrained model
2024-03-02 12:32:08,268:INFO:Dummy Regressor Imported successfully
2024-03-02 12:32:08,268:INFO:Starting cross validation
2024-03-02 12:32:08,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:32:08,532:INFO:Calculating mean and std
2024-03-02 12:32:08,533:INFO:Creating metrics dataframe
2024-03-02 12:32:08,534:INFO:Uploading results into container
2024-03-02 12:32:08,535:INFO:Uploading model into container now
2024-03-02 12:32:08,535:INFO:_master_model_container: 19
2024-03-02 12:32:08,535:INFO:_display_container: 2
2024-03-02 12:32:08,535:INFO:DummyRegressor()
2024-03-02 12:32:08,535:INFO:create_model() successfully completed......................................
2024-03-02 12:32:08,618:INFO:SubProcess create_model() end ==================================
2024-03-02 12:32:08,618:INFO:Creating metrics dataframe
2024-03-02 12:32:08,621:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 12:32:08,622:INFO:Initializing create_model()
2024-03-02 12:32:08,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027B0D64BC40>, estimator=ElasticNet(random_state=3027), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:32:08,622:INFO:Checking exceptions
2024-03-02 12:32:08,622:INFO:Importing libraries
2024-03-02 12:32:08,622:INFO:Copying training dataset
2024-03-02 12:32:08,626:INFO:Defining folds
2024-03-02 12:32:08,626:INFO:Declaring metric variables
2024-03-02 12:32:08,626:INFO:Importing untrained model
2024-03-02 12:32:08,626:INFO:Declaring custom model
2024-03-02 12:32:08,626:INFO:Elastic Net Imported successfully
2024-03-02 12:32:08,627:INFO:Cross validation set to False
2024-03-02 12:32:08,627:INFO:Fitting Model
2024-03-02 12:32:08,706:INFO:ElasticNet(random_state=3027)
2024-03-02 12:32:08,706:INFO:create_model() successfully completed......................................
2024-03-02 12:32:08,802:INFO:_master_model_container: 19
2024-03-02 12:32:08,802:INFO:_display_container: 2
2024-03-02 12:32:08,802:INFO:ElasticNet(random_state=3027)
2024-03-02 12:32:08,802:INFO:compare_models() successfully completed......................................
2024-03-02 12:34:45,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:34:45,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:34:45,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:34:45,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:35:02,024:WARNING:D:\HackNITR\automata\polls\views.py:30: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:35:02,063:WARNING:D:\HackNITR\automata\polls\views.py:32: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:35:02,068:INFO:PyCaret RegressionExperiment
2024-03-02 12:35:02,068:INFO:Logging name: reg-default-name
2024-03-02 12:35:02,068:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 12:35:02,068:INFO:version 3.3.0
2024-03-02 12:35:02,069:INFO:Initializing setup()
2024-03-02 12:35:02,069:INFO:self.USI: a6f6
2024-03-02 12:35:02,069:INFO:self._variable_keys: {'log_plots_param', 'idx', 'seed', 'n_jobs_param', 'memory', 'gpu_n_jobs_param', 'y', 'gpu_param', 'html_param', 'fold_generator', 'X_train', 'X', 'y_test', 'transform_target_param', '_ml_usecase', 'target_param', 'pipeline', '_available_plots', 'y_train', 'X_test', 'logging_param', 'USI', 'fold_groups_param', 'data', 'fold_shuffle_param', 'exp_name_log', 'exp_id'}
2024-03-02 12:35:02,069:INFO:Checking environment
2024-03-02 12:35:02,069:INFO:python_version: 3.9.0
2024-03-02 12:35:02,069:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 12:35:02,069:INFO:machine: AMD64
2024-03-02 12:35:02,069:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 12:35:02,076:INFO:Memory: svmem(total=16476958720, available=4354736128, percent=73.6, used=12122222592, free=4354736128)
2024-03-02 12:35:02,076:INFO:Physical Core: 8
2024-03-02 12:35:02,076:INFO:Logical Core: 16
2024-03-02 12:35:02,076:INFO:Checking libraries
2024-03-02 12:35:02,076:INFO:System:
2024-03-02 12:35:02,076:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 12:35:02,076:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 12:35:02,076:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 12:35:02,076:INFO:PyCaret required dependencies:
2024-03-02 12:35:02,111:INFO:                 pip: 23.3.2
2024-03-02 12:35:02,111:INFO:          setuptools: 49.2.1
2024-03-02 12:35:02,111:INFO:             pycaret: 3.3.0
2024-03-02 12:35:02,112:INFO:             IPython: 8.18.1
2024-03-02 12:35:02,112:INFO:          ipywidgets: 8.1.2
2024-03-02 12:35:02,112:INFO:                tqdm: 4.66.1
2024-03-02 12:35:02,112:INFO:               numpy: 1.25.2
2024-03-02 12:35:02,112:INFO:              pandas: 2.1.1
2024-03-02 12:35:02,112:INFO:              jinja2: 3.1.2
2024-03-02 12:35:02,112:INFO:               scipy: 1.11.4
2024-03-02 12:35:02,112:INFO:              joblib: 1.3.2
2024-03-02 12:35:02,112:INFO:             sklearn: 1.4.1.post1
2024-03-02 12:35:02,112:INFO:                pyod: 1.1.3
2024-03-02 12:35:02,112:INFO:            imblearn: 0.12.0
2024-03-02 12:35:02,112:INFO:   category_encoders: 2.6.3
2024-03-02 12:35:02,112:INFO:            lightgbm: 4.3.0
2024-03-02 12:35:02,112:INFO:               numba: 0.58.1
2024-03-02 12:35:02,112:INFO:            requests: 2.31.0
2024-03-02 12:35:02,112:INFO:          matplotlib: 3.7.5
2024-03-02 12:35:02,112:INFO:          scikitplot: 0.3.7
2024-03-02 12:35:02,112:INFO:         yellowbrick: 1.5
2024-03-02 12:35:02,112:INFO:              plotly: 5.19.0
2024-03-02 12:35:02,112:INFO:    plotly-resampler: Not installed
2024-03-02 12:35:02,112:INFO:             kaleido: 0.2.1
2024-03-02 12:35:02,112:INFO:           schemdraw: 0.15
2024-03-02 12:35:02,112:INFO:         statsmodels: 0.14.1
2024-03-02 12:35:02,112:INFO:              sktime: 0.27.0
2024-03-02 12:35:02,112:INFO:               tbats: 1.1.3
2024-03-02 12:35:02,112:INFO:            pmdarima: 2.0.4
2024-03-02 12:35:02,112:INFO:              psutil: 5.9.8
2024-03-02 12:35:02,112:INFO:          markupsafe: 2.1.3
2024-03-02 12:35:02,112:INFO:             pickle5: Not installed
2024-03-02 12:35:02,112:INFO:         cloudpickle: 3.0.0
2024-03-02 12:35:02,112:INFO:         deprecation: 2.1.0
2024-03-02 12:35:02,112:INFO:              xxhash: 3.4.1
2024-03-02 12:35:02,112:INFO:           wurlitzer: Not installed
2024-03-02 12:35:02,112:INFO:PyCaret optional dependencies:
2024-03-02 12:35:02,134:INFO:                shap: Not installed
2024-03-02 12:35:02,134:INFO:           interpret: Not installed
2024-03-02 12:35:02,134:INFO:                umap: Not installed
2024-03-02 12:35:02,134:INFO:     ydata_profiling: 4.6.5
2024-03-02 12:35:02,134:INFO:  explainerdashboard: Not installed
2024-03-02 12:35:02,134:INFO:             autoviz: Not installed
2024-03-02 12:35:02,134:INFO:           fairlearn: Not installed
2024-03-02 12:35:02,134:INFO:          deepchecks: Not installed
2024-03-02 12:35:02,134:INFO:             xgboost: 2.0.3
2024-03-02 12:35:02,134:INFO:            catboost: Not installed
2024-03-02 12:35:02,134:INFO:              kmodes: Not installed
2024-03-02 12:35:02,135:INFO:             mlxtend: Not installed
2024-03-02 12:35:02,135:INFO:       statsforecast: Not installed
2024-03-02 12:35:02,135:INFO:        tune_sklearn: Not installed
2024-03-02 12:35:02,135:INFO:                 ray: Not installed
2024-03-02 12:35:02,135:INFO:            hyperopt: Not installed
2024-03-02 12:35:02,135:INFO:              optuna: Not installed
2024-03-02 12:35:02,135:INFO:               skopt: Not installed
2024-03-02 12:35:02,135:INFO:              mlflow: Not installed
2024-03-02 12:35:02,135:INFO:              gradio: Not installed
2024-03-02 12:35:02,135:INFO:             fastapi: Not installed
2024-03-02 12:35:02,135:INFO:             uvicorn: Not installed
2024-03-02 12:35:02,135:INFO:              m2cgen: Not installed
2024-03-02 12:35:02,135:INFO:           evidently: Not installed
2024-03-02 12:35:02,135:INFO:               fugue: Not installed
2024-03-02 12:35:02,135:INFO:           streamlit: 1.27.2
2024-03-02 12:35:02,135:INFO:             prophet: Not installed
2024-03-02 12:35:02,135:INFO:None
2024-03-02 12:35:02,135:INFO:Set up data.
2024-03-02 12:35:02,150:INFO:Set up folding strategy.
2024-03-02 12:35:02,150:INFO:Set up train/test split.
2024-03-02 12:35:02,158:INFO:Set up index.
2024-03-02 12:35:02,159:INFO:Assigning column types.
2024-03-02 12:35:02,161:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 12:35:02,161:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,165:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,168:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,214:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,249:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,250:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:02,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:02,252:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,256:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,259:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,310:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,345:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,346:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:02,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:02,348:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 12:35:02,352:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,355:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,402:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,437:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:02,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:02,443:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,446:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,526:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,527:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:02,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:02,530:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 12:35:02,537:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,583:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,618:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,618:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:02,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:02,627:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,674:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,709:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,709:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:02,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:02,712:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 12:35:02,765:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,800:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,801:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:02,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:02,855:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,890:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,890:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:02,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:02,892:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 12:35:02,946:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:02,981:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:02,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:03,037:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:03,080:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:03,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:03,082:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 12:35:03,171:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:03,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:03,262:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:03,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:03,267:INFO:Preparing preprocessing pipeline...
2024-03-02 12:35:03,267:INFO:Set up simple imputation.
2024-03-02 12:35:03,270:INFO:Set up encoding of categorical features.
2024-03-02 12:35:03,271:INFO:Set up column name cleaning.
2024-03-02 12:35:03,458:INFO:Finished creating preprocessing pipeline.
2024-03-02 12:35:03,465:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 12:35:03,465:INFO:Creating final display dataframe.
2024-03-02 12:35:03,904:INFO:Setup _display_container:                     Description             Value
0                    Session id               208
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              a6f6
2024-03-02 12:35:03,997:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:03,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:04,087:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:04,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:04,090:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 12:35:04,090:INFO:setup() successfully completed in 2.02s...............
2024-03-02 12:35:04,091:INFO:Initializing compare_models()
2024-03-02 12:35:04,091:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 12:35:04,091:INFO:Checking exceptions
2024-03-02 12:35:04,093:INFO:Preparing display monitor
2024-03-02 12:35:04,095:INFO:Time budget is 1 minutes
2024-03-02 12:35:04,095:INFO:Initializing Linear Regression
2024-03-02 12:35:04,095:INFO:Total runtime is 0.0 minutes
2024-03-02 12:35:04,095:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:04,096:INFO:Initializing create_model()
2024-03-02 12:35:04,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:04,096:INFO:Checking exceptions
2024-03-02 12:35:04,096:INFO:Importing libraries
2024-03-02 12:35:04,096:INFO:Copying training dataset
2024-03-02 12:35:04,100:INFO:Defining folds
2024-03-02 12:35:04,100:INFO:Declaring metric variables
2024-03-02 12:35:04,100:INFO:Importing untrained model
2024-03-02 12:35:04,101:INFO:Linear Regression Imported successfully
2024-03-02 12:35:04,101:INFO:Starting cross validation
2024-03-02 12:35:04,106:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:06,838:INFO:Calculating mean and std
2024-03-02 12:35:06,840:INFO:Creating metrics dataframe
2024-03-02 12:35:06,842:INFO:Uploading results into container
2024-03-02 12:35:06,842:INFO:Uploading model into container now
2024-03-02 12:35:06,842:INFO:_master_model_container: 1
2024-03-02 12:35:06,842:INFO:_display_container: 2
2024-03-02 12:35:06,843:INFO:LinearRegression(n_jobs=-1)
2024-03-02 12:35:06,843:INFO:create_model() successfully completed......................................
2024-03-02 12:35:06,943:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:06,943:INFO:Creating metrics dataframe
2024-03-02 12:35:06,946:INFO:Initializing Lasso Regression
2024-03-02 12:35:06,946:INFO:Total runtime is 0.04752873182296753 minutes
2024-03-02 12:35:06,946:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:06,946:INFO:Initializing create_model()
2024-03-02 12:35:06,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:06,946:INFO:Checking exceptions
2024-03-02 12:35:06,946:INFO:Importing libraries
2024-03-02 12:35:06,946:INFO:Copying training dataset
2024-03-02 12:35:06,951:INFO:Defining folds
2024-03-02 12:35:06,951:INFO:Declaring metric variables
2024-03-02 12:35:06,951:INFO:Importing untrained model
2024-03-02 12:35:06,951:INFO:Lasso Regression Imported successfully
2024-03-02 12:35:06,951:INFO:Starting cross validation
2024-03-02 12:35:06,953:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:08,797:INFO:Calculating mean and std
2024-03-02 12:35:08,798:INFO:Creating metrics dataframe
2024-03-02 12:35:08,800:INFO:Uploading results into container
2024-03-02 12:35:08,800:INFO:Uploading model into container now
2024-03-02 12:35:08,800:INFO:_master_model_container: 2
2024-03-02 12:35:08,801:INFO:_display_container: 2
2024-03-02 12:35:08,801:INFO:Lasso(random_state=208)
2024-03-02 12:35:08,801:INFO:create_model() successfully completed......................................
2024-03-02 12:35:08,886:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:08,886:INFO:Creating metrics dataframe
2024-03-02 12:35:08,888:INFO:Initializing Ridge Regression
2024-03-02 12:35:08,888:INFO:Total runtime is 0.07988736232121785 minutes
2024-03-02 12:35:08,888:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:08,889:INFO:Initializing create_model()
2024-03-02 12:35:08,889:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:08,889:INFO:Checking exceptions
2024-03-02 12:35:08,889:INFO:Importing libraries
2024-03-02 12:35:08,889:INFO:Copying training dataset
2024-03-02 12:35:08,892:INFO:Defining folds
2024-03-02 12:35:08,892:INFO:Declaring metric variables
2024-03-02 12:35:08,892:INFO:Importing untrained model
2024-03-02 12:35:08,892:INFO:Ridge Regression Imported successfully
2024-03-02 12:35:08,892:INFO:Starting cross validation
2024-03-02 12:35:08,893:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:09,025:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.8113e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:09,026:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.36681e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:09,037:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.114e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:09,048:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.5788e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:09,049:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.58207e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:09,052:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.14701e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:09,055:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.35968e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:09,066:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.6501e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:09,081:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.54797e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:09,084:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.6137e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:09,115:INFO:Calculating mean and std
2024-03-02 12:35:09,116:INFO:Creating metrics dataframe
2024-03-02 12:35:09,117:INFO:Uploading results into container
2024-03-02 12:35:09,118:INFO:Uploading model into container now
2024-03-02 12:35:09,118:INFO:_master_model_container: 3
2024-03-02 12:35:09,118:INFO:_display_container: 2
2024-03-02 12:35:09,118:INFO:Ridge(random_state=208)
2024-03-02 12:35:09,118:INFO:create_model() successfully completed......................................
2024-03-02 12:35:09,199:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:09,199:INFO:Creating metrics dataframe
2024-03-02 12:35:09,201:INFO:Initializing Elastic Net
2024-03-02 12:35:09,201:INFO:Total runtime is 0.08510547478993732 minutes
2024-03-02 12:35:09,201:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:09,201:INFO:Initializing create_model()
2024-03-02 12:35:09,201:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:09,202:INFO:Checking exceptions
2024-03-02 12:35:09,202:INFO:Importing libraries
2024-03-02 12:35:09,202:INFO:Copying training dataset
2024-03-02 12:35:09,205:INFO:Defining folds
2024-03-02 12:35:09,205:INFO:Declaring metric variables
2024-03-02 12:35:09,205:INFO:Importing untrained model
2024-03-02 12:35:09,205:INFO:Elastic Net Imported successfully
2024-03-02 12:35:09,205:INFO:Starting cross validation
2024-03-02 12:35:09,206:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:09,433:INFO:Calculating mean and std
2024-03-02 12:35:09,434:INFO:Creating metrics dataframe
2024-03-02 12:35:09,435:INFO:Uploading results into container
2024-03-02 12:35:09,436:INFO:Uploading model into container now
2024-03-02 12:35:09,436:INFO:_master_model_container: 4
2024-03-02 12:35:09,436:INFO:_display_container: 2
2024-03-02 12:35:09,436:INFO:ElasticNet(random_state=208)
2024-03-02 12:35:09,436:INFO:create_model() successfully completed......................................
2024-03-02 12:35:09,517:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:09,517:INFO:Creating metrics dataframe
2024-03-02 12:35:09,519:INFO:Initializing Least Angle Regression
2024-03-02 12:35:09,519:INFO:Total runtime is 0.09040623903274535 minutes
2024-03-02 12:35:09,519:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:09,519:INFO:Initializing create_model()
2024-03-02 12:35:09,519:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:09,519:INFO:Checking exceptions
2024-03-02 12:35:09,519:INFO:Importing libraries
2024-03-02 12:35:09,519:INFO:Copying training dataset
2024-03-02 12:35:09,522:INFO:Defining folds
2024-03-02 12:35:09,522:INFO:Declaring metric variables
2024-03-02 12:35:09,522:INFO:Importing untrained model
2024-03-02 12:35:09,523:INFO:Least Angle Regression Imported successfully
2024-03-02 12:35:09,523:INFO:Starting cross validation
2024-03-02 12:35:09,524:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:09,753:INFO:Calculating mean and std
2024-03-02 12:35:09,754:INFO:Creating metrics dataframe
2024-03-02 12:35:09,755:INFO:Uploading results into container
2024-03-02 12:35:09,756:INFO:Uploading model into container now
2024-03-02 12:35:09,756:INFO:_master_model_container: 5
2024-03-02 12:35:09,756:INFO:_display_container: 2
2024-03-02 12:35:09,756:INFO:Lars(random_state=208)
2024-03-02 12:35:09,756:INFO:create_model() successfully completed......................................
2024-03-02 12:35:09,836:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:09,836:INFO:Creating metrics dataframe
2024-03-02 12:35:09,838:INFO:Initializing Lasso Least Angle Regression
2024-03-02 12:35:09,839:INFO:Total runtime is 0.09573198556900023 minutes
2024-03-02 12:35:09,839:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:09,839:INFO:Initializing create_model()
2024-03-02 12:35:09,839:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:09,839:INFO:Checking exceptions
2024-03-02 12:35:09,839:INFO:Importing libraries
2024-03-02 12:35:09,839:INFO:Copying training dataset
2024-03-02 12:35:09,843:INFO:Defining folds
2024-03-02 12:35:09,843:INFO:Declaring metric variables
2024-03-02 12:35:09,843:INFO:Importing untrained model
2024-03-02 12:35:09,843:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 12:35:09,843:INFO:Starting cross validation
2024-03-02 12:35:09,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:10,112:INFO:Calculating mean and std
2024-03-02 12:35:10,113:INFO:Creating metrics dataframe
2024-03-02 12:35:10,114:INFO:Uploading results into container
2024-03-02 12:35:10,115:INFO:Uploading model into container now
2024-03-02 12:35:10,115:INFO:_master_model_container: 6
2024-03-02 12:35:10,115:INFO:_display_container: 2
2024-03-02 12:35:10,115:INFO:LassoLars(random_state=208)
2024-03-02 12:35:10,115:INFO:create_model() successfully completed......................................
2024-03-02 12:35:10,195:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:10,195:INFO:Creating metrics dataframe
2024-03-02 12:35:10,197:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 12:35:10,197:INFO:Total runtime is 0.10171271165211994 minutes
2024-03-02 12:35:10,197:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:10,197:INFO:Initializing create_model()
2024-03-02 12:35:10,197:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:10,197:INFO:Checking exceptions
2024-03-02 12:35:10,197:INFO:Importing libraries
2024-03-02 12:35:10,197:INFO:Copying training dataset
2024-03-02 12:35:10,200:INFO:Defining folds
2024-03-02 12:35:10,200:INFO:Declaring metric variables
2024-03-02 12:35:10,200:INFO:Importing untrained model
2024-03-02 12:35:10,201:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 12:35:10,201:INFO:Starting cross validation
2024-03-02 12:35:10,202:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:10,427:INFO:Calculating mean and std
2024-03-02 12:35:10,428:INFO:Creating metrics dataframe
2024-03-02 12:35:10,429:INFO:Uploading results into container
2024-03-02 12:35:10,430:INFO:Uploading model into container now
2024-03-02 12:35:10,430:INFO:_master_model_container: 7
2024-03-02 12:35:10,430:INFO:_display_container: 2
2024-03-02 12:35:10,430:INFO:OrthogonalMatchingPursuit()
2024-03-02 12:35:10,430:INFO:create_model() successfully completed......................................
2024-03-02 12:35:10,510:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:10,510:INFO:Creating metrics dataframe
2024-03-02 12:35:10,512:INFO:Initializing Bayesian Ridge
2024-03-02 12:35:10,512:INFO:Total runtime is 0.10696383317311603 minutes
2024-03-02 12:35:10,513:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:10,513:INFO:Initializing create_model()
2024-03-02 12:35:10,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:10,513:INFO:Checking exceptions
2024-03-02 12:35:10,513:INFO:Importing libraries
2024-03-02 12:35:10,513:INFO:Copying training dataset
2024-03-02 12:35:10,516:INFO:Defining folds
2024-03-02 12:35:10,516:INFO:Declaring metric variables
2024-03-02 12:35:10,516:INFO:Importing untrained model
2024-03-02 12:35:10,516:INFO:Bayesian Ridge Imported successfully
2024-03-02 12:35:10,517:INFO:Starting cross validation
2024-03-02 12:35:10,518:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:10,744:INFO:Calculating mean and std
2024-03-02 12:35:10,745:INFO:Creating metrics dataframe
2024-03-02 12:35:10,746:INFO:Uploading results into container
2024-03-02 12:35:10,746:INFO:Uploading model into container now
2024-03-02 12:35:10,747:INFO:_master_model_container: 8
2024-03-02 12:35:10,747:INFO:_display_container: 2
2024-03-02 12:35:10,747:INFO:BayesianRidge()
2024-03-02 12:35:10,747:INFO:create_model() successfully completed......................................
2024-03-02 12:35:10,828:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:10,828:INFO:Creating metrics dataframe
2024-03-02 12:35:10,830:INFO:Initializing Passive Aggressive Regressor
2024-03-02 12:35:10,830:INFO:Total runtime is 0.11225944757461546 minutes
2024-03-02 12:35:10,830:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:10,830:INFO:Initializing create_model()
2024-03-02 12:35:10,830:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:10,830:INFO:Checking exceptions
2024-03-02 12:35:10,830:INFO:Importing libraries
2024-03-02 12:35:10,830:INFO:Copying training dataset
2024-03-02 12:35:10,833:INFO:Defining folds
2024-03-02 12:35:10,833:INFO:Declaring metric variables
2024-03-02 12:35:10,833:INFO:Importing untrained model
2024-03-02 12:35:10,834:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 12:35:10,834:INFO:Starting cross validation
2024-03-02 12:35:10,835:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:11,061:INFO:Calculating mean and std
2024-03-02 12:35:11,062:INFO:Creating metrics dataframe
2024-03-02 12:35:11,063:INFO:Uploading results into container
2024-03-02 12:35:11,064:INFO:Uploading model into container now
2024-03-02 12:35:11,064:INFO:_master_model_container: 9
2024-03-02 12:35:11,064:INFO:_display_container: 2
2024-03-02 12:35:11,064:INFO:PassiveAggressiveRegressor(random_state=208)
2024-03-02 12:35:11,064:INFO:create_model() successfully completed......................................
2024-03-02 12:35:11,145:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:11,145:INFO:Creating metrics dataframe
2024-03-02 12:35:11,148:INFO:Initializing Huber Regressor
2024-03-02 12:35:11,148:INFO:Total runtime is 0.11755278110504148 minutes
2024-03-02 12:35:11,148:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:11,148:INFO:Initializing create_model()
2024-03-02 12:35:11,148:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:11,148:INFO:Checking exceptions
2024-03-02 12:35:11,148:INFO:Importing libraries
2024-03-02 12:35:11,148:INFO:Copying training dataset
2024-03-02 12:35:11,153:INFO:Defining folds
2024-03-02 12:35:11,153:INFO:Declaring metric variables
2024-03-02 12:35:11,153:INFO:Importing untrained model
2024-03-02 12:35:11,153:INFO:Huber Regressor Imported successfully
2024-03-02 12:35:11,154:INFO:Starting cross validation
2024-03-02 12:35:11,155:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:11,410:INFO:Calculating mean and std
2024-03-02 12:35:11,411:INFO:Creating metrics dataframe
2024-03-02 12:35:11,412:INFO:Uploading results into container
2024-03-02 12:35:11,412:INFO:Uploading model into container now
2024-03-02 12:35:11,413:INFO:_master_model_container: 10
2024-03-02 12:35:11,413:INFO:_display_container: 2
2024-03-02 12:35:11,413:INFO:HuberRegressor()
2024-03-02 12:35:11,413:INFO:create_model() successfully completed......................................
2024-03-02 12:35:11,493:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:11,493:INFO:Creating metrics dataframe
2024-03-02 12:35:11,495:INFO:Initializing K Neighbors Regressor
2024-03-02 12:35:11,495:INFO:Total runtime is 0.1233428120613098 minutes
2024-03-02 12:35:11,495:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:11,495:INFO:Initializing create_model()
2024-03-02 12:35:11,495:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:11,495:INFO:Checking exceptions
2024-03-02 12:35:11,495:INFO:Importing libraries
2024-03-02 12:35:11,496:INFO:Copying training dataset
2024-03-02 12:35:11,498:INFO:Defining folds
2024-03-02 12:35:11,499:INFO:Declaring metric variables
2024-03-02 12:35:11,499:INFO:Importing untrained model
2024-03-02 12:35:11,499:INFO:K Neighbors Regressor Imported successfully
2024-03-02 12:35:11,499:INFO:Starting cross validation
2024-03-02 12:35:11,500:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:11,807:INFO:Calculating mean and std
2024-03-02 12:35:11,808:INFO:Creating metrics dataframe
2024-03-02 12:35:11,809:INFO:Uploading results into container
2024-03-02 12:35:11,809:INFO:Uploading model into container now
2024-03-02 12:35:11,810:INFO:_master_model_container: 11
2024-03-02 12:35:11,810:INFO:_display_container: 2
2024-03-02 12:35:11,810:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 12:35:11,810:INFO:create_model() successfully completed......................................
2024-03-02 12:35:11,890:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:11,890:INFO:Creating metrics dataframe
2024-03-02 12:35:11,892:INFO:Initializing Decision Tree Regressor
2024-03-02 12:35:11,892:INFO:Total runtime is 0.12995359897613523 minutes
2024-03-02 12:35:11,892:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:11,892:INFO:Initializing create_model()
2024-03-02 12:35:11,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:11,892:INFO:Checking exceptions
2024-03-02 12:35:11,892:INFO:Importing libraries
2024-03-02 12:35:11,892:INFO:Copying training dataset
2024-03-02 12:35:11,895:INFO:Defining folds
2024-03-02 12:35:11,895:INFO:Declaring metric variables
2024-03-02 12:35:11,895:INFO:Importing untrained model
2024-03-02 12:35:11,895:INFO:Decision Tree Regressor Imported successfully
2024-03-02 12:35:11,895:INFO:Starting cross validation
2024-03-02 12:35:11,897:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:12,152:INFO:Calculating mean and std
2024-03-02 12:35:12,153:INFO:Creating metrics dataframe
2024-03-02 12:35:12,155:INFO:Uploading results into container
2024-03-02 12:35:12,155:INFO:Uploading model into container now
2024-03-02 12:35:12,155:INFO:_master_model_container: 12
2024-03-02 12:35:12,155:INFO:_display_container: 2
2024-03-02 12:35:12,155:INFO:DecisionTreeRegressor(random_state=208)
2024-03-02 12:35:12,155:INFO:create_model() successfully completed......................................
2024-03-02 12:35:12,239:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:12,239:INFO:Creating metrics dataframe
2024-03-02 12:35:12,241:INFO:Initializing Random Forest Regressor
2024-03-02 12:35:12,241:INFO:Total runtime is 0.13577365875244138 minutes
2024-03-02 12:35:12,241:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:12,241:INFO:Initializing create_model()
2024-03-02 12:35:12,242:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:12,242:INFO:Checking exceptions
2024-03-02 12:35:12,242:INFO:Importing libraries
2024-03-02 12:35:12,242:INFO:Copying training dataset
2024-03-02 12:35:12,245:INFO:Defining folds
2024-03-02 12:35:12,245:INFO:Declaring metric variables
2024-03-02 12:35:12,245:INFO:Importing untrained model
2024-03-02 12:35:12,245:INFO:Random Forest Regressor Imported successfully
2024-03-02 12:35:12,245:INFO:Starting cross validation
2024-03-02 12:35:12,247:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:13,695:INFO:Calculating mean and std
2024-03-02 12:35:13,696:INFO:Creating metrics dataframe
2024-03-02 12:35:13,697:INFO:Uploading results into container
2024-03-02 12:35:13,698:INFO:Uploading model into container now
2024-03-02 12:35:13,698:INFO:_master_model_container: 13
2024-03-02 12:35:13,698:INFO:_display_container: 2
2024-03-02 12:35:13,698:INFO:RandomForestRegressor(n_jobs=-1, random_state=208)
2024-03-02 12:35:13,698:INFO:create_model() successfully completed......................................
2024-03-02 12:35:13,783:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:13,783:INFO:Creating metrics dataframe
2024-03-02 12:35:13,785:INFO:Initializing Extra Trees Regressor
2024-03-02 12:35:13,785:INFO:Total runtime is 0.1615097085634867 minutes
2024-03-02 12:35:13,785:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:13,785:INFO:Initializing create_model()
2024-03-02 12:35:13,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:13,785:INFO:Checking exceptions
2024-03-02 12:35:13,785:INFO:Importing libraries
2024-03-02 12:35:13,785:INFO:Copying training dataset
2024-03-02 12:35:13,788:INFO:Defining folds
2024-03-02 12:35:13,788:INFO:Declaring metric variables
2024-03-02 12:35:13,789:INFO:Importing untrained model
2024-03-02 12:35:13,789:INFO:Extra Trees Regressor Imported successfully
2024-03-02 12:35:13,789:INFO:Starting cross validation
2024-03-02 12:35:13,790:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:14,653:INFO:Calculating mean and std
2024-03-02 12:35:14,654:INFO:Creating metrics dataframe
2024-03-02 12:35:14,656:INFO:Uploading results into container
2024-03-02 12:35:14,656:INFO:Uploading model into container now
2024-03-02 12:35:14,656:INFO:_master_model_container: 14
2024-03-02 12:35:14,656:INFO:_display_container: 2
2024-03-02 12:35:14,657:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=208)
2024-03-02 12:35:14,657:INFO:create_model() successfully completed......................................
2024-03-02 12:35:14,757:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:14,757:INFO:Creating metrics dataframe
2024-03-02 12:35:14,760:INFO:Initializing AdaBoost Regressor
2024-03-02 12:35:14,764:INFO:Total runtime is 0.17781809965769446 minutes
2024-03-02 12:35:14,764:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:14,764:INFO:Initializing create_model()
2024-03-02 12:35:14,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:14,764:INFO:Checking exceptions
2024-03-02 12:35:14,764:INFO:Importing libraries
2024-03-02 12:35:14,764:INFO:Copying training dataset
2024-03-02 12:35:14,770:INFO:Defining folds
2024-03-02 12:35:14,770:INFO:Declaring metric variables
2024-03-02 12:35:14,770:INFO:Importing untrained model
2024-03-02 12:35:14,770:INFO:AdaBoost Regressor Imported successfully
2024-03-02 12:35:14,770:INFO:Starting cross validation
2024-03-02 12:35:14,772:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:15,249:INFO:Calculating mean and std
2024-03-02 12:35:15,250:INFO:Creating metrics dataframe
2024-03-02 12:35:15,251:INFO:Uploading results into container
2024-03-02 12:35:15,251:INFO:Uploading model into container now
2024-03-02 12:35:15,252:INFO:_master_model_container: 15
2024-03-02 12:35:15,252:INFO:_display_container: 2
2024-03-02 12:35:15,252:INFO:AdaBoostRegressor(random_state=208)
2024-03-02 12:35:15,252:INFO:create_model() successfully completed......................................
2024-03-02 12:35:15,333:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:15,333:INFO:Creating metrics dataframe
2024-03-02 12:35:15,335:INFO:Initializing Gradient Boosting Regressor
2024-03-02 12:35:15,335:INFO:Total runtime is 0.18734500805536902 minutes
2024-03-02 12:35:15,335:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:15,335:INFO:Initializing create_model()
2024-03-02 12:35:15,335:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:15,335:INFO:Checking exceptions
2024-03-02 12:35:15,335:INFO:Importing libraries
2024-03-02 12:35:15,335:INFO:Copying training dataset
2024-03-02 12:35:15,339:INFO:Defining folds
2024-03-02 12:35:15,339:INFO:Declaring metric variables
2024-03-02 12:35:15,339:INFO:Importing untrained model
2024-03-02 12:35:15,339:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 12:35:15,339:INFO:Starting cross validation
2024-03-02 12:35:15,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:16,088:INFO:Calculating mean and std
2024-03-02 12:35:16,089:INFO:Creating metrics dataframe
2024-03-02 12:35:16,090:INFO:Uploading results into container
2024-03-02 12:35:16,091:INFO:Uploading model into container now
2024-03-02 12:35:16,091:INFO:_master_model_container: 16
2024-03-02 12:35:16,091:INFO:_display_container: 2
2024-03-02 12:35:16,091:INFO:GradientBoostingRegressor(random_state=208)
2024-03-02 12:35:16,091:INFO:create_model() successfully completed......................................
2024-03-02 12:35:16,172:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:16,172:INFO:Creating metrics dataframe
2024-03-02 12:35:16,174:INFO:Initializing Extreme Gradient Boosting
2024-03-02 12:35:16,174:INFO:Total runtime is 0.2013256748517354 minutes
2024-03-02 12:35:16,174:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:16,175:INFO:Initializing create_model()
2024-03-02 12:35:16,175:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:16,175:INFO:Checking exceptions
2024-03-02 12:35:16,175:INFO:Importing libraries
2024-03-02 12:35:16,175:INFO:Copying training dataset
2024-03-02 12:35:16,179:INFO:Defining folds
2024-03-02 12:35:16,179:INFO:Declaring metric variables
2024-03-02 12:35:16,179:INFO:Importing untrained model
2024-03-02 12:35:16,180:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 12:35:16,180:INFO:Starting cross validation
2024-03-02 12:35:16,181:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:16,644:INFO:Calculating mean and std
2024-03-02 12:35:16,645:INFO:Creating metrics dataframe
2024-03-02 12:35:16,647:INFO:Uploading results into container
2024-03-02 12:35:16,647:INFO:Uploading model into container now
2024-03-02 12:35:16,647:INFO:_master_model_container: 17
2024-03-02 12:35:16,647:INFO:_display_container: 2
2024-03-02 12:35:16,648:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=208, ...)
2024-03-02 12:35:16,648:INFO:create_model() successfully completed......................................
2024-03-02 12:35:16,729:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:16,730:INFO:Creating metrics dataframe
2024-03-02 12:35:16,732:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 12:35:16,732:INFO:Total runtime is 0.2106300274531046 minutes
2024-03-02 12:35:16,732:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:16,732:INFO:Initializing create_model()
2024-03-02 12:35:16,732:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:16,732:INFO:Checking exceptions
2024-03-02 12:35:16,732:INFO:Importing libraries
2024-03-02 12:35:16,732:INFO:Copying training dataset
2024-03-02 12:35:16,735:INFO:Defining folds
2024-03-02 12:35:16,735:INFO:Declaring metric variables
2024-03-02 12:35:16,735:INFO:Importing untrained model
2024-03-02 12:35:16,735:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 12:35:16,736:INFO:Starting cross validation
2024-03-02 12:35:16,737:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:17,717:INFO:Calculating mean and std
2024-03-02 12:35:17,718:INFO:Creating metrics dataframe
2024-03-02 12:35:17,720:INFO:Uploading results into container
2024-03-02 12:35:17,720:INFO:Uploading model into container now
2024-03-02 12:35:17,721:INFO:_master_model_container: 18
2024-03-02 12:35:17,721:INFO:_display_container: 2
2024-03-02 12:35:17,721:INFO:LGBMRegressor(n_jobs=-1, random_state=208)
2024-03-02 12:35:17,721:INFO:create_model() successfully completed......................................
2024-03-02 12:35:17,820:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:17,820:INFO:Creating metrics dataframe
2024-03-02 12:35:17,822:INFO:Initializing Dummy Regressor
2024-03-02 12:35:17,822:INFO:Total runtime is 0.2287975430488586 minutes
2024-03-02 12:35:17,822:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:17,822:INFO:Initializing create_model()
2024-03-02 12:35:17,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3C93A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:17,822:INFO:Checking exceptions
2024-03-02 12:35:17,822:INFO:Importing libraries
2024-03-02 12:35:17,822:INFO:Copying training dataset
2024-03-02 12:35:17,825:INFO:Defining folds
2024-03-02 12:35:17,826:INFO:Declaring metric variables
2024-03-02 12:35:17,826:INFO:Importing untrained model
2024-03-02 12:35:17,826:INFO:Dummy Regressor Imported successfully
2024-03-02 12:35:17,826:INFO:Starting cross validation
2024-03-02 12:35:17,827:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:18,050:INFO:Calculating mean and std
2024-03-02 12:35:18,051:INFO:Creating metrics dataframe
2024-03-02 12:35:18,052:INFO:Uploading results into container
2024-03-02 12:35:18,053:INFO:Uploading model into container now
2024-03-02 12:35:18,053:INFO:_master_model_container: 19
2024-03-02 12:35:18,053:INFO:_display_container: 2
2024-03-02 12:35:18,053:INFO:DummyRegressor()
2024-03-02 12:35:18,053:INFO:create_model() successfully completed......................................
2024-03-02 12:35:18,133:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:18,133:INFO:Creating metrics dataframe
2024-03-02 12:35:18,137:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 12:35:18,138:INFO:Initializing create_model()
2024-03-02 12:35:18,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC2B5B0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:18,138:INFO:Checking exceptions
2024-03-02 12:35:18,138:INFO:Importing libraries
2024-03-02 12:35:18,138:INFO:Copying training dataset
2024-03-02 12:35:18,141:INFO:Defining folds
2024-03-02 12:35:18,142:INFO:Declaring metric variables
2024-03-02 12:35:18,142:INFO:Importing untrained model
2024-03-02 12:35:18,142:INFO:Declaring custom model
2024-03-02 12:35:18,142:INFO:Huber Regressor Imported successfully
2024-03-02 12:35:18,143:INFO:Cross validation set to False
2024-03-02 12:35:18,143:INFO:Fitting Model
2024-03-02 12:35:18,241:INFO:HuberRegressor()
2024-03-02 12:35:18,242:INFO:create_model() successfully completed......................................
2024-03-02 12:35:18,334:INFO:_master_model_container: 19
2024-03-02 12:35:18,334:INFO:_display_container: 2
2024-03-02 12:35:18,334:INFO:HuberRegressor()
2024-03-02 12:35:18,335:INFO:compare_models() successfully completed......................................
2024-03-02 12:35:33,256:WARNING:D:\HackNITR\automata\polls\views.py:30: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:35:33,295:WARNING:D:\HackNITR\automata\polls\views.py:32: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:35:33,302:INFO:PyCaret RegressionExperiment
2024-03-02 12:35:33,302:INFO:Logging name: reg-default-name
2024-03-02 12:35:33,302:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 12:35:33,302:INFO:version 3.3.0
2024-03-02 12:35:33,302:INFO:Initializing setup()
2024-03-02 12:35:33,302:INFO:self.USI: e14f
2024-03-02 12:35:33,302:INFO:self._variable_keys: {'log_plots_param', 'idx', 'seed', 'n_jobs_param', 'memory', 'gpu_n_jobs_param', 'y', 'gpu_param', 'html_param', 'fold_generator', 'X_train', 'X', 'y_test', 'transform_target_param', '_ml_usecase', 'target_param', 'pipeline', '_available_plots', 'y_train', 'X_test', 'logging_param', 'USI', 'fold_groups_param', 'data', 'fold_shuffle_param', 'exp_name_log', 'exp_id'}
2024-03-02 12:35:33,302:INFO:Checking environment
2024-03-02 12:35:33,302:INFO:python_version: 3.9.0
2024-03-02 12:35:33,302:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 12:35:33,302:INFO:machine: AMD64
2024-03-02 12:35:33,302:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 12:35:33,310:INFO:Memory: svmem(total=16476958720, available=2109100032, percent=87.2, used=14367858688, free=2109100032)
2024-03-02 12:35:33,310:INFO:Physical Core: 8
2024-03-02 12:35:33,310:INFO:Logical Core: 16
2024-03-02 12:35:33,310:INFO:Checking libraries
2024-03-02 12:35:33,310:INFO:System:
2024-03-02 12:35:33,310:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 12:35:33,310:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 12:35:33,310:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 12:35:33,310:INFO:PyCaret required dependencies:
2024-03-02 12:35:33,310:INFO:                 pip: 23.3.2
2024-03-02 12:35:33,310:INFO:          setuptools: 49.2.1
2024-03-02 12:35:33,310:INFO:             pycaret: 3.3.0
2024-03-02 12:35:33,310:INFO:             IPython: 8.18.1
2024-03-02 12:35:33,310:INFO:          ipywidgets: 8.1.2
2024-03-02 12:35:33,310:INFO:                tqdm: 4.66.1
2024-03-02 12:35:33,310:INFO:               numpy: 1.25.2
2024-03-02 12:35:33,310:INFO:              pandas: 2.1.1
2024-03-02 12:35:33,310:INFO:              jinja2: 3.1.2
2024-03-02 12:35:33,310:INFO:               scipy: 1.11.4
2024-03-02 12:35:33,310:INFO:              joblib: 1.3.2
2024-03-02 12:35:33,310:INFO:             sklearn: 1.4.1.post1
2024-03-02 12:35:33,310:INFO:                pyod: 1.1.3
2024-03-02 12:35:33,311:INFO:            imblearn: 0.12.0
2024-03-02 12:35:33,311:INFO:   category_encoders: 2.6.3
2024-03-02 12:35:33,311:INFO:            lightgbm: 4.3.0
2024-03-02 12:35:33,311:INFO:               numba: 0.58.1
2024-03-02 12:35:33,311:INFO:            requests: 2.31.0
2024-03-02 12:35:33,311:INFO:          matplotlib: 3.7.5
2024-03-02 12:35:33,311:INFO:          scikitplot: 0.3.7
2024-03-02 12:35:33,311:INFO:         yellowbrick: 1.5
2024-03-02 12:35:33,311:INFO:              plotly: 5.19.0
2024-03-02 12:35:33,311:INFO:    plotly-resampler: Not installed
2024-03-02 12:35:33,311:INFO:             kaleido: 0.2.1
2024-03-02 12:35:33,311:INFO:           schemdraw: 0.15
2024-03-02 12:35:33,311:INFO:         statsmodels: 0.14.1
2024-03-02 12:35:33,311:INFO:              sktime: 0.27.0
2024-03-02 12:35:33,311:INFO:               tbats: 1.1.3
2024-03-02 12:35:33,311:INFO:            pmdarima: 2.0.4
2024-03-02 12:35:33,311:INFO:              psutil: 5.9.8
2024-03-02 12:35:33,311:INFO:          markupsafe: 2.1.3
2024-03-02 12:35:33,311:INFO:             pickle5: Not installed
2024-03-02 12:35:33,311:INFO:         cloudpickle: 3.0.0
2024-03-02 12:35:33,311:INFO:         deprecation: 2.1.0
2024-03-02 12:35:33,311:INFO:              xxhash: 3.4.1
2024-03-02 12:35:33,311:INFO:           wurlitzer: Not installed
2024-03-02 12:35:33,311:INFO:PyCaret optional dependencies:
2024-03-02 12:35:33,311:INFO:                shap: Not installed
2024-03-02 12:35:33,311:INFO:           interpret: Not installed
2024-03-02 12:35:33,311:INFO:                umap: Not installed
2024-03-02 12:35:33,311:INFO:     ydata_profiling: 4.6.5
2024-03-02 12:35:33,311:INFO:  explainerdashboard: Not installed
2024-03-02 12:35:33,311:INFO:             autoviz: Not installed
2024-03-02 12:35:33,311:INFO:           fairlearn: Not installed
2024-03-02 12:35:33,311:INFO:          deepchecks: Not installed
2024-03-02 12:35:33,311:INFO:             xgboost: 2.0.3
2024-03-02 12:35:33,311:INFO:            catboost: Not installed
2024-03-02 12:35:33,311:INFO:              kmodes: Not installed
2024-03-02 12:35:33,311:INFO:             mlxtend: Not installed
2024-03-02 12:35:33,312:INFO:       statsforecast: Not installed
2024-03-02 12:35:33,312:INFO:        tune_sklearn: Not installed
2024-03-02 12:35:33,312:INFO:                 ray: Not installed
2024-03-02 12:35:33,312:INFO:            hyperopt: Not installed
2024-03-02 12:35:33,312:INFO:              optuna: Not installed
2024-03-02 12:35:33,312:INFO:               skopt: Not installed
2024-03-02 12:35:33,312:INFO:              mlflow: Not installed
2024-03-02 12:35:33,312:INFO:              gradio: Not installed
2024-03-02 12:35:33,312:INFO:             fastapi: Not installed
2024-03-02 12:35:33,312:INFO:             uvicorn: Not installed
2024-03-02 12:35:33,312:INFO:              m2cgen: Not installed
2024-03-02 12:35:33,312:INFO:           evidently: Not installed
2024-03-02 12:35:33,312:INFO:               fugue: Not installed
2024-03-02 12:35:33,312:INFO:           streamlit: 1.27.2
2024-03-02 12:35:33,312:INFO:             prophet: Not installed
2024-03-02 12:35:33,312:INFO:None
2024-03-02 12:35:33,312:INFO:Set up data.
2024-03-02 12:35:33,326:INFO:Set up folding strategy.
2024-03-02 12:35:33,326:INFO:Set up train/test split.
2024-03-02 12:35:33,334:INFO:Set up index.
2024-03-02 12:35:33,334:INFO:Assigning column types.
2024-03-02 12:35:33,336:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 12:35:33,336:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,340:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,344:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,391:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,427:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:33,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:33,429:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,433:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,436:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,482:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,518:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,518:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:33,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:33,520:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 12:35:33,524:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,528:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,575:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,611:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,611:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:33,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:33,617:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,621:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,668:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,704:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:33,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:33,706:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 12:35:33,713:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,759:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,794:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,795:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:33,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:33,805:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,851:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,886:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,887:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:33,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:33,890:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 12:35:33,943:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,978:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:33,979:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:33,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:34,034:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:34,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:35:34,070:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:34,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:34,072:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 12:35:34,126:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:34,161:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:34,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:34,217:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:35:34,253:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:34,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:34,256:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 12:35:34,344:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:34,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:34,436:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:34,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:34,440:INFO:Preparing preprocessing pipeline...
2024-03-02 12:35:34,440:INFO:Set up simple imputation.
2024-03-02 12:35:34,446:INFO:Set up encoding of categorical features.
2024-03-02 12:35:34,447:INFO:Set up column name cleaning.
2024-03-02 12:35:34,622:INFO:Finished creating preprocessing pipeline.
2024-03-02 12:35:34,629:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 12:35:34,629:INFO:Creating final display dataframe.
2024-03-02 12:35:35,061:INFO:Setup _display_container:                     Description             Value
0                    Session id              3922
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              e14f
2024-03-02 12:35:35,156:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:35,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:35,247:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:35:35,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:35:35,250:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 12:35:35,250:INFO:setup() successfully completed in 1.95s...............
2024-03-02 12:35:35,250:INFO:Initializing compare_models()
2024-03-02 12:35:35,250:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 12:35:35,250:INFO:Checking exceptions
2024-03-02 12:35:35,252:INFO:Preparing display monitor
2024-03-02 12:35:35,254:INFO:Time budget is 1 minutes
2024-03-02 12:35:35,254:INFO:Initializing Linear Regression
2024-03-02 12:35:35,254:INFO:Total runtime is 0.0 minutes
2024-03-02 12:35:35,254:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:35,254:INFO:Initializing create_model()
2024-03-02 12:35:35,254:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:35,254:INFO:Checking exceptions
2024-03-02 12:35:35,254:INFO:Importing libraries
2024-03-02 12:35:35,255:INFO:Copying training dataset
2024-03-02 12:35:35,259:INFO:Defining folds
2024-03-02 12:35:35,259:INFO:Declaring metric variables
2024-03-02 12:35:35,259:INFO:Importing untrained model
2024-03-02 12:35:35,259:INFO:Linear Regression Imported successfully
2024-03-02 12:35:35,260:INFO:Starting cross validation
2024-03-02 12:35:35,261:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:35,495:INFO:Calculating mean and std
2024-03-02 12:35:35,496:INFO:Creating metrics dataframe
2024-03-02 12:35:35,497:INFO:Uploading results into container
2024-03-02 12:35:35,498:INFO:Uploading model into container now
2024-03-02 12:35:35,498:INFO:_master_model_container: 1
2024-03-02 12:35:35,498:INFO:_display_container: 2
2024-03-02 12:35:35,498:INFO:LinearRegression(n_jobs=-1)
2024-03-02 12:35:35,498:INFO:create_model() successfully completed......................................
2024-03-02 12:35:35,581:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:35,581:INFO:Creating metrics dataframe
2024-03-02 12:35:35,583:INFO:Initializing Lasso Regression
2024-03-02 12:35:35,583:INFO:Total runtime is 0.0054812788963317875 minutes
2024-03-02 12:35:35,584:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:35,584:INFO:Initializing create_model()
2024-03-02 12:35:35,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:35,584:INFO:Checking exceptions
2024-03-02 12:35:35,584:INFO:Importing libraries
2024-03-02 12:35:35,584:INFO:Copying training dataset
2024-03-02 12:35:35,587:INFO:Defining folds
2024-03-02 12:35:35,587:INFO:Declaring metric variables
2024-03-02 12:35:35,587:INFO:Importing untrained model
2024-03-02 12:35:35,587:INFO:Lasso Regression Imported successfully
2024-03-02 12:35:35,588:INFO:Starting cross validation
2024-03-02 12:35:35,589:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:35,811:INFO:Calculating mean and std
2024-03-02 12:35:35,812:INFO:Creating metrics dataframe
2024-03-02 12:35:35,813:INFO:Uploading results into container
2024-03-02 12:35:35,814:INFO:Uploading model into container now
2024-03-02 12:35:35,814:INFO:_master_model_container: 2
2024-03-02 12:35:35,814:INFO:_display_container: 2
2024-03-02 12:35:35,814:INFO:Lasso(random_state=3922)
2024-03-02 12:35:35,814:INFO:create_model() successfully completed......................................
2024-03-02 12:35:35,895:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:35,895:INFO:Creating metrics dataframe
2024-03-02 12:35:35,897:INFO:Initializing Ridge Regression
2024-03-02 12:35:35,897:INFO:Total runtime is 0.010716954867045086 minutes
2024-03-02 12:35:35,897:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:35,898:INFO:Initializing create_model()
2024-03-02 12:35:35,898:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:35,898:INFO:Checking exceptions
2024-03-02 12:35:35,898:INFO:Importing libraries
2024-03-02 12:35:35,898:INFO:Copying training dataset
2024-03-02 12:35:35,901:INFO:Defining folds
2024-03-02 12:35:35,901:INFO:Declaring metric variables
2024-03-02 12:35:35,901:INFO:Importing untrained model
2024-03-02 12:35:35,901:INFO:Ridge Regression Imported successfully
2024-03-02 12:35:35,901:INFO:Starting cross validation
2024-03-02 12:35:35,903:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:36,030:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.39447e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:36,032:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.38457e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:36,044:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.33369e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:36,046:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.34298e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:36,055:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.36373e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:36,059:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.26843e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:36,077:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.25886e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:36,089:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.27268e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:36,090:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.00655e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:36,100:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.22359e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:36,127:INFO:Calculating mean and std
2024-03-02 12:35:36,128:INFO:Creating metrics dataframe
2024-03-02 12:35:36,129:INFO:Uploading results into container
2024-03-02 12:35:36,129:INFO:Uploading model into container now
2024-03-02 12:35:36,130:INFO:_master_model_container: 3
2024-03-02 12:35:36,130:INFO:_display_container: 2
2024-03-02 12:35:36,130:INFO:Ridge(random_state=3922)
2024-03-02 12:35:36,130:INFO:create_model() successfully completed......................................
2024-03-02 12:35:36,213:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:36,213:INFO:Creating metrics dataframe
2024-03-02 12:35:36,215:INFO:Initializing Elastic Net
2024-03-02 12:35:36,215:INFO:Total runtime is 0.016018084685007733 minutes
2024-03-02 12:35:36,215:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:36,216:INFO:Initializing create_model()
2024-03-02 12:35:36,216:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:36,216:INFO:Checking exceptions
2024-03-02 12:35:36,216:INFO:Importing libraries
2024-03-02 12:35:36,216:INFO:Copying training dataset
2024-03-02 12:35:36,219:INFO:Defining folds
2024-03-02 12:35:36,219:INFO:Declaring metric variables
2024-03-02 12:35:36,219:INFO:Importing untrained model
2024-03-02 12:35:36,219:INFO:Elastic Net Imported successfully
2024-03-02 12:35:36,219:INFO:Starting cross validation
2024-03-02 12:35:36,220:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:36,476:INFO:Calculating mean and std
2024-03-02 12:35:36,476:INFO:Creating metrics dataframe
2024-03-02 12:35:36,478:INFO:Uploading results into container
2024-03-02 12:35:36,479:INFO:Uploading model into container now
2024-03-02 12:35:36,479:INFO:_master_model_container: 4
2024-03-02 12:35:36,479:INFO:_display_container: 2
2024-03-02 12:35:36,479:INFO:ElasticNet(random_state=3922)
2024-03-02 12:35:36,479:INFO:create_model() successfully completed......................................
2024-03-02 12:35:36,563:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:36,564:INFO:Creating metrics dataframe
2024-03-02 12:35:36,566:INFO:Initializing Least Angle Regression
2024-03-02 12:35:36,566:INFO:Total runtime is 0.021858417987823488 minutes
2024-03-02 12:35:36,566:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:36,566:INFO:Initializing create_model()
2024-03-02 12:35:36,566:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:36,566:INFO:Checking exceptions
2024-03-02 12:35:36,566:INFO:Importing libraries
2024-03-02 12:35:36,566:INFO:Copying training dataset
2024-03-02 12:35:36,569:INFO:Defining folds
2024-03-02 12:35:36,569:INFO:Declaring metric variables
2024-03-02 12:35:36,569:INFO:Importing untrained model
2024-03-02 12:35:36,570:INFO:Least Angle Regression Imported successfully
2024-03-02 12:35:36,573:INFO:Starting cross validation
2024-03-02 12:35:36,575:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:36,808:INFO:Calculating mean and std
2024-03-02 12:35:36,809:INFO:Creating metrics dataframe
2024-03-02 12:35:36,810:INFO:Uploading results into container
2024-03-02 12:35:36,811:INFO:Uploading model into container now
2024-03-02 12:35:36,811:INFO:_master_model_container: 5
2024-03-02 12:35:36,811:INFO:_display_container: 2
2024-03-02 12:35:36,811:INFO:Lars(random_state=3922)
2024-03-02 12:35:36,811:INFO:create_model() successfully completed......................................
2024-03-02 12:35:36,891:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:36,891:INFO:Creating metrics dataframe
2024-03-02 12:35:36,893:INFO:Initializing Lasso Least Angle Regression
2024-03-02 12:35:36,893:INFO:Total runtime is 0.027321290969848634 minutes
2024-03-02 12:35:36,893:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:36,893:INFO:Initializing create_model()
2024-03-02 12:35:36,893:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:36,894:INFO:Checking exceptions
2024-03-02 12:35:36,894:INFO:Importing libraries
2024-03-02 12:35:36,894:INFO:Copying training dataset
2024-03-02 12:35:36,897:INFO:Defining folds
2024-03-02 12:35:36,897:INFO:Declaring metric variables
2024-03-02 12:35:36,897:INFO:Importing untrained model
2024-03-02 12:35:36,897:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 12:35:36,897:INFO:Starting cross validation
2024-03-02 12:35:36,898:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:37,126:INFO:Calculating mean and std
2024-03-02 12:35:37,127:INFO:Creating metrics dataframe
2024-03-02 12:35:37,128:INFO:Uploading results into container
2024-03-02 12:35:37,129:INFO:Uploading model into container now
2024-03-02 12:35:37,129:INFO:_master_model_container: 6
2024-03-02 12:35:37,129:INFO:_display_container: 2
2024-03-02 12:35:37,129:INFO:LassoLars(random_state=3922)
2024-03-02 12:35:37,129:INFO:create_model() successfully completed......................................
2024-03-02 12:35:37,211:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:37,211:INFO:Creating metrics dataframe
2024-03-02 12:35:37,213:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 12:35:37,213:INFO:Total runtime is 0.032655954360961914 minutes
2024-03-02 12:35:37,213:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:37,214:INFO:Initializing create_model()
2024-03-02 12:35:37,214:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:37,214:INFO:Checking exceptions
2024-03-02 12:35:37,214:INFO:Importing libraries
2024-03-02 12:35:37,214:INFO:Copying training dataset
2024-03-02 12:35:37,217:INFO:Defining folds
2024-03-02 12:35:37,217:INFO:Declaring metric variables
2024-03-02 12:35:37,217:INFO:Importing untrained model
2024-03-02 12:35:37,217:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 12:35:37,217:INFO:Starting cross validation
2024-03-02 12:35:37,219:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:37,443:INFO:Calculating mean and std
2024-03-02 12:35:37,444:INFO:Creating metrics dataframe
2024-03-02 12:35:37,445:INFO:Uploading results into container
2024-03-02 12:35:37,446:INFO:Uploading model into container now
2024-03-02 12:35:37,446:INFO:_master_model_container: 7
2024-03-02 12:35:37,446:INFO:_display_container: 2
2024-03-02 12:35:37,446:INFO:OrthogonalMatchingPursuit()
2024-03-02 12:35:37,446:INFO:create_model() successfully completed......................................
2024-03-02 12:35:37,528:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:37,528:INFO:Creating metrics dataframe
2024-03-02 12:35:37,531:INFO:Initializing Bayesian Ridge
2024-03-02 12:35:37,531:INFO:Total runtime is 0.037943804264068605 minutes
2024-03-02 12:35:37,531:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:37,531:INFO:Initializing create_model()
2024-03-02 12:35:37,531:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:37,531:INFO:Checking exceptions
2024-03-02 12:35:37,531:INFO:Importing libraries
2024-03-02 12:35:37,532:INFO:Copying training dataset
2024-03-02 12:35:37,536:INFO:Defining folds
2024-03-02 12:35:37,536:INFO:Declaring metric variables
2024-03-02 12:35:37,536:INFO:Importing untrained model
2024-03-02 12:35:37,536:INFO:Bayesian Ridge Imported successfully
2024-03-02 12:35:37,537:INFO:Starting cross validation
2024-03-02 12:35:37,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:37,773:INFO:Calculating mean and std
2024-03-02 12:35:37,774:INFO:Creating metrics dataframe
2024-03-02 12:35:37,775:INFO:Uploading results into container
2024-03-02 12:35:37,776:INFO:Uploading model into container now
2024-03-02 12:35:37,776:INFO:_master_model_container: 8
2024-03-02 12:35:37,776:INFO:_display_container: 2
2024-03-02 12:35:37,776:INFO:BayesianRidge()
2024-03-02 12:35:37,776:INFO:create_model() successfully completed......................................
2024-03-02 12:35:37,857:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:37,857:INFO:Creating metrics dataframe
2024-03-02 12:35:37,859:INFO:Initializing Passive Aggressive Regressor
2024-03-02 12:35:37,859:INFO:Total runtime is 0.04341412782669068 minutes
2024-03-02 12:35:37,859:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:37,859:INFO:Initializing create_model()
2024-03-02 12:35:37,859:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:37,859:INFO:Checking exceptions
2024-03-02 12:35:37,859:INFO:Importing libraries
2024-03-02 12:35:37,859:INFO:Copying training dataset
2024-03-02 12:35:37,862:INFO:Defining folds
2024-03-02 12:35:37,863:INFO:Declaring metric variables
2024-03-02 12:35:37,863:INFO:Importing untrained model
2024-03-02 12:35:37,863:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 12:35:37,863:INFO:Starting cross validation
2024-03-02 12:35:37,864:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:38,108:INFO:Calculating mean and std
2024-03-02 12:35:38,109:INFO:Creating metrics dataframe
2024-03-02 12:35:38,110:INFO:Uploading results into container
2024-03-02 12:35:38,110:INFO:Uploading model into container now
2024-03-02 12:35:38,111:INFO:_master_model_container: 9
2024-03-02 12:35:38,111:INFO:_display_container: 2
2024-03-02 12:35:38,111:INFO:PassiveAggressiveRegressor(random_state=3922)
2024-03-02 12:35:38,111:INFO:create_model() successfully completed......................................
2024-03-02 12:35:38,192:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:38,192:INFO:Creating metrics dataframe
2024-03-02 12:35:38,194:INFO:Initializing Huber Regressor
2024-03-02 12:35:38,194:INFO:Total runtime is 0.04900481700897217 minutes
2024-03-02 12:35:38,194:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:38,194:INFO:Initializing create_model()
2024-03-02 12:35:38,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:38,195:INFO:Checking exceptions
2024-03-02 12:35:38,195:INFO:Importing libraries
2024-03-02 12:35:38,195:INFO:Copying training dataset
2024-03-02 12:35:38,198:INFO:Defining folds
2024-03-02 12:35:38,198:INFO:Declaring metric variables
2024-03-02 12:35:38,198:INFO:Importing untrained model
2024-03-02 12:35:38,198:INFO:Huber Regressor Imported successfully
2024-03-02 12:35:38,198:INFO:Starting cross validation
2024-03-02 12:35:38,199:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:38,441:INFO:Calculating mean and std
2024-03-02 12:35:38,442:INFO:Creating metrics dataframe
2024-03-02 12:35:38,444:INFO:Uploading results into container
2024-03-02 12:35:38,444:INFO:Uploading model into container now
2024-03-02 12:35:38,445:INFO:_master_model_container: 10
2024-03-02 12:35:38,445:INFO:_display_container: 2
2024-03-02 12:35:38,445:INFO:HuberRegressor()
2024-03-02 12:35:38,445:INFO:create_model() successfully completed......................................
2024-03-02 12:35:38,526:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:38,526:INFO:Creating metrics dataframe
2024-03-02 12:35:38,528:INFO:Initializing K Neighbors Regressor
2024-03-02 12:35:38,528:INFO:Total runtime is 0.05456540584564209 minutes
2024-03-02 12:35:38,528:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:38,528:INFO:Initializing create_model()
2024-03-02 12:35:38,528:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:38,528:INFO:Checking exceptions
2024-03-02 12:35:38,528:INFO:Importing libraries
2024-03-02 12:35:38,528:INFO:Copying training dataset
2024-03-02 12:35:38,531:INFO:Defining folds
2024-03-02 12:35:38,531:INFO:Declaring metric variables
2024-03-02 12:35:38,531:INFO:Importing untrained model
2024-03-02 12:35:38,532:INFO:K Neighbors Regressor Imported successfully
2024-03-02 12:35:38,532:INFO:Starting cross validation
2024-03-02 12:35:38,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:38,848:INFO:Calculating mean and std
2024-03-02 12:35:38,848:INFO:Creating metrics dataframe
2024-03-02 12:35:38,850:INFO:Uploading results into container
2024-03-02 12:35:38,850:INFO:Uploading model into container now
2024-03-02 12:35:38,850:INFO:_master_model_container: 11
2024-03-02 12:35:38,851:INFO:_display_container: 2
2024-03-02 12:35:38,851:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 12:35:38,851:INFO:create_model() successfully completed......................................
2024-03-02 12:35:38,931:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:38,931:INFO:Creating metrics dataframe
2024-03-02 12:35:38,934:INFO:Initializing Decision Tree Regressor
2024-03-02 12:35:38,934:INFO:Total runtime is 0.06132615009943644 minutes
2024-03-02 12:35:38,934:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:38,934:INFO:Initializing create_model()
2024-03-02 12:35:38,934:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:38,934:INFO:Checking exceptions
2024-03-02 12:35:38,934:INFO:Importing libraries
2024-03-02 12:35:38,934:INFO:Copying training dataset
2024-03-02 12:35:38,937:INFO:Defining folds
2024-03-02 12:35:38,937:INFO:Declaring metric variables
2024-03-02 12:35:38,938:INFO:Importing untrained model
2024-03-02 12:35:38,938:INFO:Decision Tree Regressor Imported successfully
2024-03-02 12:35:38,938:INFO:Starting cross validation
2024-03-02 12:35:38,939:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:39,180:INFO:Calculating mean and std
2024-03-02 12:35:39,181:INFO:Creating metrics dataframe
2024-03-02 12:35:39,182:INFO:Uploading results into container
2024-03-02 12:35:39,183:INFO:Uploading model into container now
2024-03-02 12:35:39,183:INFO:_master_model_container: 12
2024-03-02 12:35:39,183:INFO:_display_container: 2
2024-03-02 12:35:39,183:INFO:DecisionTreeRegressor(random_state=3922)
2024-03-02 12:35:39,183:INFO:create_model() successfully completed......................................
2024-03-02 12:35:39,264:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:39,264:INFO:Creating metrics dataframe
2024-03-02 12:35:39,266:INFO:Initializing Random Forest Regressor
2024-03-02 12:35:39,266:INFO:Total runtime is 0.06686431169509888 minutes
2024-03-02 12:35:39,266:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:39,266:INFO:Initializing create_model()
2024-03-02 12:35:39,266:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:39,266:INFO:Checking exceptions
2024-03-02 12:35:39,266:INFO:Importing libraries
2024-03-02 12:35:39,266:INFO:Copying training dataset
2024-03-02 12:35:39,269:INFO:Defining folds
2024-03-02 12:35:39,269:INFO:Declaring metric variables
2024-03-02 12:35:39,270:INFO:Importing untrained model
2024-03-02 12:35:39,270:INFO:Random Forest Regressor Imported successfully
2024-03-02 12:35:39,270:INFO:Starting cross validation
2024-03-02 12:35:39,271:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:40,721:INFO:Calculating mean and std
2024-03-02 12:35:40,722:INFO:Creating metrics dataframe
2024-03-02 12:35:40,724:INFO:Uploading results into container
2024-03-02 12:35:40,724:INFO:Uploading model into container now
2024-03-02 12:35:40,724:INFO:_master_model_container: 13
2024-03-02 12:35:40,724:INFO:_display_container: 2
2024-03-02 12:35:40,724:INFO:RandomForestRegressor(n_jobs=-1, random_state=3922)
2024-03-02 12:35:40,725:INFO:create_model() successfully completed......................................
2024-03-02 12:35:40,807:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:40,807:INFO:Creating metrics dataframe
2024-03-02 12:35:40,809:INFO:Initializing Extra Trees Regressor
2024-03-02 12:35:40,809:INFO:Total runtime is 0.09258318344751994 minutes
2024-03-02 12:35:40,809:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:40,809:INFO:Initializing create_model()
2024-03-02 12:35:40,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:40,809:INFO:Checking exceptions
2024-03-02 12:35:40,809:INFO:Importing libraries
2024-03-02 12:35:40,810:INFO:Copying training dataset
2024-03-02 12:35:40,813:INFO:Defining folds
2024-03-02 12:35:40,813:INFO:Declaring metric variables
2024-03-02 12:35:40,813:INFO:Importing untrained model
2024-03-02 12:35:40,813:INFO:Extra Trees Regressor Imported successfully
2024-03-02 12:35:40,813:INFO:Starting cross validation
2024-03-02 12:35:40,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:41,721:INFO:Calculating mean and std
2024-03-02 12:35:41,722:INFO:Creating metrics dataframe
2024-03-02 12:35:41,723:INFO:Uploading results into container
2024-03-02 12:35:41,724:INFO:Uploading model into container now
2024-03-02 12:35:41,724:INFO:_master_model_container: 14
2024-03-02 12:35:41,724:INFO:_display_container: 2
2024-03-02 12:35:41,724:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3922)
2024-03-02 12:35:41,724:INFO:create_model() successfully completed......................................
2024-03-02 12:35:41,812:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:41,813:INFO:Creating metrics dataframe
2024-03-02 12:35:41,815:INFO:Initializing AdaBoost Regressor
2024-03-02 12:35:41,815:INFO:Total runtime is 0.10935031175613404 minutes
2024-03-02 12:35:41,815:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:41,815:INFO:Initializing create_model()
2024-03-02 12:35:41,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:41,816:INFO:Checking exceptions
2024-03-02 12:35:41,816:INFO:Importing libraries
2024-03-02 12:35:41,816:INFO:Copying training dataset
2024-03-02 12:35:41,819:INFO:Defining folds
2024-03-02 12:35:41,820:INFO:Declaring metric variables
2024-03-02 12:35:41,820:INFO:Importing untrained model
2024-03-02 12:35:41,820:INFO:AdaBoost Regressor Imported successfully
2024-03-02 12:35:41,820:INFO:Starting cross validation
2024-03-02 12:35:41,822:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:42,260:INFO:Calculating mean and std
2024-03-02 12:35:42,261:INFO:Creating metrics dataframe
2024-03-02 12:35:42,262:INFO:Uploading results into container
2024-03-02 12:35:42,262:INFO:Uploading model into container now
2024-03-02 12:35:42,263:INFO:_master_model_container: 15
2024-03-02 12:35:42,263:INFO:_display_container: 2
2024-03-02 12:35:42,263:INFO:AdaBoostRegressor(random_state=3922)
2024-03-02 12:35:42,263:INFO:create_model() successfully completed......................................
2024-03-02 12:35:42,344:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:42,344:INFO:Creating metrics dataframe
2024-03-02 12:35:42,346:INFO:Initializing Gradient Boosting Regressor
2024-03-02 12:35:42,346:INFO:Total runtime is 0.11820232470830282 minutes
2024-03-02 12:35:42,347:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:42,347:INFO:Initializing create_model()
2024-03-02 12:35:42,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:42,347:INFO:Checking exceptions
2024-03-02 12:35:42,347:INFO:Importing libraries
2024-03-02 12:35:42,347:INFO:Copying training dataset
2024-03-02 12:35:42,350:INFO:Defining folds
2024-03-02 12:35:42,350:INFO:Declaring metric variables
2024-03-02 12:35:42,350:INFO:Importing untrained model
2024-03-02 12:35:42,350:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 12:35:42,351:INFO:Starting cross validation
2024-03-02 12:35:42,352:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:43,101:INFO:Calculating mean and std
2024-03-02 12:35:43,101:INFO:Creating metrics dataframe
2024-03-02 12:35:43,103:INFO:Uploading results into container
2024-03-02 12:35:43,103:INFO:Uploading model into container now
2024-03-02 12:35:43,104:INFO:_master_model_container: 16
2024-03-02 12:35:43,104:INFO:_display_container: 2
2024-03-02 12:35:43,104:INFO:GradientBoostingRegressor(random_state=3922)
2024-03-02 12:35:43,104:INFO:create_model() successfully completed......................................
2024-03-02 12:35:43,190:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:43,191:INFO:Creating metrics dataframe
2024-03-02 12:35:43,194:INFO:Initializing Extreme Gradient Boosting
2024-03-02 12:35:43,194:INFO:Total runtime is 0.13232734600702922 minutes
2024-03-02 12:35:43,194:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:43,194:INFO:Initializing create_model()
2024-03-02 12:35:43,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:43,194:INFO:Checking exceptions
2024-03-02 12:35:43,194:INFO:Importing libraries
2024-03-02 12:35:43,195:INFO:Copying training dataset
2024-03-02 12:35:43,198:INFO:Defining folds
2024-03-02 12:35:43,198:INFO:Declaring metric variables
2024-03-02 12:35:43,198:INFO:Importing untrained model
2024-03-02 12:35:43,199:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 12:35:43,199:INFO:Starting cross validation
2024-03-02 12:35:43,200:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:43,606:INFO:Calculating mean and std
2024-03-02 12:35:43,607:INFO:Creating metrics dataframe
2024-03-02 12:35:43,608:INFO:Uploading results into container
2024-03-02 12:35:43,608:INFO:Uploading model into container now
2024-03-02 12:35:43,608:INFO:_master_model_container: 17
2024-03-02 12:35:43,609:INFO:_display_container: 2
2024-03-02 12:35:43,609:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=3922, ...)
2024-03-02 12:35:43,609:INFO:create_model() successfully completed......................................
2024-03-02 12:35:43,691:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:43,691:INFO:Creating metrics dataframe
2024-03-02 12:35:43,693:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 12:35:43,693:INFO:Total runtime is 0.1406475345293681 minutes
2024-03-02 12:35:43,694:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:43,694:INFO:Initializing create_model()
2024-03-02 12:35:43,694:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:43,694:INFO:Checking exceptions
2024-03-02 12:35:43,694:INFO:Importing libraries
2024-03-02 12:35:43,694:INFO:Copying training dataset
2024-03-02 12:35:43,697:INFO:Defining folds
2024-03-02 12:35:43,697:INFO:Declaring metric variables
2024-03-02 12:35:43,697:INFO:Importing untrained model
2024-03-02 12:35:43,697:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 12:35:43,697:INFO:Starting cross validation
2024-03-02 12:35:43,699:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:44,672:INFO:Calculating mean and std
2024-03-02 12:35:44,673:INFO:Creating metrics dataframe
2024-03-02 12:35:44,675:INFO:Uploading results into container
2024-03-02 12:35:44,675:INFO:Uploading model into container now
2024-03-02 12:35:44,675:INFO:_master_model_container: 18
2024-03-02 12:35:44,676:INFO:_display_container: 2
2024-03-02 12:35:44,676:INFO:LGBMRegressor(n_jobs=-1, random_state=3922)
2024-03-02 12:35:44,676:INFO:create_model() successfully completed......................................
2024-03-02 12:35:44,775:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:44,775:INFO:Creating metrics dataframe
2024-03-02 12:35:44,777:INFO:Initializing Dummy Regressor
2024-03-02 12:35:44,777:INFO:Total runtime is 0.1587177077929179 minutes
2024-03-02 12:35:44,777:INFO:SubProcess create_model() called ==================================
2024-03-02 12:35:44,777:INFO:Initializing create_model()
2024-03-02 12:35:44,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002662E3DE880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:44,777:INFO:Checking exceptions
2024-03-02 12:35:44,777:INFO:Importing libraries
2024-03-02 12:35:44,778:INFO:Copying training dataset
2024-03-02 12:35:44,781:INFO:Defining folds
2024-03-02 12:35:44,781:INFO:Declaring metric variables
2024-03-02 12:35:44,781:INFO:Importing untrained model
2024-03-02 12:35:44,781:INFO:Dummy Regressor Imported successfully
2024-03-02 12:35:44,781:INFO:Starting cross validation
2024-03-02 12:35:44,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:35:45,006:INFO:Calculating mean and std
2024-03-02 12:35:45,007:INFO:Creating metrics dataframe
2024-03-02 12:35:45,008:INFO:Uploading results into container
2024-03-02 12:35:45,008:INFO:Uploading model into container now
2024-03-02 12:35:45,009:INFO:_master_model_container: 19
2024-03-02 12:35:45,009:INFO:_display_container: 2
2024-03-02 12:35:45,009:INFO:DummyRegressor()
2024-03-02 12:35:45,009:INFO:create_model() successfully completed......................................
2024-03-02 12:35:45,090:INFO:SubProcess create_model() end ==================================
2024-03-02 12:35:45,090:INFO:Creating metrics dataframe
2024-03-02 12:35:45,093:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 12:35:45,094:INFO:Initializing create_model()
2024-03-02 12:35:45,094:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002662CC41940>, estimator=Ridge(random_state=3922), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:35:45,094:INFO:Checking exceptions
2024-03-02 12:35:45,095:INFO:Importing libraries
2024-03-02 12:35:45,095:INFO:Copying training dataset
2024-03-02 12:35:45,099:INFO:Defining folds
2024-03-02 12:35:45,099:INFO:Declaring metric variables
2024-03-02 12:35:45,099:INFO:Importing untrained model
2024-03-02 12:35:45,099:INFO:Declaring custom model
2024-03-02 12:35:45,100:INFO:Ridge Regression Imported successfully
2024-03-02 12:35:45,101:INFO:Cross validation set to False
2024-03-02 12:35:45,101:INFO:Fitting Model
2024-03-02 12:35:45,187:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.38171e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:35:45,187:INFO:Ridge(random_state=3922)
2024-03-02 12:35:45,188:INFO:create_model() successfully completed......................................
2024-03-02 12:35:45,280:INFO:_master_model_container: 19
2024-03-02 12:35:45,280:INFO:_display_container: 2
2024-03-02 12:35:45,280:INFO:Ridge(random_state=3922)
2024-03-02 12:35:45,280:INFO:compare_models() successfully completed......................................
2024-03-02 12:36:32,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:36:32,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:36:32,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:36:32,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:36:47,561:WARNING:D:\HackNITR\automata\polls\views.py:30: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:36:47,601:WARNING:D:\HackNITR\automata\polls\views.py:32: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:36:47,607:INFO:PyCaret RegressionExperiment
2024-03-02 12:36:47,607:INFO:Logging name: reg-default-name
2024-03-02 12:36:47,607:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 12:36:47,607:INFO:version 3.3.0
2024-03-02 12:36:47,607:INFO:Initializing setup()
2024-03-02 12:36:47,607:INFO:self.USI: e76e
2024-03-02 12:36:47,607:INFO:self._variable_keys: {'y', '_available_plots', 'y_train', 'y_test', 'transform_target_param', 'fold_generator', 'html_param', 'data', 'gpu_n_jobs_param', 'target_param', 'n_jobs_param', 'exp_name_log', 'X_train', 'exp_id', 'X', 'pipeline', 'seed', '_ml_usecase', 'logging_param', 'fold_groups_param', 'log_plots_param', 'idx', 'gpu_param', 'X_test', 'USI', 'memory', 'fold_shuffle_param'}
2024-03-02 12:36:47,607:INFO:Checking environment
2024-03-02 12:36:47,607:INFO:python_version: 3.9.0
2024-03-02 12:36:47,607:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 12:36:47,607:INFO:machine: AMD64
2024-03-02 12:36:47,607:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 12:36:47,614:INFO:Memory: svmem(total=16476958720, available=4225363968, percent=74.4, used=12251594752, free=4225363968)
2024-03-02 12:36:47,614:INFO:Physical Core: 8
2024-03-02 12:36:47,614:INFO:Logical Core: 16
2024-03-02 12:36:47,614:INFO:Checking libraries
2024-03-02 12:36:47,614:INFO:System:
2024-03-02 12:36:47,614:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 12:36:47,614:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 12:36:47,614:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 12:36:47,614:INFO:PyCaret required dependencies:
2024-03-02 12:36:47,648:INFO:                 pip: 23.3.2
2024-03-02 12:36:47,648:INFO:          setuptools: 49.2.1
2024-03-02 12:36:47,649:INFO:             pycaret: 3.3.0
2024-03-02 12:36:47,649:INFO:             IPython: 8.18.1
2024-03-02 12:36:47,649:INFO:          ipywidgets: 8.1.2
2024-03-02 12:36:47,649:INFO:                tqdm: 4.66.1
2024-03-02 12:36:47,649:INFO:               numpy: 1.25.2
2024-03-02 12:36:47,649:INFO:              pandas: 2.1.1
2024-03-02 12:36:47,649:INFO:              jinja2: 3.1.2
2024-03-02 12:36:47,649:INFO:               scipy: 1.11.4
2024-03-02 12:36:47,649:INFO:              joblib: 1.3.2
2024-03-02 12:36:47,649:INFO:             sklearn: 1.4.1.post1
2024-03-02 12:36:47,649:INFO:                pyod: 1.1.3
2024-03-02 12:36:47,649:INFO:            imblearn: 0.12.0
2024-03-02 12:36:47,649:INFO:   category_encoders: 2.6.3
2024-03-02 12:36:47,649:INFO:            lightgbm: 4.3.0
2024-03-02 12:36:47,649:INFO:               numba: 0.58.1
2024-03-02 12:36:47,649:INFO:            requests: 2.31.0
2024-03-02 12:36:47,649:INFO:          matplotlib: 3.7.5
2024-03-02 12:36:47,649:INFO:          scikitplot: 0.3.7
2024-03-02 12:36:47,649:INFO:         yellowbrick: 1.5
2024-03-02 12:36:47,649:INFO:              plotly: 5.19.0
2024-03-02 12:36:47,649:INFO:    plotly-resampler: Not installed
2024-03-02 12:36:47,649:INFO:             kaleido: 0.2.1
2024-03-02 12:36:47,649:INFO:           schemdraw: 0.15
2024-03-02 12:36:47,649:INFO:         statsmodels: 0.14.1
2024-03-02 12:36:47,649:INFO:              sktime: 0.27.0
2024-03-02 12:36:47,649:INFO:               tbats: 1.1.3
2024-03-02 12:36:47,649:INFO:            pmdarima: 2.0.4
2024-03-02 12:36:47,649:INFO:              psutil: 5.9.8
2024-03-02 12:36:47,649:INFO:          markupsafe: 2.1.3
2024-03-02 12:36:47,649:INFO:             pickle5: Not installed
2024-03-02 12:36:47,649:INFO:         cloudpickle: 3.0.0
2024-03-02 12:36:47,649:INFO:         deprecation: 2.1.0
2024-03-02 12:36:47,649:INFO:              xxhash: 3.4.1
2024-03-02 12:36:47,649:INFO:           wurlitzer: Not installed
2024-03-02 12:36:47,650:INFO:PyCaret optional dependencies:
2024-03-02 12:36:47,671:INFO:                shap: Not installed
2024-03-02 12:36:47,671:INFO:           interpret: Not installed
2024-03-02 12:36:47,671:INFO:                umap: Not installed
2024-03-02 12:36:47,671:INFO:     ydata_profiling: 4.6.5
2024-03-02 12:36:47,671:INFO:  explainerdashboard: Not installed
2024-03-02 12:36:47,671:INFO:             autoviz: Not installed
2024-03-02 12:36:47,671:INFO:           fairlearn: Not installed
2024-03-02 12:36:47,671:INFO:          deepchecks: Not installed
2024-03-02 12:36:47,671:INFO:             xgboost: 2.0.3
2024-03-02 12:36:47,671:INFO:            catboost: Not installed
2024-03-02 12:36:47,671:INFO:              kmodes: Not installed
2024-03-02 12:36:47,671:INFO:             mlxtend: Not installed
2024-03-02 12:36:47,671:INFO:       statsforecast: Not installed
2024-03-02 12:36:47,671:INFO:        tune_sklearn: Not installed
2024-03-02 12:36:47,671:INFO:                 ray: Not installed
2024-03-02 12:36:47,671:INFO:            hyperopt: Not installed
2024-03-02 12:36:47,671:INFO:              optuna: Not installed
2024-03-02 12:36:47,671:INFO:               skopt: Not installed
2024-03-02 12:36:47,671:INFO:              mlflow: Not installed
2024-03-02 12:36:47,671:INFO:              gradio: Not installed
2024-03-02 12:36:47,671:INFO:             fastapi: Not installed
2024-03-02 12:36:47,671:INFO:             uvicorn: Not installed
2024-03-02 12:36:47,671:INFO:              m2cgen: Not installed
2024-03-02 12:36:47,671:INFO:           evidently: Not installed
2024-03-02 12:36:47,671:INFO:               fugue: Not installed
2024-03-02 12:36:47,671:INFO:           streamlit: 1.27.2
2024-03-02 12:36:47,671:INFO:             prophet: Not installed
2024-03-02 12:36:47,671:INFO:None
2024-03-02 12:36:47,671:INFO:Set up data.
2024-03-02 12:36:47,687:INFO:Set up folding strategy.
2024-03-02 12:36:47,687:INFO:Set up train/test split.
2024-03-02 12:36:47,695:INFO:Set up index.
2024-03-02 12:36:47,695:INFO:Assigning column types.
2024-03-02 12:36:47,698:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 12:36:47,698:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,702:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,705:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,751:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,787:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,787:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:47,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:47,790:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,793:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,797:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,847:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,881:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,882:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:47,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:47,884:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 12:36:47,888:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,891:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,938:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,972:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,973:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:47,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:47,979:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:36:47,983:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,029:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,064:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,064:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:48,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:48,067:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 12:36:48,074:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,120:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,155:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:48,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:48,165:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,247:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,247:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:48,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:48,250:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 12:36:48,303:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,337:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,338:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:48,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:48,394:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,429:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,430:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:48,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:48,432:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 12:36:48,486:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,521:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:48,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:48,577:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:36:48,612:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:48,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:48,614:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 12:36:48,702:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:48,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:48,796:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:48,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:48,800:INFO:Preparing preprocessing pipeline...
2024-03-02 12:36:48,800:INFO:Set up simple imputation.
2024-03-02 12:36:48,804:INFO:Set up encoding of categorical features.
2024-03-02 12:36:48,804:INFO:Set up column name cleaning.
2024-03-02 12:36:48,981:INFO:Finished creating preprocessing pipeline.
2024-03-02 12:36:48,988:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 12:36:48,989:INFO:Creating final display dataframe.
2024-03-02 12:36:49,420:INFO:Setup _display_container:                     Description             Value
0                    Session id              4049
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              e76e
2024-03-02 12:36:49,513:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:49,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:49,604:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:36:49,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:36:49,607:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 12:36:49,607:INFO:setup() successfully completed in 2.0s...............
2024-03-02 12:36:49,608:INFO:Initializing compare_models()
2024-03-02 12:36:49,608:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002BF4747BBB0>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002BF4747BBB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 12:36:49,608:INFO:Checking exceptions
2024-03-02 12:37:51,214:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:37:51,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:37:51,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:37:51,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:38:09,441:WARNING:D:\HackNITR\automata\polls\views.py:30: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:38:09,480:WARNING:D:\HackNITR\automata\polls\views.py:32: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:38:09,485:INFO:PyCaret RegressionExperiment
2024-03-02 12:38:09,485:INFO:Logging name: reg-default-name
2024-03-02 12:38:09,485:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 12:38:09,485:INFO:version 3.3.0
2024-03-02 12:38:09,485:INFO:Initializing setup()
2024-03-02 12:38:09,485:INFO:self.USI: 8b73
2024-03-02 12:38:09,485:INFO:self._variable_keys: {'y_test', 'exp_name_log', 'n_jobs_param', 'y', 'transform_target_param', 'X_test', 'X_train', 'exp_id', 'fold_generator', 'pipeline', 'USI', 'gpu_n_jobs_param', 'target_param', 'X', 'fold_shuffle_param', 'fold_groups_param', 'data', '_ml_usecase', 'log_plots_param', 'html_param', '_available_plots', 'seed', 'y_train', 'logging_param', 'idx', 'gpu_param', 'memory'}
2024-03-02 12:38:09,485:INFO:Checking environment
2024-03-02 12:38:09,485:INFO:python_version: 3.9.0
2024-03-02 12:38:09,485:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 12:38:09,485:INFO:machine: AMD64
2024-03-02 12:38:09,486:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 12:38:09,492:INFO:Memory: svmem(total=16476958720, available=4274798592, percent=74.1, used=12202160128, free=4274798592)
2024-03-02 12:38:09,492:INFO:Physical Core: 8
2024-03-02 12:38:09,492:INFO:Logical Core: 16
2024-03-02 12:38:09,492:INFO:Checking libraries
2024-03-02 12:38:09,492:INFO:System:
2024-03-02 12:38:09,493:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 12:38:09,493:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 12:38:09,493:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 12:38:09,493:INFO:PyCaret required dependencies:
2024-03-02 12:38:09,528:INFO:                 pip: 23.3.2
2024-03-02 12:38:09,528:INFO:          setuptools: 49.2.1
2024-03-02 12:38:09,528:INFO:             pycaret: 3.3.0
2024-03-02 12:38:09,528:INFO:             IPython: 8.18.1
2024-03-02 12:38:09,528:INFO:          ipywidgets: 8.1.2
2024-03-02 12:38:09,528:INFO:                tqdm: 4.66.1
2024-03-02 12:38:09,528:INFO:               numpy: 1.25.2
2024-03-02 12:38:09,528:INFO:              pandas: 2.1.1
2024-03-02 12:38:09,528:INFO:              jinja2: 3.1.2
2024-03-02 12:38:09,529:INFO:               scipy: 1.11.4
2024-03-02 12:38:09,529:INFO:              joblib: 1.3.2
2024-03-02 12:38:09,529:INFO:             sklearn: 1.4.1.post1
2024-03-02 12:38:09,529:INFO:                pyod: 1.1.3
2024-03-02 12:38:09,529:INFO:            imblearn: 0.12.0
2024-03-02 12:38:09,529:INFO:   category_encoders: 2.6.3
2024-03-02 12:38:09,529:INFO:            lightgbm: 4.3.0
2024-03-02 12:38:09,529:INFO:               numba: 0.58.1
2024-03-02 12:38:09,529:INFO:            requests: 2.31.0
2024-03-02 12:38:09,529:INFO:          matplotlib: 3.7.5
2024-03-02 12:38:09,529:INFO:          scikitplot: 0.3.7
2024-03-02 12:38:09,529:INFO:         yellowbrick: 1.5
2024-03-02 12:38:09,529:INFO:              plotly: 5.19.0
2024-03-02 12:38:09,529:INFO:    plotly-resampler: Not installed
2024-03-02 12:38:09,529:INFO:             kaleido: 0.2.1
2024-03-02 12:38:09,529:INFO:           schemdraw: 0.15
2024-03-02 12:38:09,529:INFO:         statsmodels: 0.14.1
2024-03-02 12:38:09,529:INFO:              sktime: 0.27.0
2024-03-02 12:38:09,529:INFO:               tbats: 1.1.3
2024-03-02 12:38:09,529:INFO:            pmdarima: 2.0.4
2024-03-02 12:38:09,529:INFO:              psutil: 5.9.8
2024-03-02 12:38:09,529:INFO:          markupsafe: 2.1.3
2024-03-02 12:38:09,529:INFO:             pickle5: Not installed
2024-03-02 12:38:09,529:INFO:         cloudpickle: 3.0.0
2024-03-02 12:38:09,529:INFO:         deprecation: 2.1.0
2024-03-02 12:38:09,529:INFO:              xxhash: 3.4.1
2024-03-02 12:38:09,529:INFO:           wurlitzer: Not installed
2024-03-02 12:38:09,529:INFO:PyCaret optional dependencies:
2024-03-02 12:38:09,551:INFO:                shap: Not installed
2024-03-02 12:38:09,551:INFO:           interpret: Not installed
2024-03-02 12:38:09,551:INFO:                umap: Not installed
2024-03-02 12:38:09,551:INFO:     ydata_profiling: 4.6.5
2024-03-02 12:38:09,551:INFO:  explainerdashboard: Not installed
2024-03-02 12:38:09,551:INFO:             autoviz: Not installed
2024-03-02 12:38:09,551:INFO:           fairlearn: Not installed
2024-03-02 12:38:09,551:INFO:          deepchecks: Not installed
2024-03-02 12:38:09,551:INFO:             xgboost: 2.0.3
2024-03-02 12:38:09,551:INFO:            catboost: Not installed
2024-03-02 12:38:09,551:INFO:              kmodes: Not installed
2024-03-02 12:38:09,551:INFO:             mlxtend: Not installed
2024-03-02 12:38:09,551:INFO:       statsforecast: Not installed
2024-03-02 12:38:09,551:INFO:        tune_sklearn: Not installed
2024-03-02 12:38:09,551:INFO:                 ray: Not installed
2024-03-02 12:38:09,551:INFO:            hyperopt: Not installed
2024-03-02 12:38:09,551:INFO:              optuna: Not installed
2024-03-02 12:38:09,551:INFO:               skopt: Not installed
2024-03-02 12:38:09,551:INFO:              mlflow: Not installed
2024-03-02 12:38:09,551:INFO:              gradio: Not installed
2024-03-02 12:38:09,551:INFO:             fastapi: Not installed
2024-03-02 12:38:09,551:INFO:             uvicorn: Not installed
2024-03-02 12:38:09,551:INFO:              m2cgen: Not installed
2024-03-02 12:38:09,552:INFO:           evidently: Not installed
2024-03-02 12:38:09,552:INFO:               fugue: Not installed
2024-03-02 12:38:09,552:INFO:           streamlit: 1.27.2
2024-03-02 12:38:09,552:INFO:             prophet: Not installed
2024-03-02 12:38:09,552:INFO:None
2024-03-02 12:38:09,552:INFO:Set up data.
2024-03-02 12:38:09,566:INFO:Set up folding strategy.
2024-03-02 12:38:09,566:INFO:Set up train/test split.
2024-03-02 12:38:09,576:INFO:Set up index.
2024-03-02 12:38:09,576:INFO:Assigning column types.
2024-03-02 12:38:09,578:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 12:38:09,579:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,582:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,586:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,632:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,667:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:09,670:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:09,670:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,674:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,677:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,721:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,756:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,756:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:09,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:09,758:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 12:38:09,762:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,765:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,809:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,844:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,844:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:09,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:09,850:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,854:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,898:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,932:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,933:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:09,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:09,936:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 12:38:09,943:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:09,988:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,023:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,024:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:10,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:10,033:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,083:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,117:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,118:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:10,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:10,120:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 12:38:10,173:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,209:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:10,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:10,265:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,300:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:10,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:10,303:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 12:38:10,356:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,391:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:10,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:10,447:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:10,482:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:10,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:10,484:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 12:38:10,572:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:10,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:10,662:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:10,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:10,667:INFO:Preparing preprocessing pipeline...
2024-03-02 12:38:10,667:INFO:Set up simple imputation.
2024-03-02 12:38:10,670:INFO:Set up encoding of categorical features.
2024-03-02 12:38:10,671:INFO:Set up column name cleaning.
2024-03-02 12:38:10,864:INFO:Finished creating preprocessing pipeline.
2024-03-02 12:38:10,872:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 12:38:10,872:INFO:Creating final display dataframe.
2024-03-02 12:38:11,319:INFO:Setup _display_container:                     Description             Value
0                    Session id              5132
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              8b73
2024-03-02 12:38:11,412:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:11,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:11,502:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:11,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:11,505:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 12:38:11,505:INFO:setup() successfully completed in 2.02s...............
2024-03-02 12:38:11,505:INFO:Initializing compare_models()
2024-03-02 12:38:11,505:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028AC144B5B0>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000028AC144B5B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 12:38:11,505:INFO:Checking exceptions
2024-03-02 12:38:26,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:38:26,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:38:26,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:38:26,612:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:38:36,886:WARNING:D:\HackNITR\automata\polls\views.py:30: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 12:38:36,925:WARNING:D:\HackNITR\automata\polls\views.py:32: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 12:38:36,931:INFO:PyCaret RegressionExperiment
2024-03-02 12:38:36,931:INFO:Logging name: reg-default-name
2024-03-02 12:38:36,931:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 12:38:36,931:INFO:version 3.3.0
2024-03-02 12:38:36,931:INFO:Initializing setup()
2024-03-02 12:38:36,931:INFO:self.USI: 81ea
2024-03-02 12:38:36,931:INFO:self._variable_keys: {'idx', 'data', 'X_test', 'gpu_param', 'target_param', '_available_plots', 'fold_shuffle_param', 'X', 'exp_id', 'n_jobs_param', 'transform_target_param', 'y_test', 'memory', 'pipeline', 'log_plots_param', 'X_train', 'y', 'logging_param', 'fold_groups_param', 'USI', 'fold_generator', 'html_param', 'seed', '_ml_usecase', 'y_train', 'exp_name_log', 'gpu_n_jobs_param'}
2024-03-02 12:38:36,931:INFO:Checking environment
2024-03-02 12:38:36,932:INFO:python_version: 3.9.0
2024-03-02 12:38:36,932:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 12:38:36,932:INFO:machine: AMD64
2024-03-02 12:38:36,932:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 12:38:36,938:INFO:Memory: svmem(total=16476958720, available=4342136832, percent=73.6, used=12134821888, free=4342136832)
2024-03-02 12:38:36,938:INFO:Physical Core: 8
2024-03-02 12:38:36,938:INFO:Logical Core: 16
2024-03-02 12:38:36,939:INFO:Checking libraries
2024-03-02 12:38:36,939:INFO:System:
2024-03-02 12:38:36,939:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 12:38:36,939:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 12:38:36,939:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 12:38:36,939:INFO:PyCaret required dependencies:
2024-03-02 12:38:36,974:INFO:                 pip: 23.3.2
2024-03-02 12:38:36,974:INFO:          setuptools: 49.2.1
2024-03-02 12:38:36,974:INFO:             pycaret: 3.3.0
2024-03-02 12:38:36,975:INFO:             IPython: 8.18.1
2024-03-02 12:38:36,975:INFO:          ipywidgets: 8.1.2
2024-03-02 12:38:36,975:INFO:                tqdm: 4.66.1
2024-03-02 12:38:36,975:INFO:               numpy: 1.25.2
2024-03-02 12:38:36,975:INFO:              pandas: 2.1.1
2024-03-02 12:38:36,975:INFO:              jinja2: 3.1.2
2024-03-02 12:38:36,975:INFO:               scipy: 1.11.4
2024-03-02 12:38:36,975:INFO:              joblib: 1.3.2
2024-03-02 12:38:36,975:INFO:             sklearn: 1.4.1.post1
2024-03-02 12:38:36,975:INFO:                pyod: 1.1.3
2024-03-02 12:38:36,975:INFO:            imblearn: 0.12.0
2024-03-02 12:38:36,975:INFO:   category_encoders: 2.6.3
2024-03-02 12:38:36,975:INFO:            lightgbm: 4.3.0
2024-03-02 12:38:36,975:INFO:               numba: 0.58.1
2024-03-02 12:38:36,975:INFO:            requests: 2.31.0
2024-03-02 12:38:36,975:INFO:          matplotlib: 3.7.5
2024-03-02 12:38:36,975:INFO:          scikitplot: 0.3.7
2024-03-02 12:38:36,975:INFO:         yellowbrick: 1.5
2024-03-02 12:38:36,975:INFO:              plotly: 5.19.0
2024-03-02 12:38:36,975:INFO:    plotly-resampler: Not installed
2024-03-02 12:38:36,975:INFO:             kaleido: 0.2.1
2024-03-02 12:38:36,975:INFO:           schemdraw: 0.15
2024-03-02 12:38:36,975:INFO:         statsmodels: 0.14.1
2024-03-02 12:38:36,975:INFO:              sktime: 0.27.0
2024-03-02 12:38:36,975:INFO:               tbats: 1.1.3
2024-03-02 12:38:36,975:INFO:            pmdarima: 2.0.4
2024-03-02 12:38:36,975:INFO:              psutil: 5.9.8
2024-03-02 12:38:36,975:INFO:          markupsafe: 2.1.3
2024-03-02 12:38:36,975:INFO:             pickle5: Not installed
2024-03-02 12:38:36,975:INFO:         cloudpickle: 3.0.0
2024-03-02 12:38:36,975:INFO:         deprecation: 2.1.0
2024-03-02 12:38:36,975:INFO:              xxhash: 3.4.1
2024-03-02 12:38:36,975:INFO:           wurlitzer: Not installed
2024-03-02 12:38:36,975:INFO:PyCaret optional dependencies:
2024-03-02 12:38:36,997:INFO:                shap: Not installed
2024-03-02 12:38:36,997:INFO:           interpret: Not installed
2024-03-02 12:38:36,997:INFO:                umap: Not installed
2024-03-02 12:38:36,997:INFO:     ydata_profiling: 4.6.5
2024-03-02 12:38:36,998:INFO:  explainerdashboard: Not installed
2024-03-02 12:38:36,998:INFO:             autoviz: Not installed
2024-03-02 12:38:36,998:INFO:           fairlearn: Not installed
2024-03-02 12:38:36,998:INFO:          deepchecks: Not installed
2024-03-02 12:38:36,998:INFO:             xgboost: 2.0.3
2024-03-02 12:38:36,998:INFO:            catboost: Not installed
2024-03-02 12:38:36,998:INFO:              kmodes: Not installed
2024-03-02 12:38:36,998:INFO:             mlxtend: Not installed
2024-03-02 12:38:36,998:INFO:       statsforecast: Not installed
2024-03-02 12:38:36,998:INFO:        tune_sklearn: Not installed
2024-03-02 12:38:36,998:INFO:                 ray: Not installed
2024-03-02 12:38:36,998:INFO:            hyperopt: Not installed
2024-03-02 12:38:36,998:INFO:              optuna: Not installed
2024-03-02 12:38:36,998:INFO:               skopt: Not installed
2024-03-02 12:38:36,998:INFO:              mlflow: Not installed
2024-03-02 12:38:36,998:INFO:              gradio: Not installed
2024-03-02 12:38:36,998:INFO:             fastapi: Not installed
2024-03-02 12:38:36,998:INFO:             uvicorn: Not installed
2024-03-02 12:38:36,998:INFO:              m2cgen: Not installed
2024-03-02 12:38:36,998:INFO:           evidently: Not installed
2024-03-02 12:38:36,998:INFO:               fugue: Not installed
2024-03-02 12:38:36,998:INFO:           streamlit: 1.27.2
2024-03-02 12:38:36,998:INFO:             prophet: Not installed
2024-03-02 12:38:36,998:INFO:None
2024-03-02 12:38:36,998:INFO:Set up data.
2024-03-02 12:38:37,013:INFO:Set up folding strategy.
2024-03-02 12:38:37,013:INFO:Set up train/test split.
2024-03-02 12:38:37,021:INFO:Set up index.
2024-03-02 12:38:37,021:INFO:Assigning column types.
2024-03-02 12:38:37,024:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 12:38:37,024:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,028:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,031:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,077:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,112:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,112:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:37,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:37,115:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,118:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,122:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,167:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,203:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,204:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:37,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:37,206:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 12:38:37,210:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,214:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,259:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,294:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,294:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:37,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:37,300:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,304:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,349:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,384:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,384:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:37,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:37,389:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 12:38:37,396:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,442:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,476:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,477:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:37,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:37,486:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,532:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,572:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:37,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:37,575:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 12:38:37,628:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,663:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:37,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:37,718:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,753:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,753:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:37,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:37,756:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 12:38:37,809:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,849:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:37,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:37,907:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 12:38:37,942:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:37,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:37,944:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 12:38:38,033:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:38,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:38,123:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:38,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:38,127:INFO:Preparing preprocessing pipeline...
2024-03-02 12:38:38,127:INFO:Set up simple imputation.
2024-03-02 12:38:38,131:INFO:Set up encoding of categorical features.
2024-03-02 12:38:38,131:INFO:Set up column name cleaning.
2024-03-02 12:38:38,314:INFO:Finished creating preprocessing pipeline.
2024-03-02 12:38:38,321:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 12:38:38,321:INFO:Creating final display dataframe.
2024-03-02 12:38:38,762:INFO:Setup _display_container:                     Description             Value
0                    Session id              2425
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              81ea
2024-03-02 12:38:38,855:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:38,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:38,948:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 12:38:38,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 12:38:38,951:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 12:38:38,951:INFO:setup() successfully completed in 2.02s...............
2024-03-02 12:38:38,951:INFO:Initializing compare_models()
2024-03-02 12:38:38,951:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 12:38:38,952:INFO:Checking exceptions
2024-03-02 12:38:38,954:INFO:Preparing display monitor
2024-03-02 12:38:38,956:INFO:Time budget is 1 minutes
2024-03-02 12:38:38,956:INFO:Initializing Linear Regression
2024-03-02 12:38:38,956:INFO:Total runtime is 0.0 minutes
2024-03-02 12:38:38,957:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:38,957:INFO:Initializing create_model()
2024-03-02 12:38:38,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:38,957:INFO:Checking exceptions
2024-03-02 12:38:38,957:INFO:Importing libraries
2024-03-02 12:38:38,957:INFO:Copying training dataset
2024-03-02 12:38:38,961:INFO:Defining folds
2024-03-02 12:38:38,961:INFO:Declaring metric variables
2024-03-02 12:38:38,961:INFO:Importing untrained model
2024-03-02 12:38:38,962:INFO:Linear Regression Imported successfully
2024-03-02 12:38:38,962:INFO:Starting cross validation
2024-03-02 12:38:38,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:41,475:INFO:Calculating mean and std
2024-03-02 12:38:41,476:INFO:Creating metrics dataframe
2024-03-02 12:38:41,479:INFO:Uploading results into container
2024-03-02 12:38:41,480:INFO:Uploading model into container now
2024-03-02 12:38:41,480:INFO:_master_model_container: 1
2024-03-02 12:38:41,480:INFO:_display_container: 2
2024-03-02 12:38:41,481:INFO:LinearRegression(n_jobs=-1)
2024-03-02 12:38:41,481:INFO:create_model() successfully completed......................................
2024-03-02 12:38:41,588:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:41,588:INFO:Creating metrics dataframe
2024-03-02 12:38:41,590:INFO:Initializing Lasso Regression
2024-03-02 12:38:41,590:INFO:Total runtime is 0.04390405416488648 minutes
2024-03-02 12:38:41,591:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:41,591:INFO:Initializing create_model()
2024-03-02 12:38:41,591:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:41,591:INFO:Checking exceptions
2024-03-02 12:38:41,591:INFO:Importing libraries
2024-03-02 12:38:41,591:INFO:Copying training dataset
2024-03-02 12:38:41,595:INFO:Defining folds
2024-03-02 12:38:41,595:INFO:Declaring metric variables
2024-03-02 12:38:41,595:INFO:Importing untrained model
2024-03-02 12:38:41,595:INFO:Lasso Regression Imported successfully
2024-03-02 12:38:41,596:INFO:Starting cross validation
2024-03-02 12:38:41,597:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:43,219:INFO:Calculating mean and std
2024-03-02 12:38:43,220:INFO:Creating metrics dataframe
2024-03-02 12:38:43,222:INFO:Uploading results into container
2024-03-02 12:38:43,223:INFO:Uploading model into container now
2024-03-02 12:38:43,223:INFO:_master_model_container: 2
2024-03-02 12:38:43,223:INFO:_display_container: 2
2024-03-02 12:38:43,224:INFO:Lasso(random_state=2425)
2024-03-02 12:38:43,224:INFO:create_model() successfully completed......................................
2024-03-02 12:38:43,320:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:43,320:INFO:Creating metrics dataframe
2024-03-02 12:38:43,322:INFO:Initializing Ridge Regression
2024-03-02 12:38:43,322:INFO:Total runtime is 0.07277095317840576 minutes
2024-03-02 12:38:43,323:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:43,323:INFO:Initializing create_model()
2024-03-02 12:38:43,323:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:43,323:INFO:Checking exceptions
2024-03-02 12:38:43,323:INFO:Importing libraries
2024-03-02 12:38:43,323:INFO:Copying training dataset
2024-03-02 12:38:43,327:INFO:Defining folds
2024-03-02 12:38:43,327:INFO:Declaring metric variables
2024-03-02 12:38:43,327:INFO:Importing untrained model
2024-03-02 12:38:43,328:INFO:Ridge Regression Imported successfully
2024-03-02 12:38:43,328:INFO:Starting cross validation
2024-03-02 12:38:43,329:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:43,475:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.82527e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:38:43,485:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.82589e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:38:43,505:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.23062e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:38:43,509:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.71681e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:38:43,509:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.77602e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:38:43,516:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.70994e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:38:43,528:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.68616e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:38:43,530:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.81237e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:38:43,534:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.84701e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:38:43,547:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.96331e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 12:38:43,583:INFO:Calculating mean and std
2024-03-02 12:38:43,584:INFO:Creating metrics dataframe
2024-03-02 12:38:43,585:INFO:Uploading results into container
2024-03-02 12:38:43,586:INFO:Uploading model into container now
2024-03-02 12:38:43,586:INFO:_master_model_container: 3
2024-03-02 12:38:43,586:INFO:_display_container: 2
2024-03-02 12:38:43,586:INFO:Ridge(random_state=2425)
2024-03-02 12:38:43,586:INFO:create_model() successfully completed......................................
2024-03-02 12:38:43,667:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:43,667:INFO:Creating metrics dataframe
2024-03-02 12:38:43,669:INFO:Initializing Elastic Net
2024-03-02 12:38:43,669:INFO:Total runtime is 0.07855147123336792 minutes
2024-03-02 12:38:43,669:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:43,669:INFO:Initializing create_model()
2024-03-02 12:38:43,669:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:43,669:INFO:Checking exceptions
2024-03-02 12:38:43,669:INFO:Importing libraries
2024-03-02 12:38:43,669:INFO:Copying training dataset
2024-03-02 12:38:43,672:INFO:Defining folds
2024-03-02 12:38:43,672:INFO:Declaring metric variables
2024-03-02 12:38:43,672:INFO:Importing untrained model
2024-03-02 12:38:43,672:INFO:Elastic Net Imported successfully
2024-03-02 12:38:43,673:INFO:Starting cross validation
2024-03-02 12:38:43,674:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:43,900:INFO:Calculating mean and std
2024-03-02 12:38:43,901:INFO:Creating metrics dataframe
2024-03-02 12:38:43,902:INFO:Uploading results into container
2024-03-02 12:38:43,902:INFO:Uploading model into container now
2024-03-02 12:38:43,903:INFO:_master_model_container: 4
2024-03-02 12:38:43,903:INFO:_display_container: 2
2024-03-02 12:38:43,903:INFO:ElasticNet(random_state=2425)
2024-03-02 12:38:43,903:INFO:create_model() successfully completed......................................
2024-03-02 12:38:43,983:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:43,983:INFO:Creating metrics dataframe
2024-03-02 12:38:43,985:INFO:Initializing Least Angle Regression
2024-03-02 12:38:43,985:INFO:Total runtime is 0.0838115374247233 minutes
2024-03-02 12:38:43,985:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:43,985:INFO:Initializing create_model()
2024-03-02 12:38:43,985:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:43,985:INFO:Checking exceptions
2024-03-02 12:38:43,985:INFO:Importing libraries
2024-03-02 12:38:43,985:INFO:Copying training dataset
2024-03-02 12:38:43,988:INFO:Defining folds
2024-03-02 12:38:43,988:INFO:Declaring metric variables
2024-03-02 12:38:43,988:INFO:Importing untrained model
2024-03-02 12:38:43,988:INFO:Least Angle Regression Imported successfully
2024-03-02 12:38:43,988:INFO:Starting cross validation
2024-03-02 12:38:43,989:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:44,219:INFO:Calculating mean and std
2024-03-02 12:38:44,223:INFO:Creating metrics dataframe
2024-03-02 12:38:44,225:INFO:Uploading results into container
2024-03-02 12:38:44,225:INFO:Uploading model into container now
2024-03-02 12:38:44,225:INFO:_master_model_container: 5
2024-03-02 12:38:44,225:INFO:_display_container: 2
2024-03-02 12:38:44,225:INFO:Lars(random_state=2425)
2024-03-02 12:38:44,225:INFO:create_model() successfully completed......................................
2024-03-02 12:38:44,305:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:44,305:INFO:Creating metrics dataframe
2024-03-02 12:38:44,307:INFO:Initializing Lasso Least Angle Regression
2024-03-02 12:38:44,307:INFO:Total runtime is 0.08917915026346843 minutes
2024-03-02 12:38:44,307:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:44,308:INFO:Initializing create_model()
2024-03-02 12:38:44,308:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:44,308:INFO:Checking exceptions
2024-03-02 12:38:44,308:INFO:Importing libraries
2024-03-02 12:38:44,308:INFO:Copying training dataset
2024-03-02 12:38:44,311:INFO:Defining folds
2024-03-02 12:38:44,311:INFO:Declaring metric variables
2024-03-02 12:38:44,311:INFO:Importing untrained model
2024-03-02 12:38:44,311:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 12:38:44,311:INFO:Starting cross validation
2024-03-02 12:38:44,312:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:44,537:INFO:Calculating mean and std
2024-03-02 12:38:44,538:INFO:Creating metrics dataframe
2024-03-02 12:38:44,540:INFO:Uploading results into container
2024-03-02 12:38:44,540:INFO:Uploading model into container now
2024-03-02 12:38:44,540:INFO:_master_model_container: 6
2024-03-02 12:38:44,540:INFO:_display_container: 2
2024-03-02 12:38:44,541:INFO:LassoLars(random_state=2425)
2024-03-02 12:38:44,541:INFO:create_model() successfully completed......................................
2024-03-02 12:38:44,621:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:44,621:INFO:Creating metrics dataframe
2024-03-02 12:38:44,623:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 12:38:44,624:INFO:Total runtime is 0.09446385701497396 minutes
2024-03-02 12:38:44,624:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:44,624:INFO:Initializing create_model()
2024-03-02 12:38:44,624:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:44,624:INFO:Checking exceptions
2024-03-02 12:38:44,624:INFO:Importing libraries
2024-03-02 12:38:44,624:INFO:Copying training dataset
2024-03-02 12:38:44,629:INFO:Defining folds
2024-03-02 12:38:44,629:INFO:Declaring metric variables
2024-03-02 12:38:44,629:INFO:Importing untrained model
2024-03-02 12:38:44,629:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 12:38:44,629:INFO:Starting cross validation
2024-03-02 12:38:44,631:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:44,870:INFO:Calculating mean and std
2024-03-02 12:38:44,871:INFO:Creating metrics dataframe
2024-03-02 12:38:44,872:INFO:Uploading results into container
2024-03-02 12:38:44,872:INFO:Uploading model into container now
2024-03-02 12:38:44,873:INFO:_master_model_container: 7
2024-03-02 12:38:44,873:INFO:_display_container: 2
2024-03-02 12:38:44,873:INFO:OrthogonalMatchingPursuit()
2024-03-02 12:38:44,873:INFO:create_model() successfully completed......................................
2024-03-02 12:38:44,954:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:44,954:INFO:Creating metrics dataframe
2024-03-02 12:38:44,956:INFO:Initializing Bayesian Ridge
2024-03-02 12:38:44,956:INFO:Total runtime is 0.09999836285909018 minutes
2024-03-02 12:38:44,957:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:44,957:INFO:Initializing create_model()
2024-03-02 12:38:44,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:44,957:INFO:Checking exceptions
2024-03-02 12:38:44,957:INFO:Importing libraries
2024-03-02 12:38:44,957:INFO:Copying training dataset
2024-03-02 12:38:44,960:INFO:Defining folds
2024-03-02 12:38:44,960:INFO:Declaring metric variables
2024-03-02 12:38:44,960:INFO:Importing untrained model
2024-03-02 12:38:44,960:INFO:Bayesian Ridge Imported successfully
2024-03-02 12:38:44,961:INFO:Starting cross validation
2024-03-02 12:38:44,962:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:45,189:INFO:Calculating mean and std
2024-03-02 12:38:45,190:INFO:Creating metrics dataframe
2024-03-02 12:38:45,191:INFO:Uploading results into container
2024-03-02 12:38:45,191:INFO:Uploading model into container now
2024-03-02 12:38:45,192:INFO:_master_model_container: 8
2024-03-02 12:38:45,192:INFO:_display_container: 2
2024-03-02 12:38:45,192:INFO:BayesianRidge()
2024-03-02 12:38:45,192:INFO:create_model() successfully completed......................................
2024-03-02 12:38:45,275:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:45,275:INFO:Creating metrics dataframe
2024-03-02 12:38:45,277:INFO:Initializing Passive Aggressive Regressor
2024-03-02 12:38:45,277:INFO:Total runtime is 0.10534971555074057 minutes
2024-03-02 12:38:45,277:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:45,278:INFO:Initializing create_model()
2024-03-02 12:38:45,278:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:45,278:INFO:Checking exceptions
2024-03-02 12:38:45,278:INFO:Importing libraries
2024-03-02 12:38:45,278:INFO:Copying training dataset
2024-03-02 12:38:45,281:INFO:Defining folds
2024-03-02 12:38:45,281:INFO:Declaring metric variables
2024-03-02 12:38:45,281:INFO:Importing untrained model
2024-03-02 12:38:45,281:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 12:38:45,281:INFO:Starting cross validation
2024-03-02 12:38:45,283:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:45,521:INFO:Calculating mean and std
2024-03-02 12:38:45,522:INFO:Creating metrics dataframe
2024-03-02 12:38:45,523:INFO:Uploading results into container
2024-03-02 12:38:45,523:INFO:Uploading model into container now
2024-03-02 12:38:45,524:INFO:_master_model_container: 9
2024-03-02 12:38:45,524:INFO:_display_container: 2
2024-03-02 12:38:45,524:INFO:PassiveAggressiveRegressor(random_state=2425)
2024-03-02 12:38:45,524:INFO:create_model() successfully completed......................................
2024-03-02 12:38:45,613:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:45,613:INFO:Creating metrics dataframe
2024-03-02 12:38:45,615:INFO:Initializing Huber Regressor
2024-03-02 12:38:45,615:INFO:Total runtime is 0.11097896099090578 minutes
2024-03-02 12:38:45,615:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:45,615:INFO:Initializing create_model()
2024-03-02 12:38:45,615:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:45,615:INFO:Checking exceptions
2024-03-02 12:38:45,616:INFO:Importing libraries
2024-03-02 12:38:45,616:INFO:Copying training dataset
2024-03-02 12:38:45,619:INFO:Defining folds
2024-03-02 12:38:45,619:INFO:Declaring metric variables
2024-03-02 12:38:45,619:INFO:Importing untrained model
2024-03-02 12:38:45,619:INFO:Huber Regressor Imported successfully
2024-03-02 12:38:45,619:INFO:Starting cross validation
2024-03-02 12:38:45,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:45,852:INFO:Calculating mean and std
2024-03-02 12:38:45,853:INFO:Creating metrics dataframe
2024-03-02 12:38:45,854:INFO:Uploading results into container
2024-03-02 12:38:45,855:INFO:Uploading model into container now
2024-03-02 12:38:45,855:INFO:_master_model_container: 10
2024-03-02 12:38:45,855:INFO:_display_container: 2
2024-03-02 12:38:45,855:INFO:HuberRegressor()
2024-03-02 12:38:45,855:INFO:create_model() successfully completed......................................
2024-03-02 12:38:45,938:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:45,938:INFO:Creating metrics dataframe
2024-03-02 12:38:45,940:INFO:Initializing K Neighbors Regressor
2024-03-02 12:38:45,940:INFO:Total runtime is 0.1163976271947225 minutes
2024-03-02 12:38:45,941:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:45,941:INFO:Initializing create_model()
2024-03-02 12:38:45,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:45,941:INFO:Checking exceptions
2024-03-02 12:38:45,941:INFO:Importing libraries
2024-03-02 12:38:45,941:INFO:Copying training dataset
2024-03-02 12:38:45,945:INFO:Defining folds
2024-03-02 12:38:45,946:INFO:Declaring metric variables
2024-03-02 12:38:45,946:INFO:Importing untrained model
2024-03-02 12:38:45,946:INFO:K Neighbors Regressor Imported successfully
2024-03-02 12:38:45,946:INFO:Starting cross validation
2024-03-02 12:38:45,948:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:46,268:INFO:Calculating mean and std
2024-03-02 12:38:46,269:INFO:Creating metrics dataframe
2024-03-02 12:38:46,271:INFO:Uploading results into container
2024-03-02 12:38:46,271:INFO:Uploading model into container now
2024-03-02 12:38:46,271:INFO:_master_model_container: 11
2024-03-02 12:38:46,271:INFO:_display_container: 2
2024-03-02 12:38:46,271:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 12:38:46,272:INFO:create_model() successfully completed......................................
2024-03-02 12:38:46,351:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:46,352:INFO:Creating metrics dataframe
2024-03-02 12:38:46,353:INFO:Initializing Decision Tree Regressor
2024-03-02 12:38:46,354:INFO:Total runtime is 0.12330782016118369 minutes
2024-03-02 12:38:46,354:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:46,354:INFO:Initializing create_model()
2024-03-02 12:38:46,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:46,354:INFO:Checking exceptions
2024-03-02 12:38:46,354:INFO:Importing libraries
2024-03-02 12:38:46,354:INFO:Copying training dataset
2024-03-02 12:38:46,357:INFO:Defining folds
2024-03-02 12:38:46,357:INFO:Declaring metric variables
2024-03-02 12:38:46,357:INFO:Importing untrained model
2024-03-02 12:38:46,357:INFO:Decision Tree Regressor Imported successfully
2024-03-02 12:38:46,358:INFO:Starting cross validation
2024-03-02 12:38:46,359:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:46,601:INFO:Calculating mean and std
2024-03-02 12:38:46,602:INFO:Creating metrics dataframe
2024-03-02 12:38:46,603:INFO:Uploading results into container
2024-03-02 12:38:46,604:INFO:Uploading model into container now
2024-03-02 12:38:46,604:INFO:_master_model_container: 12
2024-03-02 12:38:46,604:INFO:_display_container: 2
2024-03-02 12:38:46,604:INFO:DecisionTreeRegressor(random_state=2425)
2024-03-02 12:38:46,604:INFO:create_model() successfully completed......................................
2024-03-02 12:38:46,685:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:46,685:INFO:Creating metrics dataframe
2024-03-02 12:38:46,687:INFO:Initializing Random Forest Regressor
2024-03-02 12:38:46,687:INFO:Total runtime is 0.12884992361068728 minutes
2024-03-02 12:38:46,687:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:46,687:INFO:Initializing create_model()
2024-03-02 12:38:46,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:46,688:INFO:Checking exceptions
2024-03-02 12:38:46,688:INFO:Importing libraries
2024-03-02 12:38:46,688:INFO:Copying training dataset
2024-03-02 12:38:46,691:INFO:Defining folds
2024-03-02 12:38:46,691:INFO:Declaring metric variables
2024-03-02 12:38:46,691:INFO:Importing untrained model
2024-03-02 12:38:46,691:INFO:Random Forest Regressor Imported successfully
2024-03-02 12:38:46,691:INFO:Starting cross validation
2024-03-02 12:38:46,692:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:48,082:INFO:Calculating mean and std
2024-03-02 12:38:48,082:INFO:Creating metrics dataframe
2024-03-02 12:38:48,084:INFO:Uploading results into container
2024-03-02 12:38:48,085:INFO:Uploading model into container now
2024-03-02 12:38:48,085:INFO:_master_model_container: 13
2024-03-02 12:38:48,085:INFO:_display_container: 2
2024-03-02 12:38:48,085:INFO:RandomForestRegressor(n_jobs=-1, random_state=2425)
2024-03-02 12:38:48,085:INFO:create_model() successfully completed......................................
2024-03-02 12:38:48,171:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:48,171:INFO:Creating metrics dataframe
2024-03-02 12:38:48,173:INFO:Initializing Extra Trees Regressor
2024-03-02 12:38:48,173:INFO:Total runtime is 0.1536098122596741 minutes
2024-03-02 12:38:48,173:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:48,173:INFO:Initializing create_model()
2024-03-02 12:38:48,173:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:48,173:INFO:Checking exceptions
2024-03-02 12:38:48,173:INFO:Importing libraries
2024-03-02 12:38:48,173:INFO:Copying training dataset
2024-03-02 12:38:48,177:INFO:Defining folds
2024-03-02 12:38:48,177:INFO:Declaring metric variables
2024-03-02 12:38:48,177:INFO:Importing untrained model
2024-03-02 12:38:48,178:INFO:Extra Trees Regressor Imported successfully
2024-03-02 12:38:48,178:INFO:Starting cross validation
2024-03-02 12:38:48,179:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:49,012:INFO:Calculating mean and std
2024-03-02 12:38:49,013:INFO:Creating metrics dataframe
2024-03-02 12:38:49,014:INFO:Uploading results into container
2024-03-02 12:38:49,015:INFO:Uploading model into container now
2024-03-02 12:38:49,015:INFO:_master_model_container: 14
2024-03-02 12:38:49,015:INFO:_display_container: 2
2024-03-02 12:38:49,015:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2425)
2024-03-02 12:38:49,015:INFO:create_model() successfully completed......................................
2024-03-02 12:38:49,097:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:49,097:INFO:Creating metrics dataframe
2024-03-02 12:38:49,099:INFO:Initializing AdaBoost Regressor
2024-03-02 12:38:49,099:INFO:Total runtime is 0.16905272801717125 minutes
2024-03-02 12:38:49,099:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:49,099:INFO:Initializing create_model()
2024-03-02 12:38:49,099:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:49,099:INFO:Checking exceptions
2024-03-02 12:38:49,099:INFO:Importing libraries
2024-03-02 12:38:49,099:INFO:Copying training dataset
2024-03-02 12:38:49,102:INFO:Defining folds
2024-03-02 12:38:49,102:INFO:Declaring metric variables
2024-03-02 12:38:49,102:INFO:Importing untrained model
2024-03-02 12:38:49,103:INFO:AdaBoost Regressor Imported successfully
2024-03-02 12:38:49,103:INFO:Starting cross validation
2024-03-02 12:38:49,104:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:49,533:INFO:Calculating mean and std
2024-03-02 12:38:49,534:INFO:Creating metrics dataframe
2024-03-02 12:38:49,536:INFO:Uploading results into container
2024-03-02 12:38:49,536:INFO:Uploading model into container now
2024-03-02 12:38:49,536:INFO:_master_model_container: 15
2024-03-02 12:38:49,536:INFO:_display_container: 2
2024-03-02 12:38:49,536:INFO:AdaBoostRegressor(random_state=2425)
2024-03-02 12:38:49,537:INFO:create_model() successfully completed......................................
2024-03-02 12:38:49,618:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:49,618:INFO:Creating metrics dataframe
2024-03-02 12:38:49,620:INFO:Initializing Gradient Boosting Regressor
2024-03-02 12:38:49,620:INFO:Total runtime is 0.17773658831914269 minutes
2024-03-02 12:38:49,620:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:49,620:INFO:Initializing create_model()
2024-03-02 12:38:49,620:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:49,620:INFO:Checking exceptions
2024-03-02 12:38:49,620:INFO:Importing libraries
2024-03-02 12:38:49,620:INFO:Copying training dataset
2024-03-02 12:38:49,623:INFO:Defining folds
2024-03-02 12:38:49,623:INFO:Declaring metric variables
2024-03-02 12:38:49,624:INFO:Importing untrained model
2024-03-02 12:38:49,624:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 12:38:49,624:INFO:Starting cross validation
2024-03-02 12:38:49,625:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:50,369:INFO:Calculating mean and std
2024-03-02 12:38:50,370:INFO:Creating metrics dataframe
2024-03-02 12:38:50,371:INFO:Uploading results into container
2024-03-02 12:38:50,371:INFO:Uploading model into container now
2024-03-02 12:38:50,372:INFO:_master_model_container: 16
2024-03-02 12:38:50,372:INFO:_display_container: 2
2024-03-02 12:38:50,372:INFO:GradientBoostingRegressor(random_state=2425)
2024-03-02 12:38:50,372:INFO:create_model() successfully completed......................................
2024-03-02 12:38:50,452:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:50,452:INFO:Creating metrics dataframe
2024-03-02 12:38:50,454:INFO:Initializing Extreme Gradient Boosting
2024-03-02 12:38:50,454:INFO:Total runtime is 0.19163209199905398 minutes
2024-03-02 12:38:50,454:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:50,455:INFO:Initializing create_model()
2024-03-02 12:38:50,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:50,455:INFO:Checking exceptions
2024-03-02 12:38:50,455:INFO:Importing libraries
2024-03-02 12:38:50,455:INFO:Copying training dataset
2024-03-02 12:38:50,458:INFO:Defining folds
2024-03-02 12:38:50,458:INFO:Declaring metric variables
2024-03-02 12:38:50,458:INFO:Importing untrained model
2024-03-02 12:38:50,458:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 12:38:50,459:INFO:Starting cross validation
2024-03-02 12:38:50,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:50,926:INFO:Calculating mean and std
2024-03-02 12:38:50,927:INFO:Creating metrics dataframe
2024-03-02 12:38:50,928:INFO:Uploading results into container
2024-03-02 12:38:50,929:INFO:Uploading model into container now
2024-03-02 12:38:50,929:INFO:_master_model_container: 17
2024-03-02 12:38:50,929:INFO:_display_container: 2
2024-03-02 12:38:50,930:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=2425, ...)
2024-03-02 12:38:50,930:INFO:create_model() successfully completed......................................
2024-03-02 12:38:51,012:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:51,012:INFO:Creating metrics dataframe
2024-03-02 12:38:51,014:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 12:38:51,014:INFO:Total runtime is 0.20095911820729576 minutes
2024-03-02 12:38:51,014:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:51,014:INFO:Initializing create_model()
2024-03-02 12:38:51,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:51,014:INFO:Checking exceptions
2024-03-02 12:38:51,014:INFO:Importing libraries
2024-03-02 12:38:51,014:INFO:Copying training dataset
2024-03-02 12:38:51,017:INFO:Defining folds
2024-03-02 12:38:51,017:INFO:Declaring metric variables
2024-03-02 12:38:51,017:INFO:Importing untrained model
2024-03-02 12:38:51,018:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 12:38:51,018:INFO:Starting cross validation
2024-03-02 12:38:51,019:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:51,994:INFO:Calculating mean and std
2024-03-02 12:38:51,995:INFO:Creating metrics dataframe
2024-03-02 12:38:51,997:INFO:Uploading results into container
2024-03-02 12:38:51,997:INFO:Uploading model into container now
2024-03-02 12:38:51,998:INFO:_master_model_container: 18
2024-03-02 12:38:51,998:INFO:_display_container: 2
2024-03-02 12:38:51,998:INFO:LGBMRegressor(n_jobs=-1, random_state=2425)
2024-03-02 12:38:51,998:INFO:create_model() successfully completed......................................
2024-03-02 12:38:52,098:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:52,098:INFO:Creating metrics dataframe
2024-03-02 12:38:52,100:INFO:Initializing Dummy Regressor
2024-03-02 12:38:52,100:INFO:Total runtime is 0.21907021204630536 minutes
2024-03-02 12:38:52,100:INFO:SubProcess create_model() called ==================================
2024-03-02 12:38:52,100:INFO:Initializing create_model()
2024-03-02 12:38:52,100:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002273E8D0130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:52,100:INFO:Checking exceptions
2024-03-02 12:38:52,100:INFO:Importing libraries
2024-03-02 12:38:52,101:INFO:Copying training dataset
2024-03-02 12:38:52,104:INFO:Defining folds
2024-03-02 12:38:52,104:INFO:Declaring metric variables
2024-03-02 12:38:52,104:INFO:Importing untrained model
2024-03-02 12:38:52,105:INFO:Dummy Regressor Imported successfully
2024-03-02 12:38:52,105:INFO:Starting cross validation
2024-03-02 12:38:52,106:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 12:38:52,344:INFO:Calculating mean and std
2024-03-02 12:38:52,345:INFO:Creating metrics dataframe
2024-03-02 12:38:52,347:INFO:Uploading results into container
2024-03-02 12:38:52,347:INFO:Uploading model into container now
2024-03-02 12:38:52,347:INFO:_master_model_container: 19
2024-03-02 12:38:52,347:INFO:_display_container: 2
2024-03-02 12:38:52,348:INFO:DummyRegressor()
2024-03-02 12:38:52,348:INFO:create_model() successfully completed......................................
2024-03-02 12:38:52,432:INFO:SubProcess create_model() end ==================================
2024-03-02 12:38:52,432:INFO:Creating metrics dataframe
2024-03-02 12:38:52,436:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 12:38:52,437:INFO:Initializing create_model()
2024-03-02 12:38:52,437:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002273B370910>, estimator=ElasticNet(random_state=2425), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 12:38:52,437:INFO:Checking exceptions
2024-03-02 12:38:52,438:INFO:Importing libraries
2024-03-02 12:38:52,438:INFO:Copying training dataset
2024-03-02 12:38:52,442:INFO:Defining folds
2024-03-02 12:38:52,442:INFO:Declaring metric variables
2024-03-02 12:38:52,442:INFO:Importing untrained model
2024-03-02 12:38:52,442:INFO:Declaring custom model
2024-03-02 12:38:52,442:INFO:Elastic Net Imported successfully
2024-03-02 12:38:52,444:INFO:Cross validation set to False
2024-03-02 12:38:52,444:INFO:Fitting Model
2024-03-02 12:38:52,537:INFO:ElasticNet(random_state=2425)
2024-03-02 12:38:52,538:INFO:create_model() successfully completed......................................
2024-03-02 12:38:52,632:INFO:_master_model_container: 19
2024-03-02 12:38:52,632:INFO:_display_container: 2
2024-03-02 12:38:52,632:INFO:ElasticNet(random_state=2425)
2024-03-02 12:38:52,632:INFO:compare_models() successfully completed......................................
2024-03-02 12:39:14,689:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:39:14,689:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:39:14,689:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:39:14,689:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:50:06,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:50:06,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:50:06,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:50:06,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:51:38,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:51:38,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:51:38,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 12:51:38,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:18:40,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:18:40,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:18:40,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:18:40,880:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:18:57,037:WARNING:D:\HackNITR\automata\polls\views.py:33: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 13:18:57,077:WARNING:D:\HackNITR\automata\polls\views.py:35: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 13:18:57,082:INFO:PyCaret RegressionExperiment
2024-03-02 13:18:57,082:INFO:Logging name: reg-default-name
2024-03-02 13:18:57,082:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 13:18:57,083:INFO:version 3.3.0
2024-03-02 13:18:57,083:INFO:Initializing setup()
2024-03-02 13:18:57,083:INFO:self.USI: be94
2024-03-02 13:18:57,083:INFO:self._variable_keys: {'fold_shuffle_param', 'X_train', 'pipeline', 'seed', 'html_param', 'n_jobs_param', 'y_train', 'idx', 'exp_id', 'USI', 'fold_groups_param', 'data', 'fold_generator', 'y', '_available_plots', 'X', 'X_test', 'gpu_n_jobs_param', 'logging_param', 'exp_name_log', 'transform_target_param', 'log_plots_param', 'memory', '_ml_usecase', 'target_param', 'y_test', 'gpu_param'}
2024-03-02 13:18:57,083:INFO:Checking environment
2024-03-02 13:18:57,083:INFO:python_version: 3.9.0
2024-03-02 13:18:57,083:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 13:18:57,083:INFO:machine: AMD64
2024-03-02 13:18:57,083:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 13:18:57,090:INFO:Memory: svmem(total=16476958720, available=3932258304, percent=76.1, used=12544700416, free=3932258304)
2024-03-02 13:18:57,090:INFO:Physical Core: 8
2024-03-02 13:18:57,090:INFO:Logical Core: 16
2024-03-02 13:18:57,090:INFO:Checking libraries
2024-03-02 13:18:57,090:INFO:System:
2024-03-02 13:18:57,090:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 13:18:57,090:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 13:18:57,090:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 13:18:57,090:INFO:PyCaret required dependencies:
2024-03-02 13:18:57,138:INFO:                 pip: 23.3.2
2024-03-02 13:18:57,138:INFO:          setuptools: 49.2.1
2024-03-02 13:18:57,138:INFO:             pycaret: 3.3.0
2024-03-02 13:18:57,138:INFO:             IPython: 8.18.1
2024-03-02 13:18:57,138:INFO:          ipywidgets: 8.1.2
2024-03-02 13:18:57,138:INFO:                tqdm: 4.66.1
2024-03-02 13:18:57,138:INFO:               numpy: 1.25.2
2024-03-02 13:18:57,138:INFO:              pandas: 2.1.1
2024-03-02 13:18:57,138:INFO:              jinja2: 3.1.2
2024-03-02 13:18:57,138:INFO:               scipy: 1.11.4
2024-03-02 13:18:57,138:INFO:              joblib: 1.3.2
2024-03-02 13:18:57,138:INFO:             sklearn: 1.4.1.post1
2024-03-02 13:18:57,139:INFO:                pyod: 1.1.3
2024-03-02 13:18:57,139:INFO:            imblearn: 0.12.0
2024-03-02 13:18:57,139:INFO:   category_encoders: 2.6.3
2024-03-02 13:18:57,139:INFO:            lightgbm: 4.3.0
2024-03-02 13:18:57,139:INFO:               numba: 0.58.1
2024-03-02 13:18:57,139:INFO:            requests: 2.31.0
2024-03-02 13:18:57,139:INFO:          matplotlib: 3.7.5
2024-03-02 13:18:57,139:INFO:          scikitplot: 0.3.7
2024-03-02 13:18:57,139:INFO:         yellowbrick: 1.5
2024-03-02 13:18:57,139:INFO:              plotly: 5.19.0
2024-03-02 13:18:57,139:INFO:    plotly-resampler: Not installed
2024-03-02 13:18:57,139:INFO:             kaleido: 0.2.1
2024-03-02 13:18:57,139:INFO:           schemdraw: 0.15
2024-03-02 13:18:57,139:INFO:         statsmodels: 0.14.1
2024-03-02 13:18:57,139:INFO:              sktime: 0.27.0
2024-03-02 13:18:57,139:INFO:               tbats: 1.1.3
2024-03-02 13:18:57,139:INFO:            pmdarima: 2.0.4
2024-03-02 13:18:57,139:INFO:              psutil: 5.9.8
2024-03-02 13:18:57,139:INFO:          markupsafe: 2.1.3
2024-03-02 13:18:57,139:INFO:             pickle5: Not installed
2024-03-02 13:18:57,139:INFO:         cloudpickle: 3.0.0
2024-03-02 13:18:57,139:INFO:         deprecation: 2.1.0
2024-03-02 13:18:57,139:INFO:              xxhash: 3.4.1
2024-03-02 13:18:57,139:INFO:           wurlitzer: Not installed
2024-03-02 13:18:57,139:INFO:PyCaret optional dependencies:
2024-03-02 13:18:57,162:INFO:                shap: 0.44.1
2024-03-02 13:18:57,162:INFO:           interpret: Not installed
2024-03-02 13:18:57,162:INFO:                umap: Not installed
2024-03-02 13:18:57,162:INFO:     ydata_profiling: 4.6.5
2024-03-02 13:18:57,162:INFO:  explainerdashboard: 0.4.5
2024-03-02 13:18:57,162:INFO:             autoviz: Not installed
2024-03-02 13:18:57,162:INFO:           fairlearn: Not installed
2024-03-02 13:18:57,162:INFO:          deepchecks: Not installed
2024-03-02 13:18:57,162:INFO:             xgboost: 2.0.3
2024-03-02 13:18:57,162:INFO:            catboost: Not installed
2024-03-02 13:18:57,162:INFO:              kmodes: Not installed
2024-03-02 13:18:57,162:INFO:             mlxtend: Not installed
2024-03-02 13:18:57,162:INFO:       statsforecast: Not installed
2024-03-02 13:18:57,162:INFO:        tune_sklearn: Not installed
2024-03-02 13:18:57,162:INFO:                 ray: Not installed
2024-03-02 13:18:57,162:INFO:            hyperopt: Not installed
2024-03-02 13:18:57,162:INFO:              optuna: Not installed
2024-03-02 13:18:57,162:INFO:               skopt: Not installed
2024-03-02 13:18:57,162:INFO:              mlflow: Not installed
2024-03-02 13:18:57,162:INFO:              gradio: Not installed
2024-03-02 13:18:57,162:INFO:             fastapi: Not installed
2024-03-02 13:18:57,162:INFO:             uvicorn: Not installed
2024-03-02 13:18:57,163:INFO:              m2cgen: Not installed
2024-03-02 13:18:57,163:INFO:           evidently: Not installed
2024-03-02 13:18:57,163:INFO:               fugue: Not installed
2024-03-02 13:18:57,163:INFO:           streamlit: 1.27.2
2024-03-02 13:18:57,163:INFO:             prophet: Not installed
2024-03-02 13:18:57,163:INFO:None
2024-03-02 13:18:57,163:INFO:Set up data.
2024-03-02 13:18:57,179:INFO:Set up folding strategy.
2024-03-02 13:18:57,179:INFO:Set up train/test split.
2024-03-02 13:18:57,187:INFO:Set up index.
2024-03-02 13:18:57,187:INFO:Assigning column types.
2024-03-02 13:18:57,190:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 13:18:57,190:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,194:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,197:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,245:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,279:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,280:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:57,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:57,282:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,286:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,290:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,334:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,369:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,370:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:57,372:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:57,372:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 13:18:57,376:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,380:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,425:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,461:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,461:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:57,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:57,467:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,471:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,516:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,557:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:57,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:57,560:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 13:18:57,567:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,613:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,647:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:57,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:57,657:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,702:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,737:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,738:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:57,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:57,740:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 13:18:57,794:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,831:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,832:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:57,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:57,900:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,938:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:18:57,939:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:57,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:57,941:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 13:18:57,994:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:18:58,029:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:58,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:58,085:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:18:58,120:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:58,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:58,123:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 13:18:58,211:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:58,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:58,307:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:58,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:58,311:INFO:Preparing preprocessing pipeline...
2024-03-02 13:18:58,311:INFO:Set up simple imputation.
2024-03-02 13:18:58,314:INFO:Set up encoding of categorical features.
2024-03-02 13:18:58,315:INFO:Set up column name cleaning.
2024-03-02 13:18:58,496:INFO:Finished creating preprocessing pipeline.
2024-03-02 13:18:58,503:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 13:18:58,503:INFO:Creating final display dataframe.
2024-03-02 13:18:58,953:INFO:Setup _display_container:                     Description             Value
0                    Session id              2051
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              be94
2024-03-02 13:18:59,045:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:59,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:59,137:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:18:59,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:18:59,140:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 13:18:59,140:INFO:setup() successfully completed in 2.06s...............
2024-03-02 13:18:59,140:INFO:Initializing compare_models()
2024-03-02 13:18:59,140:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 13:18:59,140:INFO:Checking exceptions
2024-03-02 13:18:59,142:INFO:Preparing display monitor
2024-03-02 13:18:59,145:INFO:Time budget is 1 minutes
2024-03-02 13:18:59,145:INFO:Initializing Linear Regression
2024-03-02 13:18:59,145:INFO:Total runtime is 0.0 minutes
2024-03-02 13:18:59,145:INFO:SubProcess create_model() called ==================================
2024-03-02 13:18:59,145:INFO:Initializing create_model()
2024-03-02 13:18:59,145:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:18:59,145:INFO:Checking exceptions
2024-03-02 13:18:59,145:INFO:Importing libraries
2024-03-02 13:18:59,145:INFO:Copying training dataset
2024-03-02 13:18:59,150:INFO:Defining folds
2024-03-02 13:18:59,150:INFO:Declaring metric variables
2024-03-02 13:18:59,150:INFO:Importing untrained model
2024-03-02 13:18:59,151:INFO:Linear Regression Imported successfully
2024-03-02 13:18:59,151:INFO:Starting cross validation
2024-03-02 13:18:59,155:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:01,792:INFO:Calculating mean and std
2024-03-02 13:19:01,793:INFO:Creating metrics dataframe
2024-03-02 13:19:01,797:INFO:Uploading results into container
2024-03-02 13:19:01,797:INFO:Uploading model into container now
2024-03-02 13:19:01,798:INFO:_master_model_container: 1
2024-03-02 13:19:01,798:INFO:_display_container: 2
2024-03-02 13:19:01,799:INFO:LinearRegression(n_jobs=-1)
2024-03-02 13:19:01,799:INFO:create_model() successfully completed......................................
2024-03-02 13:19:01,897:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:01,897:INFO:Creating metrics dataframe
2024-03-02 13:19:01,899:INFO:Initializing Lasso Regression
2024-03-02 13:19:01,899:INFO:Total runtime is 0.045896097024281816 minutes
2024-03-02 13:19:01,899:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:01,899:INFO:Initializing create_model()
2024-03-02 13:19:01,899:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:01,899:INFO:Checking exceptions
2024-03-02 13:19:01,899:INFO:Importing libraries
2024-03-02 13:19:01,899:INFO:Copying training dataset
2024-03-02 13:19:01,903:INFO:Defining folds
2024-03-02 13:19:01,903:INFO:Declaring metric variables
2024-03-02 13:19:01,903:INFO:Importing untrained model
2024-03-02 13:19:01,903:INFO:Lasso Regression Imported successfully
2024-03-02 13:19:01,903:INFO:Starting cross validation
2024-03-02 13:19:01,905:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:03,697:INFO:Calculating mean and std
2024-03-02 13:19:03,698:INFO:Creating metrics dataframe
2024-03-02 13:19:03,700:INFO:Uploading results into container
2024-03-02 13:19:03,700:INFO:Uploading model into container now
2024-03-02 13:19:03,701:INFO:_master_model_container: 2
2024-03-02 13:19:03,701:INFO:_display_container: 2
2024-03-02 13:19:03,701:INFO:Lasso(random_state=2051)
2024-03-02 13:19:03,701:INFO:create_model() successfully completed......................................
2024-03-02 13:19:03,789:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:03,789:INFO:Creating metrics dataframe
2024-03-02 13:19:03,791:INFO:Initializing Ridge Regression
2024-03-02 13:19:03,791:INFO:Total runtime is 0.07742775281270345 minutes
2024-03-02 13:19:03,791:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:03,792:INFO:Initializing create_model()
2024-03-02 13:19:03,792:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:03,792:INFO:Checking exceptions
2024-03-02 13:19:03,792:INFO:Importing libraries
2024-03-02 13:19:03,792:INFO:Copying training dataset
2024-03-02 13:19:03,796:INFO:Defining folds
2024-03-02 13:19:03,797:INFO:Declaring metric variables
2024-03-02 13:19:03,797:INFO:Importing untrained model
2024-03-02 13:19:03,797:INFO:Ridge Regression Imported successfully
2024-03-02 13:19:03,797:INFO:Starting cross validation
2024-03-02 13:19:03,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:03,924:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.22341e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:19:03,939:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.86503e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:19:03,947:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.5565e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:19:03,958:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.13716e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:19:03,965:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.43449e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:19:03,969:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53089e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:19:03,981:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.42497e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:19:03,983:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.87621e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:19:03,986:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.521e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:19:04,003:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53404e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:19:04,029:INFO:Calculating mean and std
2024-03-02 13:19:04,030:INFO:Creating metrics dataframe
2024-03-02 13:19:04,031:INFO:Uploading results into container
2024-03-02 13:19:04,031:INFO:Uploading model into container now
2024-03-02 13:19:04,032:INFO:_master_model_container: 3
2024-03-02 13:19:04,032:INFO:_display_container: 2
2024-03-02 13:19:04,032:INFO:Ridge(random_state=2051)
2024-03-02 13:19:04,032:INFO:create_model() successfully completed......................................
2024-03-02 13:19:04,115:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:04,115:INFO:Creating metrics dataframe
2024-03-02 13:19:04,117:INFO:Initializing Elastic Net
2024-03-02 13:19:04,117:INFO:Total runtime is 0.08285369078318278 minutes
2024-03-02 13:19:04,117:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:04,117:INFO:Initializing create_model()
2024-03-02 13:19:04,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:04,117:INFO:Checking exceptions
2024-03-02 13:19:04,117:INFO:Importing libraries
2024-03-02 13:19:04,117:INFO:Copying training dataset
2024-03-02 13:19:04,120:INFO:Defining folds
2024-03-02 13:19:04,120:INFO:Declaring metric variables
2024-03-02 13:19:04,120:INFO:Importing untrained model
2024-03-02 13:19:04,121:INFO:Elastic Net Imported successfully
2024-03-02 13:19:04,121:INFO:Starting cross validation
2024-03-02 13:19:04,122:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:04,348:INFO:Calculating mean and std
2024-03-02 13:19:04,349:INFO:Creating metrics dataframe
2024-03-02 13:19:04,350:INFO:Uploading results into container
2024-03-02 13:19:04,351:INFO:Uploading model into container now
2024-03-02 13:19:04,351:INFO:_master_model_container: 4
2024-03-02 13:19:04,351:INFO:_display_container: 2
2024-03-02 13:19:04,351:INFO:ElasticNet(random_state=2051)
2024-03-02 13:19:04,351:INFO:create_model() successfully completed......................................
2024-03-02 13:19:04,436:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:04,436:INFO:Creating metrics dataframe
2024-03-02 13:19:04,438:INFO:Initializing Least Angle Regression
2024-03-02 13:19:04,438:INFO:Total runtime is 0.08821052312850952 minutes
2024-03-02 13:19:04,438:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:04,439:INFO:Initializing create_model()
2024-03-02 13:19:04,439:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:04,439:INFO:Checking exceptions
2024-03-02 13:19:04,439:INFO:Importing libraries
2024-03-02 13:19:04,439:INFO:Copying training dataset
2024-03-02 13:19:04,442:INFO:Defining folds
2024-03-02 13:19:04,442:INFO:Declaring metric variables
2024-03-02 13:19:04,442:INFO:Importing untrained model
2024-03-02 13:19:04,442:INFO:Least Angle Regression Imported successfully
2024-03-02 13:19:04,442:INFO:Starting cross validation
2024-03-02 13:19:04,443:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:04,676:INFO:Calculating mean and std
2024-03-02 13:19:04,677:INFO:Creating metrics dataframe
2024-03-02 13:19:04,678:INFO:Uploading results into container
2024-03-02 13:19:04,678:INFO:Uploading model into container now
2024-03-02 13:19:04,679:INFO:_master_model_container: 5
2024-03-02 13:19:04,679:INFO:_display_container: 2
2024-03-02 13:19:04,679:INFO:Lars(random_state=2051)
2024-03-02 13:19:04,679:INFO:create_model() successfully completed......................................
2024-03-02 13:19:04,763:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:04,763:INFO:Creating metrics dataframe
2024-03-02 13:19:04,765:INFO:Initializing Lasso Least Angle Regression
2024-03-02 13:19:04,765:INFO:Total runtime is 0.09365502993265788 minutes
2024-03-02 13:19:04,765:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:04,765:INFO:Initializing create_model()
2024-03-02 13:19:04,765:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:04,765:INFO:Checking exceptions
2024-03-02 13:19:04,765:INFO:Importing libraries
2024-03-02 13:19:04,765:INFO:Copying training dataset
2024-03-02 13:19:04,768:INFO:Defining folds
2024-03-02 13:19:04,769:INFO:Declaring metric variables
2024-03-02 13:19:04,769:INFO:Importing untrained model
2024-03-02 13:19:04,769:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 13:19:04,769:INFO:Starting cross validation
2024-03-02 13:19:04,770:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:05,006:INFO:Calculating mean and std
2024-03-02 13:19:05,007:INFO:Creating metrics dataframe
2024-03-02 13:19:05,008:INFO:Uploading results into container
2024-03-02 13:19:05,008:INFO:Uploading model into container now
2024-03-02 13:19:05,009:INFO:_master_model_container: 6
2024-03-02 13:19:05,009:INFO:_display_container: 2
2024-03-02 13:19:05,009:INFO:LassoLars(random_state=2051)
2024-03-02 13:19:05,009:INFO:create_model() successfully completed......................................
2024-03-02 13:19:05,093:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:05,094:INFO:Creating metrics dataframe
2024-03-02 13:19:05,096:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 13:19:05,096:INFO:Total runtime is 0.09916807413101197 minutes
2024-03-02 13:19:05,096:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:05,096:INFO:Initializing create_model()
2024-03-02 13:19:05,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:05,097:INFO:Checking exceptions
2024-03-02 13:19:05,097:INFO:Importing libraries
2024-03-02 13:19:05,097:INFO:Copying training dataset
2024-03-02 13:19:05,101:INFO:Defining folds
2024-03-02 13:19:05,101:INFO:Declaring metric variables
2024-03-02 13:19:05,101:INFO:Importing untrained model
2024-03-02 13:19:05,101:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 13:19:05,101:INFO:Starting cross validation
2024-03-02 13:19:05,103:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:05,325:INFO:Calculating mean and std
2024-03-02 13:19:05,326:INFO:Creating metrics dataframe
2024-03-02 13:19:05,327:INFO:Uploading results into container
2024-03-02 13:19:05,327:INFO:Uploading model into container now
2024-03-02 13:19:05,328:INFO:_master_model_container: 7
2024-03-02 13:19:05,328:INFO:_display_container: 2
2024-03-02 13:19:05,328:INFO:OrthogonalMatchingPursuit()
2024-03-02 13:19:05,328:INFO:create_model() successfully completed......................................
2024-03-02 13:19:05,412:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:05,412:INFO:Creating metrics dataframe
2024-03-02 13:19:05,414:INFO:Initializing Bayesian Ridge
2024-03-02 13:19:05,414:INFO:Total runtime is 0.10447697242101035 minutes
2024-03-02 13:19:05,414:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:05,414:INFO:Initializing create_model()
2024-03-02 13:19:05,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:05,414:INFO:Checking exceptions
2024-03-02 13:19:05,414:INFO:Importing libraries
2024-03-02 13:19:05,414:INFO:Copying training dataset
2024-03-02 13:19:05,417:INFO:Defining folds
2024-03-02 13:19:05,417:INFO:Declaring metric variables
2024-03-02 13:19:05,418:INFO:Importing untrained model
2024-03-02 13:19:05,418:INFO:Bayesian Ridge Imported successfully
2024-03-02 13:19:05,418:INFO:Starting cross validation
2024-03-02 13:19:05,419:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:05,659:INFO:Calculating mean and std
2024-03-02 13:19:05,660:INFO:Creating metrics dataframe
2024-03-02 13:19:05,661:INFO:Uploading results into container
2024-03-02 13:19:05,661:INFO:Uploading model into container now
2024-03-02 13:19:05,662:INFO:_master_model_container: 8
2024-03-02 13:19:05,662:INFO:_display_container: 2
2024-03-02 13:19:05,662:INFO:BayesianRidge()
2024-03-02 13:19:05,662:INFO:create_model() successfully completed......................................
2024-03-02 13:19:05,746:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:05,746:INFO:Creating metrics dataframe
2024-03-02 13:19:05,748:INFO:Initializing Passive Aggressive Regressor
2024-03-02 13:19:05,748:INFO:Total runtime is 0.11003729502360028 minutes
2024-03-02 13:19:05,748:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:05,748:INFO:Initializing create_model()
2024-03-02 13:19:05,748:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:05,748:INFO:Checking exceptions
2024-03-02 13:19:05,748:INFO:Importing libraries
2024-03-02 13:19:05,748:INFO:Copying training dataset
2024-03-02 13:19:05,751:INFO:Defining folds
2024-03-02 13:19:05,751:INFO:Declaring metric variables
2024-03-02 13:19:05,752:INFO:Importing untrained model
2024-03-02 13:19:05,752:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 13:19:05,752:INFO:Starting cross validation
2024-03-02 13:19:05,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:05,973:INFO:Calculating mean and std
2024-03-02 13:19:05,974:INFO:Creating metrics dataframe
2024-03-02 13:19:05,975:INFO:Uploading results into container
2024-03-02 13:19:05,975:INFO:Uploading model into container now
2024-03-02 13:19:05,976:INFO:_master_model_container: 9
2024-03-02 13:19:05,976:INFO:_display_container: 2
2024-03-02 13:19:05,976:INFO:PassiveAggressiveRegressor(random_state=2051)
2024-03-02 13:19:05,976:INFO:create_model() successfully completed......................................
2024-03-02 13:19:06,060:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:06,060:INFO:Creating metrics dataframe
2024-03-02 13:19:06,062:INFO:Initializing Huber Regressor
2024-03-02 13:19:06,062:INFO:Total runtime is 0.11527106364568077 minutes
2024-03-02 13:19:06,062:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:06,062:INFO:Initializing create_model()
2024-03-02 13:19:06,062:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:06,063:INFO:Checking exceptions
2024-03-02 13:19:06,063:INFO:Importing libraries
2024-03-02 13:19:06,063:INFO:Copying training dataset
2024-03-02 13:19:06,066:INFO:Defining folds
2024-03-02 13:19:06,066:INFO:Declaring metric variables
2024-03-02 13:19:06,066:INFO:Importing untrained model
2024-03-02 13:19:06,066:INFO:Huber Regressor Imported successfully
2024-03-02 13:19:06,066:INFO:Starting cross validation
2024-03-02 13:19:06,067:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:06,307:INFO:Calculating mean and std
2024-03-02 13:19:06,308:INFO:Creating metrics dataframe
2024-03-02 13:19:06,309:INFO:Uploading results into container
2024-03-02 13:19:06,309:INFO:Uploading model into container now
2024-03-02 13:19:06,310:INFO:_master_model_container: 10
2024-03-02 13:19:06,310:INFO:_display_container: 2
2024-03-02 13:19:06,310:INFO:HuberRegressor()
2024-03-02 13:19:06,310:INFO:create_model() successfully completed......................................
2024-03-02 13:19:06,394:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:06,394:INFO:Creating metrics dataframe
2024-03-02 13:19:06,396:INFO:Initializing K Neighbors Regressor
2024-03-02 13:19:06,397:INFO:Total runtime is 0.12085304657618207 minutes
2024-03-02 13:19:06,397:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:06,397:INFO:Initializing create_model()
2024-03-02 13:19:06,397:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:06,397:INFO:Checking exceptions
2024-03-02 13:19:06,397:INFO:Importing libraries
2024-03-02 13:19:06,397:INFO:Copying training dataset
2024-03-02 13:19:06,401:INFO:Defining folds
2024-03-02 13:19:06,401:INFO:Declaring metric variables
2024-03-02 13:19:06,402:INFO:Importing untrained model
2024-03-02 13:19:06,402:INFO:K Neighbors Regressor Imported successfully
2024-03-02 13:19:06,402:INFO:Starting cross validation
2024-03-02 13:19:06,403:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:06,735:INFO:Calculating mean and std
2024-03-02 13:19:06,735:INFO:Creating metrics dataframe
2024-03-02 13:19:06,737:INFO:Uploading results into container
2024-03-02 13:19:06,738:INFO:Uploading model into container now
2024-03-02 13:19:06,738:INFO:_master_model_container: 11
2024-03-02 13:19:06,738:INFO:_display_container: 2
2024-03-02 13:19:06,738:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 13:19:06,738:INFO:create_model() successfully completed......................................
2024-03-02 13:19:06,824:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:06,824:INFO:Creating metrics dataframe
2024-03-02 13:19:06,826:INFO:Initializing Decision Tree Regressor
2024-03-02 13:19:06,826:INFO:Total runtime is 0.12801152467727664 minutes
2024-03-02 13:19:06,826:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:06,826:INFO:Initializing create_model()
2024-03-02 13:19:06,826:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:06,826:INFO:Checking exceptions
2024-03-02 13:19:06,826:INFO:Importing libraries
2024-03-02 13:19:06,826:INFO:Copying training dataset
2024-03-02 13:19:06,830:INFO:Defining folds
2024-03-02 13:19:06,830:INFO:Declaring metric variables
2024-03-02 13:19:06,830:INFO:Importing untrained model
2024-03-02 13:19:06,830:INFO:Decision Tree Regressor Imported successfully
2024-03-02 13:19:06,830:INFO:Starting cross validation
2024-03-02 13:19:06,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:07,067:INFO:Calculating mean and std
2024-03-02 13:19:07,068:INFO:Creating metrics dataframe
2024-03-02 13:19:07,070:INFO:Uploading results into container
2024-03-02 13:19:07,070:INFO:Uploading model into container now
2024-03-02 13:19:07,070:INFO:_master_model_container: 12
2024-03-02 13:19:07,070:INFO:_display_container: 2
2024-03-02 13:19:07,071:INFO:DecisionTreeRegressor(random_state=2051)
2024-03-02 13:19:07,071:INFO:create_model() successfully completed......................................
2024-03-02 13:19:07,154:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:07,154:INFO:Creating metrics dataframe
2024-03-02 13:19:07,156:INFO:Initializing Random Forest Regressor
2024-03-02 13:19:07,156:INFO:Total runtime is 0.13350394169489546 minutes
2024-03-02 13:19:07,156:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:07,156:INFO:Initializing create_model()
2024-03-02 13:19:07,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:07,156:INFO:Checking exceptions
2024-03-02 13:19:07,156:INFO:Importing libraries
2024-03-02 13:19:07,156:INFO:Copying training dataset
2024-03-02 13:19:07,159:INFO:Defining folds
2024-03-02 13:19:07,159:INFO:Declaring metric variables
2024-03-02 13:19:07,159:INFO:Importing untrained model
2024-03-02 13:19:07,160:INFO:Random Forest Regressor Imported successfully
2024-03-02 13:19:07,160:INFO:Starting cross validation
2024-03-02 13:19:07,161:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:08,583:INFO:Calculating mean and std
2024-03-02 13:19:08,584:INFO:Creating metrics dataframe
2024-03-02 13:19:08,585:INFO:Uploading results into container
2024-03-02 13:19:08,586:INFO:Uploading model into container now
2024-03-02 13:19:08,586:INFO:_master_model_container: 13
2024-03-02 13:19:08,586:INFO:_display_container: 2
2024-03-02 13:19:08,586:INFO:RandomForestRegressor(n_jobs=-1, random_state=2051)
2024-03-02 13:19:08,586:INFO:create_model() successfully completed......................................
2024-03-02 13:19:08,671:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:08,671:INFO:Creating metrics dataframe
2024-03-02 13:19:08,673:INFO:Initializing Extra Trees Regressor
2024-03-02 13:19:08,673:INFO:Total runtime is 0.15879141489664717 minutes
2024-03-02 13:19:08,673:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:08,673:INFO:Initializing create_model()
2024-03-02 13:19:08,674:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:08,674:INFO:Checking exceptions
2024-03-02 13:19:08,674:INFO:Importing libraries
2024-03-02 13:19:08,674:INFO:Copying training dataset
2024-03-02 13:19:08,677:INFO:Defining folds
2024-03-02 13:19:08,677:INFO:Declaring metric variables
2024-03-02 13:19:08,677:INFO:Importing untrained model
2024-03-02 13:19:08,677:INFO:Extra Trees Regressor Imported successfully
2024-03-02 13:19:08,677:INFO:Starting cross validation
2024-03-02 13:19:08,678:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:09,570:INFO:Calculating mean and std
2024-03-02 13:19:09,571:INFO:Creating metrics dataframe
2024-03-02 13:19:09,573:INFO:Uploading results into container
2024-03-02 13:19:09,574:INFO:Uploading model into container now
2024-03-02 13:19:09,574:INFO:_master_model_container: 14
2024-03-02 13:19:09,574:INFO:_display_container: 2
2024-03-02 13:19:09,574:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2051)
2024-03-02 13:19:09,574:INFO:create_model() successfully completed......................................
2024-03-02 13:19:09,667:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:09,667:INFO:Creating metrics dataframe
2024-03-02 13:19:09,670:INFO:Initializing AdaBoost Regressor
2024-03-02 13:19:09,670:INFO:Total runtime is 0.17540311018625898 minutes
2024-03-02 13:19:09,670:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:09,670:INFO:Initializing create_model()
2024-03-02 13:19:09,670:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:09,670:INFO:Checking exceptions
2024-03-02 13:19:09,670:INFO:Importing libraries
2024-03-02 13:19:09,670:INFO:Copying training dataset
2024-03-02 13:19:09,675:INFO:Defining folds
2024-03-02 13:19:09,675:INFO:Declaring metric variables
2024-03-02 13:19:09,675:INFO:Importing untrained model
2024-03-02 13:19:09,675:INFO:AdaBoost Regressor Imported successfully
2024-03-02 13:19:09,676:INFO:Starting cross validation
2024-03-02 13:19:09,677:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:10,121:INFO:Calculating mean and std
2024-03-02 13:19:10,122:INFO:Creating metrics dataframe
2024-03-02 13:19:10,123:INFO:Uploading results into container
2024-03-02 13:19:10,124:INFO:Uploading model into container now
2024-03-02 13:19:10,124:INFO:_master_model_container: 15
2024-03-02 13:19:10,124:INFO:_display_container: 2
2024-03-02 13:19:10,124:INFO:AdaBoostRegressor(random_state=2051)
2024-03-02 13:19:10,124:INFO:create_model() successfully completed......................................
2024-03-02 13:19:10,207:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:10,208:INFO:Creating metrics dataframe
2024-03-02 13:19:10,210:INFO:Initializing Gradient Boosting Regressor
2024-03-02 13:19:10,210:INFO:Total runtime is 0.18440861701965336 minutes
2024-03-02 13:19:10,210:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:10,210:INFO:Initializing create_model()
2024-03-02 13:19:10,210:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:10,210:INFO:Checking exceptions
2024-03-02 13:19:10,210:INFO:Importing libraries
2024-03-02 13:19:10,210:INFO:Copying training dataset
2024-03-02 13:19:10,214:INFO:Defining folds
2024-03-02 13:19:10,214:INFO:Declaring metric variables
2024-03-02 13:19:10,214:INFO:Importing untrained model
2024-03-02 13:19:10,214:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 13:19:10,214:INFO:Starting cross validation
2024-03-02 13:19:10,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:10,964:INFO:Calculating mean and std
2024-03-02 13:19:10,964:INFO:Creating metrics dataframe
2024-03-02 13:19:10,966:INFO:Uploading results into container
2024-03-02 13:19:10,966:INFO:Uploading model into container now
2024-03-02 13:19:10,967:INFO:_master_model_container: 16
2024-03-02 13:19:10,967:INFO:_display_container: 2
2024-03-02 13:19:10,967:INFO:GradientBoostingRegressor(random_state=2051)
2024-03-02 13:19:10,967:INFO:create_model() successfully completed......................................
2024-03-02 13:19:11,051:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:11,051:INFO:Creating metrics dataframe
2024-03-02 13:19:11,053:INFO:Initializing Extreme Gradient Boosting
2024-03-02 13:19:11,053:INFO:Total runtime is 0.19846121470133468 minutes
2024-03-02 13:19:11,053:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:11,054:INFO:Initializing create_model()
2024-03-02 13:19:11,054:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:11,054:INFO:Checking exceptions
2024-03-02 13:19:11,054:INFO:Importing libraries
2024-03-02 13:19:11,054:INFO:Copying training dataset
2024-03-02 13:19:11,057:INFO:Defining folds
2024-03-02 13:19:11,057:INFO:Declaring metric variables
2024-03-02 13:19:11,057:INFO:Importing untrained model
2024-03-02 13:19:11,058:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 13:19:11,058:INFO:Starting cross validation
2024-03-02 13:19:11,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:11,538:INFO:Calculating mean and std
2024-03-02 13:19:11,539:INFO:Creating metrics dataframe
2024-03-02 13:19:11,540:INFO:Uploading results into container
2024-03-02 13:19:11,540:INFO:Uploading model into container now
2024-03-02 13:19:11,541:INFO:_master_model_container: 17
2024-03-02 13:19:11,541:INFO:_display_container: 2
2024-03-02 13:19:11,541:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=2051, ...)
2024-03-02 13:19:11,541:INFO:create_model() successfully completed......................................
2024-03-02 13:19:11,625:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:11,625:INFO:Creating metrics dataframe
2024-03-02 13:19:11,627:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 13:19:11,627:INFO:Total runtime is 0.2080180724461874 minutes
2024-03-02 13:19:11,628:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:11,628:INFO:Initializing create_model()
2024-03-02 13:19:11,628:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:11,628:INFO:Checking exceptions
2024-03-02 13:19:11,628:INFO:Importing libraries
2024-03-02 13:19:11,628:INFO:Copying training dataset
2024-03-02 13:19:11,631:INFO:Defining folds
2024-03-02 13:19:11,631:INFO:Declaring metric variables
2024-03-02 13:19:11,631:INFO:Importing untrained model
2024-03-02 13:19:11,631:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 13:19:11,632:INFO:Starting cross validation
2024-03-02 13:19:11,633:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:12,642:INFO:Calculating mean and std
2024-03-02 13:19:12,643:INFO:Creating metrics dataframe
2024-03-02 13:19:12,645:INFO:Uploading results into container
2024-03-02 13:19:12,645:INFO:Uploading model into container now
2024-03-02 13:19:12,646:INFO:_master_model_container: 18
2024-03-02 13:19:12,646:INFO:_display_container: 2
2024-03-02 13:19:12,646:INFO:LGBMRegressor(n_jobs=-1, random_state=2051)
2024-03-02 13:19:12,646:INFO:create_model() successfully completed......................................
2024-03-02 13:19:12,750:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:12,750:INFO:Creating metrics dataframe
2024-03-02 13:19:12,752:INFO:Initializing Dummy Regressor
2024-03-02 13:19:12,752:INFO:Total runtime is 0.2267743587493897 minutes
2024-03-02 13:19:12,752:INFO:SubProcess create_model() called ==================================
2024-03-02 13:19:12,753:INFO:Initializing create_model()
2024-03-02 13:19:12,753:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002331B0094C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:12,753:INFO:Checking exceptions
2024-03-02 13:19:12,753:INFO:Importing libraries
2024-03-02 13:19:12,753:INFO:Copying training dataset
2024-03-02 13:19:12,756:INFO:Defining folds
2024-03-02 13:19:12,756:INFO:Declaring metric variables
2024-03-02 13:19:12,756:INFO:Importing untrained model
2024-03-02 13:19:12,757:INFO:Dummy Regressor Imported successfully
2024-03-02 13:19:12,757:INFO:Starting cross validation
2024-03-02 13:19:12,758:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:19:12,994:INFO:Calculating mean and std
2024-03-02 13:19:12,995:INFO:Creating metrics dataframe
2024-03-02 13:19:12,996:INFO:Uploading results into container
2024-03-02 13:19:12,996:INFO:Uploading model into container now
2024-03-02 13:19:12,997:INFO:_master_model_container: 19
2024-03-02 13:19:12,997:INFO:_display_container: 2
2024-03-02 13:19:12,997:INFO:DummyRegressor()
2024-03-02 13:19:12,997:INFO:create_model() successfully completed......................................
2024-03-02 13:19:13,081:INFO:SubProcess create_model() end ==================================
2024-03-02 13:19:13,081:INFO:Creating metrics dataframe
2024-03-02 13:19:13,085:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 13:19:13,086:INFO:Initializing create_model()
2024-03-02 13:19:13,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002331858D220>, estimator=ElasticNet(random_state=2051), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:19:13,086:INFO:Checking exceptions
2024-03-02 13:19:13,087:INFO:Importing libraries
2024-03-02 13:19:13,087:INFO:Copying training dataset
2024-03-02 13:19:13,091:INFO:Defining folds
2024-03-02 13:19:13,091:INFO:Declaring metric variables
2024-03-02 13:19:13,091:INFO:Importing untrained model
2024-03-02 13:19:13,092:INFO:Declaring custom model
2024-03-02 13:19:13,092:INFO:Elastic Net Imported successfully
2024-03-02 13:19:13,093:INFO:Cross validation set to False
2024-03-02 13:19:13,093:INFO:Fitting Model
2024-03-02 13:19:13,182:INFO:ElasticNet(random_state=2051)
2024-03-02 13:19:13,182:INFO:create_model() successfully completed......................................
2024-03-02 13:19:13,278:INFO:_master_model_container: 19
2024-03-02 13:19:13,278:INFO:_display_container: 2
2024-03-02 13:19:13,278:INFO:ElasticNet(random_state=2051)
2024-03-02 13:19:13,278:INFO:compare_models() successfully completed......................................
2024-03-02 13:20:37,860:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:20:37,860:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:20:37,860:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:20:37,860:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:20:43,341:WARNING:D:\HackNITR\automata\polls\views.py:33: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 13:20:43,383:WARNING:D:\HackNITR\automata\polls\views.py:35: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 13:20:43,388:INFO:PyCaret RegressionExperiment
2024-03-02 13:20:43,388:INFO:Logging name: reg-default-name
2024-03-02 13:20:43,388:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 13:20:43,388:INFO:version 3.3.0
2024-03-02 13:20:43,388:INFO:Initializing setup()
2024-03-02 13:20:43,388:INFO:self.USI: 6f19
2024-03-02 13:20:43,389:INFO:self._variable_keys: {'USI', 'transform_target_param', 'gpu_param', 'target_param', 'fold_groups_param', 'html_param', 'gpu_n_jobs_param', 'X_test', 'idx', 'y', '_ml_usecase', '_available_plots', 'y_train', 'y_test', 'logging_param', 'memory', 'fold_shuffle_param', 'exp_id', 'exp_name_log', 'X_train', 'seed', 'log_plots_param', 'fold_generator', 'X', 'pipeline', 'n_jobs_param', 'data'}
2024-03-02 13:20:43,389:INFO:Checking environment
2024-03-02 13:20:43,389:INFO:python_version: 3.9.0
2024-03-02 13:20:43,389:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 13:20:43,389:INFO:machine: AMD64
2024-03-02 13:20:43,389:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 13:20:43,395:INFO:Memory: svmem(total=16476958720, available=4189233152, percent=74.6, used=12287725568, free=4189233152)
2024-03-02 13:20:43,395:INFO:Physical Core: 8
2024-03-02 13:20:43,395:INFO:Logical Core: 16
2024-03-02 13:20:43,395:INFO:Checking libraries
2024-03-02 13:20:43,395:INFO:System:
2024-03-02 13:20:43,395:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 13:20:43,395:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 13:20:43,395:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 13:20:43,395:INFO:PyCaret required dependencies:
2024-03-02 13:20:43,442:INFO:                 pip: 23.3.2
2024-03-02 13:20:43,442:INFO:          setuptools: 49.2.1
2024-03-02 13:20:43,442:INFO:             pycaret: 3.3.0
2024-03-02 13:20:43,442:INFO:             IPython: 8.18.1
2024-03-02 13:20:43,442:INFO:          ipywidgets: 8.1.2
2024-03-02 13:20:43,442:INFO:                tqdm: 4.66.1
2024-03-02 13:20:43,442:INFO:               numpy: 1.25.2
2024-03-02 13:20:43,442:INFO:              pandas: 2.1.1
2024-03-02 13:20:43,442:INFO:              jinja2: 3.1.2
2024-03-02 13:20:43,442:INFO:               scipy: 1.11.4
2024-03-02 13:20:43,442:INFO:              joblib: 1.3.2
2024-03-02 13:20:43,442:INFO:             sklearn: 1.4.1.post1
2024-03-02 13:20:43,443:INFO:                pyod: 1.1.3
2024-03-02 13:20:43,443:INFO:            imblearn: 0.12.0
2024-03-02 13:20:43,443:INFO:   category_encoders: 2.6.3
2024-03-02 13:20:43,443:INFO:            lightgbm: 4.3.0
2024-03-02 13:20:43,443:INFO:               numba: 0.58.1
2024-03-02 13:20:43,443:INFO:            requests: 2.31.0
2024-03-02 13:20:43,443:INFO:          matplotlib: 3.7.5
2024-03-02 13:20:43,443:INFO:          scikitplot: 0.3.7
2024-03-02 13:20:43,443:INFO:         yellowbrick: 1.5
2024-03-02 13:20:43,443:INFO:              plotly: 5.19.0
2024-03-02 13:20:43,443:INFO:    plotly-resampler: Not installed
2024-03-02 13:20:43,443:INFO:             kaleido: 0.2.1
2024-03-02 13:20:43,443:INFO:           schemdraw: 0.15
2024-03-02 13:20:43,443:INFO:         statsmodels: 0.14.1
2024-03-02 13:20:43,443:INFO:              sktime: 0.27.0
2024-03-02 13:20:43,443:INFO:               tbats: 1.1.3
2024-03-02 13:20:43,443:INFO:            pmdarima: 2.0.4
2024-03-02 13:20:43,443:INFO:              psutil: 5.9.8
2024-03-02 13:20:43,443:INFO:          markupsafe: 2.1.3
2024-03-02 13:20:43,443:INFO:             pickle5: Not installed
2024-03-02 13:20:43,443:INFO:         cloudpickle: 3.0.0
2024-03-02 13:20:43,443:INFO:         deprecation: 2.1.0
2024-03-02 13:20:43,443:INFO:              xxhash: 3.4.1
2024-03-02 13:20:43,443:INFO:           wurlitzer: Not installed
2024-03-02 13:20:43,443:INFO:PyCaret optional dependencies:
2024-03-02 13:20:43,464:INFO:                shap: 0.44.1
2024-03-02 13:20:43,464:INFO:           interpret: Not installed
2024-03-02 13:20:43,464:INFO:                umap: Not installed
2024-03-02 13:20:43,464:INFO:     ydata_profiling: 4.6.5
2024-03-02 13:20:43,464:INFO:  explainerdashboard: 0.4.5
2024-03-02 13:20:43,465:INFO:             autoviz: Not installed
2024-03-02 13:20:43,465:INFO:           fairlearn: Not installed
2024-03-02 13:20:43,465:INFO:          deepchecks: Not installed
2024-03-02 13:20:43,465:INFO:             xgboost: 2.0.3
2024-03-02 13:20:43,465:INFO:            catboost: Not installed
2024-03-02 13:20:43,465:INFO:              kmodes: Not installed
2024-03-02 13:20:43,465:INFO:             mlxtend: Not installed
2024-03-02 13:20:43,465:INFO:       statsforecast: Not installed
2024-03-02 13:20:43,465:INFO:        tune_sklearn: Not installed
2024-03-02 13:20:43,465:INFO:                 ray: Not installed
2024-03-02 13:20:43,465:INFO:            hyperopt: Not installed
2024-03-02 13:20:43,465:INFO:              optuna: Not installed
2024-03-02 13:20:43,465:INFO:               skopt: Not installed
2024-03-02 13:20:43,465:INFO:              mlflow: Not installed
2024-03-02 13:20:43,465:INFO:              gradio: Not installed
2024-03-02 13:20:43,465:INFO:             fastapi: Not installed
2024-03-02 13:20:43,465:INFO:             uvicorn: Not installed
2024-03-02 13:20:43,465:INFO:              m2cgen: Not installed
2024-03-02 13:20:43,465:INFO:           evidently: Not installed
2024-03-02 13:20:43,465:INFO:               fugue: Not installed
2024-03-02 13:20:43,465:INFO:           streamlit: 1.27.2
2024-03-02 13:20:43,465:INFO:             prophet: Not installed
2024-03-02 13:20:43,465:INFO:None
2024-03-02 13:20:43,465:INFO:Set up data.
2024-03-02 13:20:43,479:INFO:Set up folding strategy.
2024-03-02 13:20:43,479:INFO:Set up train/test split.
2024-03-02 13:20:43,490:INFO:Set up index.
2024-03-02 13:20:43,490:INFO:Assigning column types.
2024-03-02 13:20:43,493:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 13:20:43,493:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,497:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,501:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,546:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,580:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,580:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:43,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:43,582:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,586:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,589:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,634:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,669:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,670:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:43,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:43,672:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 13:20:43,675:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,678:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,724:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,757:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,757:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:43,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:43,763:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,768:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,812:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,847:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,847:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:43,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:43,850:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 13:20:43,857:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,902:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,936:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,937:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:43,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:43,946:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:20:43,991:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:20:44,026:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:20:44,026:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:44,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:44,028:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 13:20:44,079:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:20:44,119:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:20:44,120:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:44,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:44,177:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:20:44,212:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:20:44,212:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:44,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:44,215:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 13:20:44,268:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:20:44,303:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:44,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:44,358:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:20:44,394:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:44,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:44,395:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 13:20:44,483:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:44,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:44,572:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:44,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:44,577:INFO:Preparing preprocessing pipeline...
2024-03-02 13:20:44,577:INFO:Set up simple imputation.
2024-03-02 13:20:44,580:INFO:Set up encoding of categorical features.
2024-03-02 13:20:44,583:INFO:Set up column name cleaning.
2024-03-02 13:20:44,765:INFO:Finished creating preprocessing pipeline.
2024-03-02 13:20:44,772:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 13:20:44,772:INFO:Creating final display dataframe.
2024-03-02 13:20:45,231:INFO:Setup _display_container:                     Description             Value
0                    Session id              2051
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              6f19
2024-03-02 13:20:45,323:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:45,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:45,412:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:20:45,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:20:45,415:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 13:20:45,415:INFO:setup() successfully completed in 2.03s...............
2024-03-02 13:20:45,415:INFO:Initializing compare_models()
2024-03-02 13:20:45,415:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 13:20:45,415:INFO:Checking exceptions
2024-03-02 13:20:45,418:INFO:Preparing display monitor
2024-03-02 13:20:45,420:INFO:Time budget is 1 minutes
2024-03-02 13:20:45,420:INFO:Initializing Linear Regression
2024-03-02 13:20:45,420:INFO:Total runtime is 0.0 minutes
2024-03-02 13:20:45,420:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:45,420:INFO:Initializing create_model()
2024-03-02 13:20:45,421:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:45,421:INFO:Checking exceptions
2024-03-02 13:20:45,421:INFO:Importing libraries
2024-03-02 13:20:45,421:INFO:Copying training dataset
2024-03-02 13:20:45,425:INFO:Defining folds
2024-03-02 13:20:45,425:INFO:Declaring metric variables
2024-03-02 13:20:45,426:INFO:Importing untrained model
2024-03-02 13:20:45,426:INFO:Linear Regression Imported successfully
2024-03-02 13:20:45,426:INFO:Starting cross validation
2024-03-02 13:20:45,430:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:48,046:INFO:Calculating mean and std
2024-03-02 13:20:48,048:INFO:Creating metrics dataframe
2024-03-02 13:20:48,051:INFO:Uploading results into container
2024-03-02 13:20:48,052:INFO:Uploading model into container now
2024-03-02 13:20:48,052:INFO:_master_model_container: 1
2024-03-02 13:20:48,052:INFO:_display_container: 2
2024-03-02 13:20:48,053:INFO:LinearRegression(n_jobs=-1)
2024-03-02 13:20:48,053:INFO:create_model() successfully completed......................................
2024-03-02 13:20:48,160:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:48,160:INFO:Creating metrics dataframe
2024-03-02 13:20:48,162:INFO:Initializing Lasso Regression
2024-03-02 13:20:48,162:INFO:Total runtime is 0.04570399125417073 minutes
2024-03-02 13:20:48,162:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:48,163:INFO:Initializing create_model()
2024-03-02 13:20:48,163:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:48,163:INFO:Checking exceptions
2024-03-02 13:20:48,163:INFO:Importing libraries
2024-03-02 13:20:48,163:INFO:Copying training dataset
2024-03-02 13:20:48,167:INFO:Defining folds
2024-03-02 13:20:48,167:INFO:Declaring metric variables
2024-03-02 13:20:48,167:INFO:Importing untrained model
2024-03-02 13:20:48,167:INFO:Lasso Regression Imported successfully
2024-03-02 13:20:48,167:INFO:Starting cross validation
2024-03-02 13:20:48,169:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:49,982:INFO:Calculating mean and std
2024-03-02 13:20:49,983:INFO:Creating metrics dataframe
2024-03-02 13:20:49,984:INFO:Uploading results into container
2024-03-02 13:20:49,985:INFO:Uploading model into container now
2024-03-02 13:20:49,985:INFO:_master_model_container: 2
2024-03-02 13:20:49,985:INFO:_display_container: 2
2024-03-02 13:20:49,985:INFO:Lasso(random_state=2051)
2024-03-02 13:20:49,985:INFO:create_model() successfully completed......................................
2024-03-02 13:20:50,070:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:50,070:INFO:Creating metrics dataframe
2024-03-02 13:20:50,072:INFO:Initializing Ridge Regression
2024-03-02 13:20:50,072:INFO:Total runtime is 0.07752660115559895 minutes
2024-03-02 13:20:50,072:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:50,073:INFO:Initializing create_model()
2024-03-02 13:20:50,073:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:50,073:INFO:Checking exceptions
2024-03-02 13:20:50,073:INFO:Importing libraries
2024-03-02 13:20:50,073:INFO:Copying training dataset
2024-03-02 13:20:50,076:INFO:Defining folds
2024-03-02 13:20:50,076:INFO:Declaring metric variables
2024-03-02 13:20:50,076:INFO:Importing untrained model
2024-03-02 13:20:50,076:INFO:Ridge Regression Imported successfully
2024-03-02 13:20:50,076:INFO:Starting cross validation
2024-03-02 13:20:50,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:50,198:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.22341e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:20:50,214:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.86503e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:20:50,231:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.13716e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:20:50,241:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.5565e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:20:50,244:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.43449e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:20:50,247:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53089e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:20:50,249:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.521e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:20:50,256:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.42497e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:20:50,275:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.87621e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:20:50,290:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.53404e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:20:50,315:INFO:Calculating mean and std
2024-03-02 13:20:50,316:INFO:Creating metrics dataframe
2024-03-02 13:20:50,317:INFO:Uploading results into container
2024-03-02 13:20:50,317:INFO:Uploading model into container now
2024-03-02 13:20:50,318:INFO:_master_model_container: 3
2024-03-02 13:20:50,318:INFO:_display_container: 2
2024-03-02 13:20:50,318:INFO:Ridge(random_state=2051)
2024-03-02 13:20:50,318:INFO:create_model() successfully completed......................................
2024-03-02 13:20:50,399:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:50,399:INFO:Creating metrics dataframe
2024-03-02 13:20:50,401:INFO:Initializing Elastic Net
2024-03-02 13:20:50,401:INFO:Total runtime is 0.08301342725753784 minutes
2024-03-02 13:20:50,401:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:50,401:INFO:Initializing create_model()
2024-03-02 13:20:50,401:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:50,401:INFO:Checking exceptions
2024-03-02 13:20:50,402:INFO:Importing libraries
2024-03-02 13:20:50,402:INFO:Copying training dataset
2024-03-02 13:20:50,405:INFO:Defining folds
2024-03-02 13:20:50,405:INFO:Declaring metric variables
2024-03-02 13:20:50,405:INFO:Importing untrained model
2024-03-02 13:20:50,405:INFO:Elastic Net Imported successfully
2024-03-02 13:20:50,405:INFO:Starting cross validation
2024-03-02 13:20:50,406:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:50,629:INFO:Calculating mean and std
2024-03-02 13:20:50,630:INFO:Creating metrics dataframe
2024-03-02 13:20:50,631:INFO:Uploading results into container
2024-03-02 13:20:50,631:INFO:Uploading model into container now
2024-03-02 13:20:50,632:INFO:_master_model_container: 4
2024-03-02 13:20:50,632:INFO:_display_container: 2
2024-03-02 13:20:50,632:INFO:ElasticNet(random_state=2051)
2024-03-02 13:20:50,632:INFO:create_model() successfully completed......................................
2024-03-02 13:20:50,714:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:50,714:INFO:Creating metrics dataframe
2024-03-02 13:20:50,716:INFO:Initializing Least Angle Regression
2024-03-02 13:20:50,716:INFO:Total runtime is 0.0882576584815979 minutes
2024-03-02 13:20:50,716:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:50,716:INFO:Initializing create_model()
2024-03-02 13:20:50,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:50,716:INFO:Checking exceptions
2024-03-02 13:20:50,716:INFO:Importing libraries
2024-03-02 13:20:50,716:INFO:Copying training dataset
2024-03-02 13:20:50,719:INFO:Defining folds
2024-03-02 13:20:50,719:INFO:Declaring metric variables
2024-03-02 13:20:50,719:INFO:Importing untrained model
2024-03-02 13:20:50,720:INFO:Least Angle Regression Imported successfully
2024-03-02 13:20:50,720:INFO:Starting cross validation
2024-03-02 13:20:50,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:50,947:INFO:Calculating mean and std
2024-03-02 13:20:50,947:INFO:Creating metrics dataframe
2024-03-02 13:20:50,949:INFO:Uploading results into container
2024-03-02 13:20:50,949:INFO:Uploading model into container now
2024-03-02 13:20:50,950:INFO:_master_model_container: 5
2024-03-02 13:20:50,950:INFO:_display_container: 2
2024-03-02 13:20:50,950:INFO:Lars(random_state=2051)
2024-03-02 13:20:50,950:INFO:create_model() successfully completed......................................
2024-03-02 13:20:51,033:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:51,033:INFO:Creating metrics dataframe
2024-03-02 13:20:51,035:INFO:Initializing Lasso Least Angle Regression
2024-03-02 13:20:51,035:INFO:Total runtime is 0.09358051220575969 minutes
2024-03-02 13:20:51,035:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:51,036:INFO:Initializing create_model()
2024-03-02 13:20:51,036:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:51,036:INFO:Checking exceptions
2024-03-02 13:20:51,036:INFO:Importing libraries
2024-03-02 13:20:51,036:INFO:Copying training dataset
2024-03-02 13:20:51,040:INFO:Defining folds
2024-03-02 13:20:51,040:INFO:Declaring metric variables
2024-03-02 13:20:51,040:INFO:Importing untrained model
2024-03-02 13:20:51,041:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 13:20:51,041:INFO:Starting cross validation
2024-03-02 13:20:51,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:51,280:INFO:Calculating mean and std
2024-03-02 13:20:51,281:INFO:Creating metrics dataframe
2024-03-02 13:20:51,282:INFO:Uploading results into container
2024-03-02 13:20:51,282:INFO:Uploading model into container now
2024-03-02 13:20:51,283:INFO:_master_model_container: 6
2024-03-02 13:20:51,283:INFO:_display_container: 2
2024-03-02 13:20:51,283:INFO:LassoLars(random_state=2051)
2024-03-02 13:20:51,283:INFO:create_model() successfully completed......................................
2024-03-02 13:20:51,363:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:51,364:INFO:Creating metrics dataframe
2024-03-02 13:20:51,365:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 13:20:51,366:INFO:Total runtime is 0.09908976157506308 minutes
2024-03-02 13:20:51,366:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:51,366:INFO:Initializing create_model()
2024-03-02 13:20:51,366:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:51,366:INFO:Checking exceptions
2024-03-02 13:20:51,366:INFO:Importing libraries
2024-03-02 13:20:51,366:INFO:Copying training dataset
2024-03-02 13:20:51,369:INFO:Defining folds
2024-03-02 13:20:51,369:INFO:Declaring metric variables
2024-03-02 13:20:51,369:INFO:Importing untrained model
2024-03-02 13:20:51,369:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 13:20:51,369:INFO:Starting cross validation
2024-03-02 13:20:51,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:51,608:INFO:Calculating mean and std
2024-03-02 13:20:51,608:INFO:Creating metrics dataframe
2024-03-02 13:20:51,610:INFO:Uploading results into container
2024-03-02 13:20:51,610:INFO:Uploading model into container now
2024-03-02 13:20:51,610:INFO:_master_model_container: 7
2024-03-02 13:20:51,611:INFO:_display_container: 2
2024-03-02 13:20:51,611:INFO:OrthogonalMatchingPursuit()
2024-03-02 13:20:51,611:INFO:create_model() successfully completed......................................
2024-03-02 13:20:51,693:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:51,693:INFO:Creating metrics dataframe
2024-03-02 13:20:51,695:INFO:Initializing Bayesian Ridge
2024-03-02 13:20:51,695:INFO:Total runtime is 0.10457911094029745 minutes
2024-03-02 13:20:51,695:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:51,695:INFO:Initializing create_model()
2024-03-02 13:20:51,695:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:51,695:INFO:Checking exceptions
2024-03-02 13:20:51,695:INFO:Importing libraries
2024-03-02 13:20:51,695:INFO:Copying training dataset
2024-03-02 13:20:51,698:INFO:Defining folds
2024-03-02 13:20:51,698:INFO:Declaring metric variables
2024-03-02 13:20:51,698:INFO:Importing untrained model
2024-03-02 13:20:51,699:INFO:Bayesian Ridge Imported successfully
2024-03-02 13:20:51,699:INFO:Starting cross validation
2024-03-02 13:20:51,700:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:51,924:INFO:Calculating mean and std
2024-03-02 13:20:51,925:INFO:Creating metrics dataframe
2024-03-02 13:20:51,926:INFO:Uploading results into container
2024-03-02 13:20:51,927:INFO:Uploading model into container now
2024-03-02 13:20:51,927:INFO:_master_model_container: 8
2024-03-02 13:20:51,927:INFO:_display_container: 2
2024-03-02 13:20:51,927:INFO:BayesianRidge()
2024-03-02 13:20:51,927:INFO:create_model() successfully completed......................................
2024-03-02 13:20:52,007:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:52,007:INFO:Creating metrics dataframe
2024-03-02 13:20:52,009:INFO:Initializing Passive Aggressive Regressor
2024-03-02 13:20:52,009:INFO:Total runtime is 0.10982055266698203 minutes
2024-03-02 13:20:52,010:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:52,010:INFO:Initializing create_model()
2024-03-02 13:20:52,010:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:52,010:INFO:Checking exceptions
2024-03-02 13:20:52,010:INFO:Importing libraries
2024-03-02 13:20:52,010:INFO:Copying training dataset
2024-03-02 13:20:52,013:INFO:Defining folds
2024-03-02 13:20:52,013:INFO:Declaring metric variables
2024-03-02 13:20:52,013:INFO:Importing untrained model
2024-03-02 13:20:52,013:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 13:20:52,013:INFO:Starting cross validation
2024-03-02 13:20:52,015:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:52,243:INFO:Calculating mean and std
2024-03-02 13:20:52,244:INFO:Creating metrics dataframe
2024-03-02 13:20:52,246:INFO:Uploading results into container
2024-03-02 13:20:52,246:INFO:Uploading model into container now
2024-03-02 13:20:52,246:INFO:_master_model_container: 9
2024-03-02 13:20:52,246:INFO:_display_container: 2
2024-03-02 13:20:52,247:INFO:PassiveAggressiveRegressor(random_state=2051)
2024-03-02 13:20:52,247:INFO:create_model() successfully completed......................................
2024-03-02 13:20:52,328:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:52,328:INFO:Creating metrics dataframe
2024-03-02 13:20:52,330:INFO:Initializing Huber Regressor
2024-03-02 13:20:52,331:INFO:Total runtime is 0.11516456604003908 minutes
2024-03-02 13:20:52,331:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:52,331:INFO:Initializing create_model()
2024-03-02 13:20:52,331:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:52,331:INFO:Checking exceptions
2024-03-02 13:20:52,331:INFO:Importing libraries
2024-03-02 13:20:52,331:INFO:Copying training dataset
2024-03-02 13:20:52,336:INFO:Defining folds
2024-03-02 13:20:52,336:INFO:Declaring metric variables
2024-03-02 13:20:52,336:INFO:Importing untrained model
2024-03-02 13:20:52,336:INFO:Huber Regressor Imported successfully
2024-03-02 13:20:52,336:INFO:Starting cross validation
2024-03-02 13:20:52,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:52,588:INFO:Calculating mean and std
2024-03-02 13:20:52,589:INFO:Creating metrics dataframe
2024-03-02 13:20:52,590:INFO:Uploading results into container
2024-03-02 13:20:52,590:INFO:Uploading model into container now
2024-03-02 13:20:52,591:INFO:_master_model_container: 10
2024-03-02 13:20:52,591:INFO:_display_container: 2
2024-03-02 13:20:52,591:INFO:HuberRegressor()
2024-03-02 13:20:52,591:INFO:create_model() successfully completed......................................
2024-03-02 13:20:52,672:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:52,672:INFO:Creating metrics dataframe
2024-03-02 13:20:52,674:INFO:Initializing K Neighbors Regressor
2024-03-02 13:20:52,674:INFO:Total runtime is 0.12089904149373375 minutes
2024-03-02 13:20:52,675:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:52,675:INFO:Initializing create_model()
2024-03-02 13:20:52,675:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:52,675:INFO:Checking exceptions
2024-03-02 13:20:52,675:INFO:Importing libraries
2024-03-02 13:20:52,675:INFO:Copying training dataset
2024-03-02 13:20:52,678:INFO:Defining folds
2024-03-02 13:20:52,678:INFO:Declaring metric variables
2024-03-02 13:20:52,678:INFO:Importing untrained model
2024-03-02 13:20:52,678:INFO:K Neighbors Regressor Imported successfully
2024-03-02 13:20:52,679:INFO:Starting cross validation
2024-03-02 13:20:52,680:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:53,001:INFO:Calculating mean and std
2024-03-02 13:20:53,001:INFO:Creating metrics dataframe
2024-03-02 13:20:53,003:INFO:Uploading results into container
2024-03-02 13:20:53,003:INFO:Uploading model into container now
2024-03-02 13:20:53,004:INFO:_master_model_container: 11
2024-03-02 13:20:53,004:INFO:_display_container: 2
2024-03-02 13:20:53,004:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 13:20:53,004:INFO:create_model() successfully completed......................................
2024-03-02 13:20:53,085:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:53,085:INFO:Creating metrics dataframe
2024-03-02 13:20:53,087:INFO:Initializing Decision Tree Regressor
2024-03-02 13:20:53,087:INFO:Total runtime is 0.12778277794520063 minutes
2024-03-02 13:20:53,087:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:53,088:INFO:Initializing create_model()
2024-03-02 13:20:53,088:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:53,088:INFO:Checking exceptions
2024-03-02 13:20:53,088:INFO:Importing libraries
2024-03-02 13:20:53,088:INFO:Copying training dataset
2024-03-02 13:20:53,091:INFO:Defining folds
2024-03-02 13:20:53,091:INFO:Declaring metric variables
2024-03-02 13:20:53,091:INFO:Importing untrained model
2024-03-02 13:20:53,091:INFO:Decision Tree Regressor Imported successfully
2024-03-02 13:20:53,091:INFO:Starting cross validation
2024-03-02 13:20:53,093:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:53,337:INFO:Calculating mean and std
2024-03-02 13:20:53,337:INFO:Creating metrics dataframe
2024-03-02 13:20:53,339:INFO:Uploading results into container
2024-03-02 13:20:53,339:INFO:Uploading model into container now
2024-03-02 13:20:53,339:INFO:_master_model_container: 12
2024-03-02 13:20:53,339:INFO:_display_container: 2
2024-03-02 13:20:53,340:INFO:DecisionTreeRegressor(random_state=2051)
2024-03-02 13:20:53,340:INFO:create_model() successfully completed......................................
2024-03-02 13:20:53,420:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:53,420:INFO:Creating metrics dataframe
2024-03-02 13:20:53,422:INFO:Initializing Random Forest Regressor
2024-03-02 13:20:53,422:INFO:Total runtime is 0.13335710763931277 minutes
2024-03-02 13:20:53,422:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:53,423:INFO:Initializing create_model()
2024-03-02 13:20:53,423:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:53,423:INFO:Checking exceptions
2024-03-02 13:20:53,423:INFO:Importing libraries
2024-03-02 13:20:53,423:INFO:Copying training dataset
2024-03-02 13:20:53,426:INFO:Defining folds
2024-03-02 13:20:53,426:INFO:Declaring metric variables
2024-03-02 13:20:53,426:INFO:Importing untrained model
2024-03-02 13:20:53,426:INFO:Random Forest Regressor Imported successfully
2024-03-02 13:20:53,427:INFO:Starting cross validation
2024-03-02 13:20:53,428:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:54,846:INFO:Calculating mean and std
2024-03-02 13:20:54,847:INFO:Creating metrics dataframe
2024-03-02 13:20:54,848:INFO:Uploading results into container
2024-03-02 13:20:54,848:INFO:Uploading model into container now
2024-03-02 13:20:54,849:INFO:_master_model_container: 13
2024-03-02 13:20:54,849:INFO:_display_container: 2
2024-03-02 13:20:54,849:INFO:RandomForestRegressor(n_jobs=-1, random_state=2051)
2024-03-02 13:20:54,849:INFO:create_model() successfully completed......................................
2024-03-02 13:20:54,932:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:54,933:INFO:Creating metrics dataframe
2024-03-02 13:20:54,935:INFO:Initializing Extra Trees Regressor
2024-03-02 13:20:54,935:INFO:Total runtime is 0.15858455896377566 minutes
2024-03-02 13:20:54,935:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:54,935:INFO:Initializing create_model()
2024-03-02 13:20:54,935:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:54,936:INFO:Checking exceptions
2024-03-02 13:20:54,936:INFO:Importing libraries
2024-03-02 13:20:54,936:INFO:Copying training dataset
2024-03-02 13:20:54,941:INFO:Defining folds
2024-03-02 13:20:54,941:INFO:Declaring metric variables
2024-03-02 13:20:54,941:INFO:Importing untrained model
2024-03-02 13:20:54,941:INFO:Extra Trees Regressor Imported successfully
2024-03-02 13:20:54,942:INFO:Starting cross validation
2024-03-02 13:20:54,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:55,772:INFO:Calculating mean and std
2024-03-02 13:20:55,773:INFO:Creating metrics dataframe
2024-03-02 13:20:55,774:INFO:Uploading results into container
2024-03-02 13:20:55,775:INFO:Uploading model into container now
2024-03-02 13:20:55,775:INFO:_master_model_container: 14
2024-03-02 13:20:55,775:INFO:_display_container: 2
2024-03-02 13:20:55,775:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2051)
2024-03-02 13:20:55,775:INFO:create_model() successfully completed......................................
2024-03-02 13:20:55,856:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:55,856:INFO:Creating metrics dataframe
2024-03-02 13:20:55,858:INFO:Initializing AdaBoost Regressor
2024-03-02 13:20:55,858:INFO:Total runtime is 0.17397080262502038 minutes
2024-03-02 13:20:55,858:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:55,858:INFO:Initializing create_model()
2024-03-02 13:20:55,858:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:55,858:INFO:Checking exceptions
2024-03-02 13:20:55,858:INFO:Importing libraries
2024-03-02 13:20:55,858:INFO:Copying training dataset
2024-03-02 13:20:55,861:INFO:Defining folds
2024-03-02 13:20:55,862:INFO:Declaring metric variables
2024-03-02 13:20:55,862:INFO:Importing untrained model
2024-03-02 13:20:55,862:INFO:AdaBoost Regressor Imported successfully
2024-03-02 13:20:55,862:INFO:Starting cross validation
2024-03-02 13:20:55,863:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:56,315:INFO:Calculating mean and std
2024-03-02 13:20:56,315:INFO:Creating metrics dataframe
2024-03-02 13:20:56,317:INFO:Uploading results into container
2024-03-02 13:20:56,317:INFO:Uploading model into container now
2024-03-02 13:20:56,318:INFO:_master_model_container: 15
2024-03-02 13:20:56,318:INFO:_display_container: 2
2024-03-02 13:20:56,318:INFO:AdaBoostRegressor(random_state=2051)
2024-03-02 13:20:56,318:INFO:create_model() successfully completed......................................
2024-03-02 13:20:56,400:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:56,400:INFO:Creating metrics dataframe
2024-03-02 13:20:56,402:INFO:Initializing Gradient Boosting Regressor
2024-03-02 13:20:56,402:INFO:Total runtime is 0.18302764892578127 minutes
2024-03-02 13:20:56,402:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:56,403:INFO:Initializing create_model()
2024-03-02 13:20:56,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:56,403:INFO:Checking exceptions
2024-03-02 13:20:56,403:INFO:Importing libraries
2024-03-02 13:20:56,403:INFO:Copying training dataset
2024-03-02 13:20:56,406:INFO:Defining folds
2024-03-02 13:20:56,406:INFO:Declaring metric variables
2024-03-02 13:20:56,406:INFO:Importing untrained model
2024-03-02 13:20:56,406:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 13:20:56,407:INFO:Starting cross validation
2024-03-02 13:20:56,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:57,155:INFO:Calculating mean and std
2024-03-02 13:20:57,156:INFO:Creating metrics dataframe
2024-03-02 13:20:57,157:INFO:Uploading results into container
2024-03-02 13:20:57,158:INFO:Uploading model into container now
2024-03-02 13:20:57,158:INFO:_master_model_container: 16
2024-03-02 13:20:57,158:INFO:_display_container: 2
2024-03-02 13:20:57,158:INFO:GradientBoostingRegressor(random_state=2051)
2024-03-02 13:20:57,158:INFO:create_model() successfully completed......................................
2024-03-02 13:20:57,239:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:57,239:INFO:Creating metrics dataframe
2024-03-02 13:20:57,241:INFO:Initializing Extreme Gradient Boosting
2024-03-02 13:20:57,242:INFO:Total runtime is 0.19702983697255455 minutes
2024-03-02 13:20:57,242:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:57,242:INFO:Initializing create_model()
2024-03-02 13:20:57,242:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:57,242:INFO:Checking exceptions
2024-03-02 13:20:57,242:INFO:Importing libraries
2024-03-02 13:20:57,242:INFO:Copying training dataset
2024-03-02 13:20:57,246:INFO:Defining folds
2024-03-02 13:20:57,246:INFO:Declaring metric variables
2024-03-02 13:20:57,247:INFO:Importing untrained model
2024-03-02 13:20:57,247:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 13:20:57,247:INFO:Starting cross validation
2024-03-02 13:20:57,249:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:57,723:INFO:Calculating mean and std
2024-03-02 13:20:57,724:INFO:Creating metrics dataframe
2024-03-02 13:20:57,726:INFO:Uploading results into container
2024-03-02 13:20:57,726:INFO:Uploading model into container now
2024-03-02 13:20:57,726:INFO:_master_model_container: 17
2024-03-02 13:20:57,726:INFO:_display_container: 2
2024-03-02 13:20:57,727:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=2051, ...)
2024-03-02 13:20:57,727:INFO:create_model() successfully completed......................................
2024-03-02 13:20:57,809:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:57,809:INFO:Creating metrics dataframe
2024-03-02 13:20:57,811:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 13:20:57,811:INFO:Total runtime is 0.20650637149810794 minutes
2024-03-02 13:20:57,811:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:57,811:INFO:Initializing create_model()
2024-03-02 13:20:57,812:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:57,812:INFO:Checking exceptions
2024-03-02 13:20:57,812:INFO:Importing libraries
2024-03-02 13:20:57,812:INFO:Copying training dataset
2024-03-02 13:20:57,815:INFO:Defining folds
2024-03-02 13:20:57,815:INFO:Declaring metric variables
2024-03-02 13:20:57,815:INFO:Importing untrained model
2024-03-02 13:20:57,815:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 13:20:57,815:INFO:Starting cross validation
2024-03-02 13:20:57,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:58,759:INFO:Calculating mean and std
2024-03-02 13:20:58,760:INFO:Creating metrics dataframe
2024-03-02 13:20:58,762:INFO:Uploading results into container
2024-03-02 13:20:58,762:INFO:Uploading model into container now
2024-03-02 13:20:58,763:INFO:_master_model_container: 18
2024-03-02 13:20:58,763:INFO:_display_container: 2
2024-03-02 13:20:58,763:INFO:LGBMRegressor(n_jobs=-1, random_state=2051)
2024-03-02 13:20:58,763:INFO:create_model() successfully completed......................................
2024-03-02 13:20:58,859:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:58,860:INFO:Creating metrics dataframe
2024-03-02 13:20:58,862:INFO:Initializing Dummy Regressor
2024-03-02 13:20:58,862:INFO:Total runtime is 0.2240330735842387 minutes
2024-03-02 13:20:58,862:INFO:SubProcess create_model() called ==================================
2024-03-02 13:20:58,862:INFO:Initializing create_model()
2024-03-02 13:20:58,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028417E5DD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:58,862:INFO:Checking exceptions
2024-03-02 13:20:58,862:INFO:Importing libraries
2024-03-02 13:20:58,862:INFO:Copying training dataset
2024-03-02 13:20:58,865:INFO:Defining folds
2024-03-02 13:20:58,866:INFO:Declaring metric variables
2024-03-02 13:20:58,866:INFO:Importing untrained model
2024-03-02 13:20:58,866:INFO:Dummy Regressor Imported successfully
2024-03-02 13:20:58,866:INFO:Starting cross validation
2024-03-02 13:20:58,867:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:20:59,109:INFO:Calculating mean and std
2024-03-02 13:20:59,110:INFO:Creating metrics dataframe
2024-03-02 13:20:59,111:INFO:Uploading results into container
2024-03-02 13:20:59,111:INFO:Uploading model into container now
2024-03-02 13:20:59,112:INFO:_master_model_container: 19
2024-03-02 13:20:59,112:INFO:_display_container: 2
2024-03-02 13:20:59,112:INFO:DummyRegressor()
2024-03-02 13:20:59,112:INFO:create_model() successfully completed......................................
2024-03-02 13:20:59,199:INFO:SubProcess create_model() end ==================================
2024-03-02 13:20:59,199:INFO:Creating metrics dataframe
2024-03-02 13:20:59,202:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 13:20:59,203:INFO:Initializing create_model()
2024-03-02 13:20:59,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000284150F89A0>, estimator=ElasticNet(random_state=2051), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:20:59,203:INFO:Checking exceptions
2024-03-02 13:20:59,203:INFO:Importing libraries
2024-03-02 13:20:59,203:INFO:Copying training dataset
2024-03-02 13:20:59,207:INFO:Defining folds
2024-03-02 13:20:59,207:INFO:Declaring metric variables
2024-03-02 13:20:59,207:INFO:Importing untrained model
2024-03-02 13:20:59,207:INFO:Declaring custom model
2024-03-02 13:20:59,207:INFO:Elastic Net Imported successfully
2024-03-02 13:20:59,209:INFO:Cross validation set to False
2024-03-02 13:20:59,209:INFO:Fitting Model
2024-03-02 13:20:59,287:INFO:ElasticNet(random_state=2051)
2024-03-02 13:20:59,287:INFO:create_model() successfully completed......................................
2024-03-02 13:20:59,382:INFO:_master_model_container: 19
2024-03-02 13:20:59,382:INFO:_display_container: 2
2024-03-02 13:20:59,382:INFO:ElasticNet(random_state=2051)
2024-03-02 13:20:59,382:INFO:compare_models() successfully completed......................................
2024-03-02 13:21:25,535:WARNING:D:\HackNITR\automata\polls\views.py:33: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 13:21:25,578:WARNING:D:\HackNITR\automata\polls\views.py:35: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 13:21:25,585:INFO:PyCaret RegressionExperiment
2024-03-02 13:21:25,585:INFO:Logging name: reg-default-name
2024-03-02 13:21:25,585:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 13:21:25,585:INFO:version 3.3.0
2024-03-02 13:21:25,585:INFO:Initializing setup()
2024-03-02 13:21:25,585:INFO:self.USI: ddc7
2024-03-02 13:21:25,585:INFO:self._variable_keys: {'USI', 'transform_target_param', 'gpu_param', 'target_param', 'fold_groups_param', 'html_param', 'gpu_n_jobs_param', 'X_test', 'idx', 'y', '_ml_usecase', '_available_plots', 'y_train', 'y_test', 'logging_param', 'memory', 'fold_shuffle_param', 'exp_id', 'exp_name_log', 'X_train', 'seed', 'log_plots_param', 'fold_generator', 'X', 'pipeline', 'n_jobs_param', 'data'}
2024-03-02 13:21:25,585:INFO:Checking environment
2024-03-02 13:21:25,585:INFO:python_version: 3.9.0
2024-03-02 13:21:25,585:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 13:21:25,585:INFO:machine: AMD64
2024-03-02 13:21:25,586:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 13:21:25,593:INFO:Memory: svmem(total=16476958720, available=1948196864, percent=88.2, used=14528761856, free=1948196864)
2024-03-02 13:21:25,593:INFO:Physical Core: 8
2024-03-02 13:21:25,593:INFO:Logical Core: 16
2024-03-02 13:21:25,593:INFO:Checking libraries
2024-03-02 13:21:25,593:INFO:System:
2024-03-02 13:21:25,593:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 13:21:25,593:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 13:21:25,594:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 13:21:25,594:INFO:PyCaret required dependencies:
2024-03-02 13:21:25,594:INFO:                 pip: 23.3.2
2024-03-02 13:21:25,594:INFO:          setuptools: 49.2.1
2024-03-02 13:21:25,594:INFO:             pycaret: 3.3.0
2024-03-02 13:21:25,594:INFO:             IPython: 8.18.1
2024-03-02 13:21:25,594:INFO:          ipywidgets: 8.1.2
2024-03-02 13:21:25,594:INFO:                tqdm: 4.66.1
2024-03-02 13:21:25,594:INFO:               numpy: 1.25.2
2024-03-02 13:21:25,594:INFO:              pandas: 2.1.1
2024-03-02 13:21:25,594:INFO:              jinja2: 3.1.2
2024-03-02 13:21:25,594:INFO:               scipy: 1.11.4
2024-03-02 13:21:25,595:INFO:              joblib: 1.3.2
2024-03-02 13:21:25,595:INFO:             sklearn: 1.4.1.post1
2024-03-02 13:21:25,595:INFO:                pyod: 1.1.3
2024-03-02 13:21:25,595:INFO:            imblearn: 0.12.0
2024-03-02 13:21:25,595:INFO:   category_encoders: 2.6.3
2024-03-02 13:21:25,595:INFO:            lightgbm: 4.3.0
2024-03-02 13:21:25,595:INFO:               numba: 0.58.1
2024-03-02 13:21:25,595:INFO:            requests: 2.31.0
2024-03-02 13:21:25,595:INFO:          matplotlib: 3.7.5
2024-03-02 13:21:25,595:INFO:          scikitplot: 0.3.7
2024-03-02 13:21:25,595:INFO:         yellowbrick: 1.5
2024-03-02 13:21:25,595:INFO:              plotly: 5.19.0
2024-03-02 13:21:25,595:INFO:    plotly-resampler: Not installed
2024-03-02 13:21:25,595:INFO:             kaleido: 0.2.1
2024-03-02 13:21:25,595:INFO:           schemdraw: 0.15
2024-03-02 13:21:25,595:INFO:         statsmodels: 0.14.1
2024-03-02 13:21:25,596:INFO:              sktime: 0.27.0
2024-03-02 13:21:25,596:INFO:               tbats: 1.1.3
2024-03-02 13:21:25,596:INFO:            pmdarima: 2.0.4
2024-03-02 13:21:25,596:INFO:              psutil: 5.9.8
2024-03-02 13:21:25,596:INFO:          markupsafe: 2.1.3
2024-03-02 13:21:25,596:INFO:             pickle5: Not installed
2024-03-02 13:21:25,596:INFO:         cloudpickle: 3.0.0
2024-03-02 13:21:25,596:INFO:         deprecation: 2.1.0
2024-03-02 13:21:25,596:INFO:              xxhash: 3.4.1
2024-03-02 13:21:25,596:INFO:           wurlitzer: Not installed
2024-03-02 13:21:25,596:INFO:PyCaret optional dependencies:
2024-03-02 13:21:25,596:INFO:                shap: 0.44.1
2024-03-02 13:21:25,596:INFO:           interpret: Not installed
2024-03-02 13:21:25,596:INFO:                umap: Not installed
2024-03-02 13:21:25,596:INFO:     ydata_profiling: 4.6.5
2024-03-02 13:21:25,596:INFO:  explainerdashboard: 0.4.5
2024-03-02 13:21:25,597:INFO:             autoviz: Not installed
2024-03-02 13:21:25,597:INFO:           fairlearn: Not installed
2024-03-02 13:21:25,597:INFO:          deepchecks: Not installed
2024-03-02 13:21:25,597:INFO:             xgboost: 2.0.3
2024-03-02 13:21:25,597:INFO:            catboost: Not installed
2024-03-02 13:21:25,597:INFO:              kmodes: Not installed
2024-03-02 13:21:25,597:INFO:             mlxtend: Not installed
2024-03-02 13:21:25,597:INFO:       statsforecast: Not installed
2024-03-02 13:21:25,597:INFO:        tune_sklearn: Not installed
2024-03-02 13:21:25,597:INFO:                 ray: Not installed
2024-03-02 13:21:25,597:INFO:            hyperopt: Not installed
2024-03-02 13:21:25,597:INFO:              optuna: Not installed
2024-03-02 13:21:25,597:INFO:               skopt: Not installed
2024-03-02 13:21:25,597:INFO:              mlflow: Not installed
2024-03-02 13:21:25,597:INFO:              gradio: Not installed
2024-03-02 13:21:25,597:INFO:             fastapi: Not installed
2024-03-02 13:21:25,597:INFO:             uvicorn: Not installed
2024-03-02 13:21:25,598:INFO:              m2cgen: Not installed
2024-03-02 13:21:25,598:INFO:           evidently: Not installed
2024-03-02 13:21:25,598:INFO:               fugue: Not installed
2024-03-02 13:21:25,598:INFO:           streamlit: 1.27.2
2024-03-02 13:21:25,598:INFO:             prophet: Not installed
2024-03-02 13:21:25,598:INFO:None
2024-03-02 13:21:25,598:INFO:Set up data.
2024-03-02 13:21:25,613:INFO:Set up folding strategy.
2024-03-02 13:21:25,613:INFO:Set up train/test split.
2024-03-02 13:21:25,623:INFO:Set up index.
2024-03-02 13:21:25,623:INFO:Assigning column types.
2024-03-02 13:21:25,626:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 13:21:25,626:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,629:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,633:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,680:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,724:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:25,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:25,727:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,730:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,734:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,780:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,816:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,816:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:25,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:25,819:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 13:21:25,823:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,827:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,873:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,917:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,918:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:25,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:25,924:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,928:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:21:25,975:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,011:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,011:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:26,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:26,014:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 13:21:26,021:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,067:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,103:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:26,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:26,113:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,159:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,195:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:26,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:26,198:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 13:21:26,251:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,287:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,288:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:26,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:26,343:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,379:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,379:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:26,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:26,382:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 13:21:26,436:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,473:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:26,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:26,529:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:21:26,564:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:26,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:26,567:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 13:21:26,655:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:26,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:26,746:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:26,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:26,749:INFO:Preparing preprocessing pipeline...
2024-03-02 13:21:26,750:INFO:Set up simple imputation.
2024-03-02 13:21:26,752:INFO:Set up encoding of categorical features.
2024-03-02 13:21:26,753:INFO:Set up column name cleaning.
2024-03-02 13:21:26,913:INFO:Finished creating preprocessing pipeline.
2024-03-02 13:21:26,919:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 13:21:26,919:INFO:Creating final display dataframe.
2024-03-02 13:21:27,340:INFO:Setup _display_container:                     Description             Value
0                    Session id              6072
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              ddc7
2024-03-02 13:21:27,434:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:27,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:27,528:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:21:27,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:21:27,531:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 13:21:27,531:INFO:setup() successfully completed in 1.95s...............
2024-03-02 13:21:27,532:INFO:Initializing compare_models()
2024-03-02 13:21:27,532:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 13:21:27,532:INFO:Checking exceptions
2024-03-02 13:21:27,534:INFO:Preparing display monitor
2024-03-02 13:21:27,535:INFO:Time budget is 1 minutes
2024-03-02 13:21:27,536:INFO:Initializing Linear Regression
2024-03-02 13:21:27,536:INFO:Total runtime is 1.6677379608154298e-05 minutes
2024-03-02 13:21:27,536:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:27,536:INFO:Initializing create_model()
2024-03-02 13:21:27,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:27,536:INFO:Checking exceptions
2024-03-02 13:21:27,536:INFO:Importing libraries
2024-03-02 13:21:27,536:INFO:Copying training dataset
2024-03-02 13:21:27,541:INFO:Defining folds
2024-03-02 13:21:27,541:INFO:Declaring metric variables
2024-03-02 13:21:27,541:INFO:Importing untrained model
2024-03-02 13:21:27,541:INFO:Linear Regression Imported successfully
2024-03-02 13:21:27,541:INFO:Starting cross validation
2024-03-02 13:21:27,543:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:27,777:INFO:Calculating mean and std
2024-03-02 13:21:27,778:INFO:Creating metrics dataframe
2024-03-02 13:21:27,779:INFO:Uploading results into container
2024-03-02 13:21:27,780:INFO:Uploading model into container now
2024-03-02 13:21:27,780:INFO:_master_model_container: 1
2024-03-02 13:21:27,780:INFO:_display_container: 2
2024-03-02 13:21:27,780:INFO:LinearRegression(n_jobs=-1)
2024-03-02 13:21:27,780:INFO:create_model() successfully completed......................................
2024-03-02 13:21:27,862:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:27,863:INFO:Creating metrics dataframe
2024-03-02 13:21:27,864:INFO:Initializing Lasso Regression
2024-03-02 13:21:27,864:INFO:Total runtime is 0.005489369233449301 minutes
2024-03-02 13:21:27,864:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:27,865:INFO:Initializing create_model()
2024-03-02 13:21:27,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:27,865:INFO:Checking exceptions
2024-03-02 13:21:27,865:INFO:Importing libraries
2024-03-02 13:21:27,865:INFO:Copying training dataset
2024-03-02 13:21:27,868:INFO:Defining folds
2024-03-02 13:21:27,868:INFO:Declaring metric variables
2024-03-02 13:21:27,868:INFO:Importing untrained model
2024-03-02 13:21:27,868:INFO:Lasso Regression Imported successfully
2024-03-02 13:21:27,868:INFO:Starting cross validation
2024-03-02 13:21:27,869:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:28,081:INFO:Calculating mean and std
2024-03-02 13:21:28,082:INFO:Creating metrics dataframe
2024-03-02 13:21:28,083:INFO:Uploading results into container
2024-03-02 13:21:28,083:INFO:Uploading model into container now
2024-03-02 13:21:28,084:INFO:_master_model_container: 2
2024-03-02 13:21:28,084:INFO:_display_container: 2
2024-03-02 13:21:28,084:INFO:Lasso(random_state=6072)
2024-03-02 13:21:28,084:INFO:create_model() successfully completed......................................
2024-03-02 13:21:28,166:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:28,166:INFO:Creating metrics dataframe
2024-03-02 13:21:28,168:INFO:Initializing Ridge Regression
2024-03-02 13:21:28,168:INFO:Total runtime is 0.010556459426879883 minutes
2024-03-02 13:21:28,168:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:28,169:INFO:Initializing create_model()
2024-03-02 13:21:28,169:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:28,169:INFO:Checking exceptions
2024-03-02 13:21:28,169:INFO:Importing libraries
2024-03-02 13:21:28,169:INFO:Copying training dataset
2024-03-02 13:21:28,172:INFO:Defining folds
2024-03-02 13:21:28,172:INFO:Declaring metric variables
2024-03-02 13:21:28,172:INFO:Importing untrained model
2024-03-02 13:21:28,172:INFO:Ridge Regression Imported successfully
2024-03-02 13:21:28,172:INFO:Starting cross validation
2024-03-02 13:21:28,173:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:28,304:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.44954e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:21:28,312:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.49969e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:21:28,316:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.8541e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:21:28,320:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=9.7442e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:21:28,327:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.23183e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:21:28,328:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.33248e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:21:28,337:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.31787e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:21:28,338:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.59185e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:21:28,367:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.58182e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:21:28,371:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.61369e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:21:28,397:INFO:Calculating mean and std
2024-03-02 13:21:28,398:INFO:Creating metrics dataframe
2024-03-02 13:21:28,399:INFO:Uploading results into container
2024-03-02 13:21:28,399:INFO:Uploading model into container now
2024-03-02 13:21:28,400:INFO:_master_model_container: 3
2024-03-02 13:21:28,400:INFO:_display_container: 2
2024-03-02 13:21:28,400:INFO:Ridge(random_state=6072)
2024-03-02 13:21:28,400:INFO:create_model() successfully completed......................................
2024-03-02 13:21:28,484:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:28,484:INFO:Creating metrics dataframe
2024-03-02 13:21:28,486:INFO:Initializing Elastic Net
2024-03-02 13:21:28,486:INFO:Total runtime is 0.01585397720336914 minutes
2024-03-02 13:21:28,486:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:28,487:INFO:Initializing create_model()
2024-03-02 13:21:28,487:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:28,487:INFO:Checking exceptions
2024-03-02 13:21:28,487:INFO:Importing libraries
2024-03-02 13:21:28,487:INFO:Copying training dataset
2024-03-02 13:21:28,490:INFO:Defining folds
2024-03-02 13:21:28,490:INFO:Declaring metric variables
2024-03-02 13:21:28,490:INFO:Importing untrained model
2024-03-02 13:21:28,490:INFO:Elastic Net Imported successfully
2024-03-02 13:21:28,490:INFO:Starting cross validation
2024-03-02 13:21:28,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:28,712:INFO:Calculating mean and std
2024-03-02 13:21:28,713:INFO:Creating metrics dataframe
2024-03-02 13:21:28,714:INFO:Uploading results into container
2024-03-02 13:21:28,714:INFO:Uploading model into container now
2024-03-02 13:21:28,715:INFO:_master_model_container: 4
2024-03-02 13:21:28,715:INFO:_display_container: 2
2024-03-02 13:21:28,715:INFO:ElasticNet(random_state=6072)
2024-03-02 13:21:28,715:INFO:create_model() successfully completed......................................
2024-03-02 13:21:28,798:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:28,798:INFO:Creating metrics dataframe
2024-03-02 13:21:28,800:INFO:Initializing Least Angle Regression
2024-03-02 13:21:28,800:INFO:Total runtime is 0.021089724699656167 minutes
2024-03-02 13:21:28,801:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:28,801:INFO:Initializing create_model()
2024-03-02 13:21:28,801:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:28,801:INFO:Checking exceptions
2024-03-02 13:21:28,801:INFO:Importing libraries
2024-03-02 13:21:28,801:INFO:Copying training dataset
2024-03-02 13:21:28,805:INFO:Defining folds
2024-03-02 13:21:28,805:INFO:Declaring metric variables
2024-03-02 13:21:28,805:INFO:Importing untrained model
2024-03-02 13:21:28,806:INFO:Least Angle Regression Imported successfully
2024-03-02 13:21:28,806:INFO:Starting cross validation
2024-03-02 13:21:28,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:29,031:INFO:Calculating mean and std
2024-03-02 13:21:29,032:INFO:Creating metrics dataframe
2024-03-02 13:21:29,033:INFO:Uploading results into container
2024-03-02 13:21:29,034:INFO:Uploading model into container now
2024-03-02 13:21:29,034:INFO:_master_model_container: 5
2024-03-02 13:21:29,034:INFO:_display_container: 2
2024-03-02 13:21:29,034:INFO:Lars(random_state=6072)
2024-03-02 13:21:29,034:INFO:create_model() successfully completed......................................
2024-03-02 13:21:29,116:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:29,116:INFO:Creating metrics dataframe
2024-03-02 13:21:29,118:INFO:Initializing Lasso Least Angle Regression
2024-03-02 13:21:29,118:INFO:Total runtime is 0.02639093001683553 minutes
2024-03-02 13:21:29,118:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:29,118:INFO:Initializing create_model()
2024-03-02 13:21:29,118:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:29,118:INFO:Checking exceptions
2024-03-02 13:21:29,118:INFO:Importing libraries
2024-03-02 13:21:29,118:INFO:Copying training dataset
2024-03-02 13:21:29,121:INFO:Defining folds
2024-03-02 13:21:29,121:INFO:Declaring metric variables
2024-03-02 13:21:29,122:INFO:Importing untrained model
2024-03-02 13:21:29,122:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 13:21:29,122:INFO:Starting cross validation
2024-03-02 13:21:29,123:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:29,363:INFO:Calculating mean and std
2024-03-02 13:21:29,363:INFO:Creating metrics dataframe
2024-03-02 13:21:29,365:INFO:Uploading results into container
2024-03-02 13:21:29,365:INFO:Uploading model into container now
2024-03-02 13:21:29,365:INFO:_master_model_container: 6
2024-03-02 13:21:29,365:INFO:_display_container: 2
2024-03-02 13:21:29,365:INFO:LassoLars(random_state=6072)
2024-03-02 13:21:29,366:INFO:create_model() successfully completed......................................
2024-03-02 13:21:29,446:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:29,446:INFO:Creating metrics dataframe
2024-03-02 13:21:29,449:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 13:21:29,449:INFO:Total runtime is 0.0319125215212504 minutes
2024-03-02 13:21:29,449:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:29,449:INFO:Initializing create_model()
2024-03-02 13:21:29,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:29,449:INFO:Checking exceptions
2024-03-02 13:21:29,449:INFO:Importing libraries
2024-03-02 13:21:29,449:INFO:Copying training dataset
2024-03-02 13:21:29,452:INFO:Defining folds
2024-03-02 13:21:29,452:INFO:Declaring metric variables
2024-03-02 13:21:29,453:INFO:Importing untrained model
2024-03-02 13:21:29,453:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 13:21:29,453:INFO:Starting cross validation
2024-03-02 13:21:29,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:29,705:INFO:Calculating mean and std
2024-03-02 13:21:29,705:INFO:Creating metrics dataframe
2024-03-02 13:21:29,707:INFO:Uploading results into container
2024-03-02 13:21:29,707:INFO:Uploading model into container now
2024-03-02 13:21:29,708:INFO:_master_model_container: 7
2024-03-02 13:21:29,708:INFO:_display_container: 2
2024-03-02 13:21:29,708:INFO:OrthogonalMatchingPursuit()
2024-03-02 13:21:29,708:INFO:create_model() successfully completed......................................
2024-03-02 13:21:29,789:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:29,789:INFO:Creating metrics dataframe
2024-03-02 13:21:29,791:INFO:Initializing Bayesian Ridge
2024-03-02 13:21:29,791:INFO:Total runtime is 0.03761018911997477 minutes
2024-03-02 13:21:29,791:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:29,791:INFO:Initializing create_model()
2024-03-02 13:21:29,791:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:29,791:INFO:Checking exceptions
2024-03-02 13:21:29,791:INFO:Importing libraries
2024-03-02 13:21:29,792:INFO:Copying training dataset
2024-03-02 13:21:29,794:INFO:Defining folds
2024-03-02 13:21:29,794:INFO:Declaring metric variables
2024-03-02 13:21:29,795:INFO:Importing untrained model
2024-03-02 13:21:29,795:INFO:Bayesian Ridge Imported successfully
2024-03-02 13:21:29,795:INFO:Starting cross validation
2024-03-02 13:21:29,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:30,023:INFO:Calculating mean and std
2024-03-02 13:21:30,024:INFO:Creating metrics dataframe
2024-03-02 13:21:30,025:INFO:Uploading results into container
2024-03-02 13:21:30,026:INFO:Uploading model into container now
2024-03-02 13:21:30,026:INFO:_master_model_container: 8
2024-03-02 13:21:30,026:INFO:_display_container: 2
2024-03-02 13:21:30,026:INFO:BayesianRidge()
2024-03-02 13:21:30,026:INFO:create_model() successfully completed......................................
2024-03-02 13:21:30,107:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:30,107:INFO:Creating metrics dataframe
2024-03-02 13:21:30,109:INFO:Initializing Passive Aggressive Regressor
2024-03-02 13:21:30,110:INFO:Total runtime is 0.04291069110234578 minutes
2024-03-02 13:21:30,110:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:30,110:INFO:Initializing create_model()
2024-03-02 13:21:30,110:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:30,110:INFO:Checking exceptions
2024-03-02 13:21:30,110:INFO:Importing libraries
2024-03-02 13:21:30,110:INFO:Copying training dataset
2024-03-02 13:21:30,114:INFO:Defining folds
2024-03-02 13:21:30,114:INFO:Declaring metric variables
2024-03-02 13:21:30,115:INFO:Importing untrained model
2024-03-02 13:21:30,115:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 13:21:30,115:INFO:Starting cross validation
2024-03-02 13:21:30,116:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:30,355:INFO:Calculating mean and std
2024-03-02 13:21:30,356:INFO:Creating metrics dataframe
2024-03-02 13:21:30,357:INFO:Uploading results into container
2024-03-02 13:21:30,357:INFO:Uploading model into container now
2024-03-02 13:21:30,358:INFO:_master_model_container: 9
2024-03-02 13:21:30,358:INFO:_display_container: 2
2024-03-02 13:21:30,358:INFO:PassiveAggressiveRegressor(random_state=6072)
2024-03-02 13:21:30,358:INFO:create_model() successfully completed......................................
2024-03-02 13:21:30,440:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:30,440:INFO:Creating metrics dataframe
2024-03-02 13:21:30,442:INFO:Initializing Huber Regressor
2024-03-02 13:21:30,442:INFO:Total runtime is 0.04845115741093953 minutes
2024-03-02 13:21:30,442:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:30,442:INFO:Initializing create_model()
2024-03-02 13:21:30,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:30,442:INFO:Checking exceptions
2024-03-02 13:21:30,442:INFO:Importing libraries
2024-03-02 13:21:30,442:INFO:Copying training dataset
2024-03-02 13:21:30,445:INFO:Defining folds
2024-03-02 13:21:30,445:INFO:Declaring metric variables
2024-03-02 13:21:30,445:INFO:Importing untrained model
2024-03-02 13:21:30,445:INFO:Huber Regressor Imported successfully
2024-03-02 13:21:30,446:INFO:Starting cross validation
2024-03-02 13:21:30,447:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:30,674:INFO:Calculating mean and std
2024-03-02 13:21:30,675:INFO:Creating metrics dataframe
2024-03-02 13:21:30,676:INFO:Uploading results into container
2024-03-02 13:21:30,677:INFO:Uploading model into container now
2024-03-02 13:21:30,677:INFO:_master_model_container: 10
2024-03-02 13:21:30,677:INFO:_display_container: 2
2024-03-02 13:21:30,677:INFO:HuberRegressor()
2024-03-02 13:21:30,677:INFO:create_model() successfully completed......................................
2024-03-02 13:21:30,758:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:30,758:INFO:Creating metrics dataframe
2024-03-02 13:21:30,760:INFO:Initializing K Neighbors Regressor
2024-03-02 13:21:30,760:INFO:Total runtime is 0.05375302632649739 minutes
2024-03-02 13:21:30,760:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:30,761:INFO:Initializing create_model()
2024-03-02 13:21:30,761:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:30,761:INFO:Checking exceptions
2024-03-02 13:21:30,761:INFO:Importing libraries
2024-03-02 13:21:30,761:INFO:Copying training dataset
2024-03-02 13:21:30,764:INFO:Defining folds
2024-03-02 13:21:30,764:INFO:Declaring metric variables
2024-03-02 13:21:30,764:INFO:Importing untrained model
2024-03-02 13:21:30,764:INFO:K Neighbors Regressor Imported successfully
2024-03-02 13:21:30,764:INFO:Starting cross validation
2024-03-02 13:21:30,765:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:31,057:INFO:Calculating mean and std
2024-03-02 13:21:31,058:INFO:Creating metrics dataframe
2024-03-02 13:21:31,059:INFO:Uploading results into container
2024-03-02 13:21:31,059:INFO:Uploading model into container now
2024-03-02 13:21:31,060:INFO:_master_model_container: 11
2024-03-02 13:21:31,060:INFO:_display_container: 2
2024-03-02 13:21:31,060:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 13:21:31,060:INFO:create_model() successfully completed......................................
2024-03-02 13:21:31,140:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:31,140:INFO:Creating metrics dataframe
2024-03-02 13:21:31,142:INFO:Initializing Decision Tree Regressor
2024-03-02 13:21:31,142:INFO:Total runtime is 0.060131390889485666 minutes
2024-03-02 13:21:31,142:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:31,142:INFO:Initializing create_model()
2024-03-02 13:21:31,142:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:31,142:INFO:Checking exceptions
2024-03-02 13:21:31,142:INFO:Importing libraries
2024-03-02 13:21:31,142:INFO:Copying training dataset
2024-03-02 13:21:31,145:INFO:Defining folds
2024-03-02 13:21:31,145:INFO:Declaring metric variables
2024-03-02 13:21:31,145:INFO:Importing untrained model
2024-03-02 13:21:31,146:INFO:Decision Tree Regressor Imported successfully
2024-03-02 13:21:31,146:INFO:Starting cross validation
2024-03-02 13:21:31,147:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:31,390:INFO:Calculating mean and std
2024-03-02 13:21:31,391:INFO:Creating metrics dataframe
2024-03-02 13:21:31,392:INFO:Uploading results into container
2024-03-02 13:21:31,392:INFO:Uploading model into container now
2024-03-02 13:21:31,393:INFO:_master_model_container: 12
2024-03-02 13:21:31,393:INFO:_display_container: 2
2024-03-02 13:21:31,393:INFO:DecisionTreeRegressor(random_state=6072)
2024-03-02 13:21:31,393:INFO:create_model() successfully completed......................................
2024-03-02 13:21:31,474:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:31,474:INFO:Creating metrics dataframe
2024-03-02 13:21:31,476:INFO:Initializing Random Forest Regressor
2024-03-02 13:21:31,476:INFO:Total runtime is 0.0656848629315694 minutes
2024-03-02 13:21:31,476:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:31,476:INFO:Initializing create_model()
2024-03-02 13:21:31,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:31,476:INFO:Checking exceptions
2024-03-02 13:21:31,476:INFO:Importing libraries
2024-03-02 13:21:31,476:INFO:Copying training dataset
2024-03-02 13:21:31,479:INFO:Defining folds
2024-03-02 13:21:31,479:INFO:Declaring metric variables
2024-03-02 13:21:31,479:INFO:Importing untrained model
2024-03-02 13:21:31,480:INFO:Random Forest Regressor Imported successfully
2024-03-02 13:21:31,480:INFO:Starting cross validation
2024-03-02 13:21:31,481:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:32,884:INFO:Calculating mean and std
2024-03-02 13:21:32,885:INFO:Creating metrics dataframe
2024-03-02 13:21:32,886:INFO:Uploading results into container
2024-03-02 13:21:32,887:INFO:Uploading model into container now
2024-03-02 13:21:32,887:INFO:_master_model_container: 13
2024-03-02 13:21:32,887:INFO:_display_container: 2
2024-03-02 13:21:32,888:INFO:RandomForestRegressor(n_jobs=-1, random_state=6072)
2024-03-02 13:21:32,888:INFO:create_model() successfully completed......................................
2024-03-02 13:21:32,970:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:32,970:INFO:Creating metrics dataframe
2024-03-02 13:21:32,972:INFO:Initializing Extra Trees Regressor
2024-03-02 13:21:32,973:INFO:Total runtime is 0.09063321749369302 minutes
2024-03-02 13:21:32,973:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:32,973:INFO:Initializing create_model()
2024-03-02 13:21:32,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:32,973:INFO:Checking exceptions
2024-03-02 13:21:32,973:INFO:Importing libraries
2024-03-02 13:21:32,973:INFO:Copying training dataset
2024-03-02 13:21:32,976:INFO:Defining folds
2024-03-02 13:21:32,976:INFO:Declaring metric variables
2024-03-02 13:21:32,976:INFO:Importing untrained model
2024-03-02 13:21:32,977:INFO:Extra Trees Regressor Imported successfully
2024-03-02 13:21:32,977:INFO:Starting cross validation
2024-03-02 13:21:32,978:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:33,799:INFO:Calculating mean and std
2024-03-02 13:21:33,800:INFO:Creating metrics dataframe
2024-03-02 13:21:33,801:INFO:Uploading results into container
2024-03-02 13:21:33,802:INFO:Uploading model into container now
2024-03-02 13:21:33,802:INFO:_master_model_container: 14
2024-03-02 13:21:33,802:INFO:_display_container: 2
2024-03-02 13:21:33,803:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6072)
2024-03-02 13:21:33,803:INFO:create_model() successfully completed......................................
2024-03-02 13:21:33,887:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:33,887:INFO:Creating metrics dataframe
2024-03-02 13:21:33,889:INFO:Initializing AdaBoost Regressor
2024-03-02 13:21:33,889:INFO:Total runtime is 0.10590998331705728 minutes
2024-03-02 13:21:33,889:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:33,890:INFO:Initializing create_model()
2024-03-02 13:21:33,890:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:33,890:INFO:Checking exceptions
2024-03-02 13:21:33,890:INFO:Importing libraries
2024-03-02 13:21:33,890:INFO:Copying training dataset
2024-03-02 13:21:33,894:INFO:Defining folds
2024-03-02 13:21:33,894:INFO:Declaring metric variables
2024-03-02 13:21:33,895:INFO:Importing untrained model
2024-03-02 13:21:33,895:INFO:AdaBoost Regressor Imported successfully
2024-03-02 13:21:33,895:INFO:Starting cross validation
2024-03-02 13:21:33,897:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:34,291:INFO:Calculating mean and std
2024-03-02 13:21:34,292:INFO:Creating metrics dataframe
2024-03-02 13:21:34,293:INFO:Uploading results into container
2024-03-02 13:21:34,294:INFO:Uploading model into container now
2024-03-02 13:21:34,294:INFO:_master_model_container: 15
2024-03-02 13:21:34,294:INFO:_display_container: 2
2024-03-02 13:21:34,294:INFO:AdaBoostRegressor(random_state=6072)
2024-03-02 13:21:34,294:INFO:create_model() successfully completed......................................
2024-03-02 13:21:34,376:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:34,376:INFO:Creating metrics dataframe
2024-03-02 13:21:34,377:INFO:Initializing Gradient Boosting Regressor
2024-03-02 13:21:34,377:INFO:Total runtime is 0.11404401858647664 minutes
2024-03-02 13:21:34,377:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:34,378:INFO:Initializing create_model()
2024-03-02 13:21:34,378:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:34,378:INFO:Checking exceptions
2024-03-02 13:21:34,378:INFO:Importing libraries
2024-03-02 13:21:34,378:INFO:Copying training dataset
2024-03-02 13:21:34,381:INFO:Defining folds
2024-03-02 13:21:34,381:INFO:Declaring metric variables
2024-03-02 13:21:34,381:INFO:Importing untrained model
2024-03-02 13:21:34,381:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 13:21:34,381:INFO:Starting cross validation
2024-03-02 13:21:34,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:35,124:INFO:Calculating mean and std
2024-03-02 13:21:35,125:INFO:Creating metrics dataframe
2024-03-02 13:21:35,127:INFO:Uploading results into container
2024-03-02 13:21:35,127:INFO:Uploading model into container now
2024-03-02 13:21:35,128:INFO:_master_model_container: 16
2024-03-02 13:21:35,128:INFO:_display_container: 2
2024-03-02 13:21:35,128:INFO:GradientBoostingRegressor(random_state=6072)
2024-03-02 13:21:35,128:INFO:create_model() successfully completed......................................
2024-03-02 13:21:35,210:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:35,210:INFO:Creating metrics dataframe
2024-03-02 13:21:35,212:INFO:Initializing Extreme Gradient Boosting
2024-03-02 13:21:35,212:INFO:Total runtime is 0.12795943021774292 minutes
2024-03-02 13:21:35,213:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:35,213:INFO:Initializing create_model()
2024-03-02 13:21:35,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:35,213:INFO:Checking exceptions
2024-03-02 13:21:35,213:INFO:Importing libraries
2024-03-02 13:21:35,213:INFO:Copying training dataset
2024-03-02 13:21:35,217:INFO:Defining folds
2024-03-02 13:21:35,217:INFO:Declaring metric variables
2024-03-02 13:21:35,218:INFO:Importing untrained model
2024-03-02 13:21:35,218:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 13:21:35,218:INFO:Starting cross validation
2024-03-02 13:21:35,220:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:35,648:INFO:Calculating mean and std
2024-03-02 13:21:35,649:INFO:Creating metrics dataframe
2024-03-02 13:21:35,650:INFO:Uploading results into container
2024-03-02 13:21:35,651:INFO:Uploading model into container now
2024-03-02 13:21:35,651:INFO:_master_model_container: 17
2024-03-02 13:21:35,651:INFO:_display_container: 2
2024-03-02 13:21:35,651:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=6072, ...)
2024-03-02 13:21:35,652:INFO:create_model() successfully completed......................................
2024-03-02 13:21:35,732:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:35,732:INFO:Creating metrics dataframe
2024-03-02 13:21:35,734:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 13:21:35,734:INFO:Total runtime is 0.13666056394577025 minutes
2024-03-02 13:21:35,734:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:35,735:INFO:Initializing create_model()
2024-03-02 13:21:35,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:35,735:INFO:Checking exceptions
2024-03-02 13:21:35,735:INFO:Importing libraries
2024-03-02 13:21:35,735:INFO:Copying training dataset
2024-03-02 13:21:35,738:INFO:Defining folds
2024-03-02 13:21:35,738:INFO:Declaring metric variables
2024-03-02 13:21:35,738:INFO:Importing untrained model
2024-03-02 13:21:35,738:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 13:21:35,738:INFO:Starting cross validation
2024-03-02 13:21:35,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:36,708:INFO:Calculating mean and std
2024-03-02 13:21:36,709:INFO:Creating metrics dataframe
2024-03-02 13:21:36,711:INFO:Uploading results into container
2024-03-02 13:21:36,711:INFO:Uploading model into container now
2024-03-02 13:21:36,712:INFO:_master_model_container: 18
2024-03-02 13:21:36,712:INFO:_display_container: 2
2024-03-02 13:21:36,712:INFO:LGBMRegressor(n_jobs=-1, random_state=6072)
2024-03-02 13:21:36,712:INFO:create_model() successfully completed......................................
2024-03-02 13:21:36,811:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:36,811:INFO:Creating metrics dataframe
2024-03-02 13:21:36,814:INFO:Initializing Dummy Regressor
2024-03-02 13:21:36,814:INFO:Total runtime is 0.15465494791666665 minutes
2024-03-02 13:21:36,814:INFO:SubProcess create_model() called ==================================
2024-03-02 13:21:36,814:INFO:Initializing create_model()
2024-03-02 13:21:36,814:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028418013910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:36,814:INFO:Checking exceptions
2024-03-02 13:21:36,814:INFO:Importing libraries
2024-03-02 13:21:36,814:INFO:Copying training dataset
2024-03-02 13:21:36,818:INFO:Defining folds
2024-03-02 13:21:36,818:INFO:Declaring metric variables
2024-03-02 13:21:36,818:INFO:Importing untrained model
2024-03-02 13:21:36,818:INFO:Dummy Regressor Imported successfully
2024-03-02 13:21:36,818:INFO:Starting cross validation
2024-03-02 13:21:36,820:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:21:37,073:INFO:Calculating mean and std
2024-03-02 13:21:37,074:INFO:Creating metrics dataframe
2024-03-02 13:21:37,075:INFO:Uploading results into container
2024-03-02 13:21:37,076:INFO:Uploading model into container now
2024-03-02 13:21:37,076:INFO:_master_model_container: 19
2024-03-02 13:21:37,076:INFO:_display_container: 2
2024-03-02 13:21:37,076:INFO:DummyRegressor()
2024-03-02 13:21:37,077:INFO:create_model() successfully completed......................................
2024-03-02 13:21:37,162:INFO:SubProcess create_model() end ==================================
2024-03-02 13:21:37,162:INFO:Creating metrics dataframe
2024-03-02 13:21:37,165:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 13:21:37,166:INFO:Initializing create_model()
2024-03-02 13:21:37,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028415A8EAC0>, estimator=AdaBoostRegressor(random_state=6072), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:21:37,166:INFO:Checking exceptions
2024-03-02 13:21:37,167:INFO:Importing libraries
2024-03-02 13:21:37,167:INFO:Copying training dataset
2024-03-02 13:21:37,170:INFO:Defining folds
2024-03-02 13:21:37,171:INFO:Declaring metric variables
2024-03-02 13:21:37,171:INFO:Importing untrained model
2024-03-02 13:21:37,171:INFO:Declaring custom model
2024-03-02 13:21:37,171:INFO:AdaBoost Regressor Imported successfully
2024-03-02 13:21:37,173:INFO:Cross validation set to False
2024-03-02 13:21:37,173:INFO:Fitting Model
2024-03-02 13:21:37,340:INFO:AdaBoostRegressor(random_state=6072)
2024-03-02 13:21:37,340:INFO:create_model() successfully completed......................................
2024-03-02 13:21:37,433:INFO:_master_model_container: 19
2024-03-02 13:21:37,434:INFO:_display_container: 2
2024-03-02 13:21:37,434:INFO:AdaBoostRegressor(random_state=6072)
2024-03-02 13:21:37,434:INFO:compare_models() successfully completed......................................
2024-03-02 13:27:53,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:27:53,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:27:53,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:27:53,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:28:40,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:28:40,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:28:40,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:28:40,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:29:31,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:29:31,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:29:31,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:29:31,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:29:41,784:WARNING:D:\HackNITR\automata\polls\views.py:33: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 13:29:41,824:WARNING:D:\HackNITR\automata\polls\views.py:35: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 13:29:41,829:INFO:PyCaret RegressionExperiment
2024-03-02 13:29:41,830:INFO:Logging name: reg-default-name
2024-03-02 13:29:41,830:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 13:29:41,830:INFO:version 3.3.0
2024-03-02 13:29:41,830:INFO:Initializing setup()
2024-03-02 13:29:41,830:INFO:self.USI: 47f8
2024-03-02 13:29:41,830:INFO:self._variable_keys: {'pipeline', 'n_jobs_param', 'gpu_n_jobs_param', 'y_train', 'exp_name_log', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'memory', 'log_plots_param', 'USI', 'transform_target_param', 'X_train', 'fold_groups_param', 'X_test', 'target_param', 'idx', 'data', 'exp_id', 'html_param', 'seed', 'X', 'y_test', '_ml_usecase', 'gpu_param', '_available_plots', 'y'}
2024-03-02 13:29:41,830:INFO:Checking environment
2024-03-02 13:29:41,830:INFO:python_version: 3.9.0
2024-03-02 13:29:41,830:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 13:29:41,830:INFO:machine: AMD64
2024-03-02 13:29:41,830:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 13:29:41,837:INFO:Memory: svmem(total=16476958720, available=4456747008, percent=73.0, used=12020211712, free=4456747008)
2024-03-02 13:29:41,837:INFO:Physical Core: 8
2024-03-02 13:29:41,837:INFO:Logical Core: 16
2024-03-02 13:29:41,837:INFO:Checking libraries
2024-03-02 13:29:41,837:INFO:System:
2024-03-02 13:29:41,837:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 13:29:41,837:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 13:29:41,837:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 13:29:41,837:INFO:PyCaret required dependencies:
2024-03-02 13:29:41,885:INFO:                 pip: 23.3.2
2024-03-02 13:29:41,885:INFO:          setuptools: 49.2.1
2024-03-02 13:29:41,885:INFO:             pycaret: 3.3.0
2024-03-02 13:29:41,885:INFO:             IPython: 8.18.1
2024-03-02 13:29:41,885:INFO:          ipywidgets: 8.1.2
2024-03-02 13:29:41,885:INFO:                tqdm: 4.66.1
2024-03-02 13:29:41,885:INFO:               numpy: 1.25.2
2024-03-02 13:29:41,885:INFO:              pandas: 2.1.1
2024-03-02 13:29:41,885:INFO:              jinja2: 3.1.2
2024-03-02 13:29:41,885:INFO:               scipy: 1.11.4
2024-03-02 13:29:41,885:INFO:              joblib: 1.3.2
2024-03-02 13:29:41,885:INFO:             sklearn: 1.4.1.post1
2024-03-02 13:29:41,885:INFO:                pyod: 1.1.3
2024-03-02 13:29:41,885:INFO:            imblearn: 0.12.0
2024-03-02 13:29:41,885:INFO:   category_encoders: 2.6.3
2024-03-02 13:29:41,885:INFO:            lightgbm: 4.3.0
2024-03-02 13:29:41,885:INFO:               numba: 0.58.1
2024-03-02 13:29:41,885:INFO:            requests: 2.31.0
2024-03-02 13:29:41,886:INFO:          matplotlib: 3.7.5
2024-03-02 13:29:41,886:INFO:          scikitplot: 0.3.7
2024-03-02 13:29:41,886:INFO:         yellowbrick: 1.5
2024-03-02 13:29:41,886:INFO:              plotly: 5.19.0
2024-03-02 13:29:41,886:INFO:    plotly-resampler: Not installed
2024-03-02 13:29:41,886:INFO:             kaleido: 0.2.1
2024-03-02 13:29:41,886:INFO:           schemdraw: 0.15
2024-03-02 13:29:41,886:INFO:         statsmodels: 0.14.1
2024-03-02 13:29:41,886:INFO:              sktime: 0.27.0
2024-03-02 13:29:41,886:INFO:               tbats: 1.1.3
2024-03-02 13:29:41,886:INFO:            pmdarima: 2.0.4
2024-03-02 13:29:41,886:INFO:              psutil: 5.9.8
2024-03-02 13:29:41,886:INFO:          markupsafe: 2.1.3
2024-03-02 13:29:41,886:INFO:             pickle5: Not installed
2024-03-02 13:29:41,886:INFO:         cloudpickle: 3.0.0
2024-03-02 13:29:41,886:INFO:         deprecation: 2.1.0
2024-03-02 13:29:41,886:INFO:              xxhash: 3.4.1
2024-03-02 13:29:41,886:INFO:           wurlitzer: Not installed
2024-03-02 13:29:41,886:INFO:PyCaret optional dependencies:
2024-03-02 13:29:41,907:INFO:                shap: 0.44.1
2024-03-02 13:29:41,907:INFO:           interpret: Not installed
2024-03-02 13:29:41,907:INFO:                umap: Not installed
2024-03-02 13:29:41,907:INFO:     ydata_profiling: 4.6.5
2024-03-02 13:29:41,908:INFO:  explainerdashboard: 0.4.5
2024-03-02 13:29:41,908:INFO:             autoviz: Not installed
2024-03-02 13:29:41,908:INFO:           fairlearn: Not installed
2024-03-02 13:29:41,908:INFO:          deepchecks: Not installed
2024-03-02 13:29:41,908:INFO:             xgboost: 2.0.3
2024-03-02 13:29:41,908:INFO:            catboost: Not installed
2024-03-02 13:29:41,908:INFO:              kmodes: Not installed
2024-03-02 13:29:41,908:INFO:             mlxtend: Not installed
2024-03-02 13:29:41,908:INFO:       statsforecast: Not installed
2024-03-02 13:29:41,908:INFO:        tune_sklearn: Not installed
2024-03-02 13:29:41,908:INFO:                 ray: Not installed
2024-03-02 13:29:41,908:INFO:            hyperopt: Not installed
2024-03-02 13:29:41,908:INFO:              optuna: Not installed
2024-03-02 13:29:41,908:INFO:               skopt: Not installed
2024-03-02 13:29:41,908:INFO:              mlflow: Not installed
2024-03-02 13:29:41,908:INFO:              gradio: Not installed
2024-03-02 13:29:41,908:INFO:             fastapi: Not installed
2024-03-02 13:29:41,908:INFO:             uvicorn: Not installed
2024-03-02 13:29:41,908:INFO:              m2cgen: Not installed
2024-03-02 13:29:41,908:INFO:           evidently: Not installed
2024-03-02 13:29:41,908:INFO:               fugue: Not installed
2024-03-02 13:29:41,908:INFO:           streamlit: 1.27.2
2024-03-02 13:29:41,908:INFO:             prophet: Not installed
2024-03-02 13:29:41,908:INFO:None
2024-03-02 13:29:41,908:INFO:Set up data.
2024-03-02 13:29:41,923:INFO:Set up folding strategy.
2024-03-02 13:29:41,923:INFO:Set up train/test split.
2024-03-02 13:29:41,938:INFO:Set up index.
2024-03-02 13:29:41,938:INFO:Assigning column types.
2024-03-02 13:29:41,942:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 13:29:41,942:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:29:41,945:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:29:41,949:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:41,997:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,031:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,032:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:42,034:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,038:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,042:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,087:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,123:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,123:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:42,126:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 13:29:42,130:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,133:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,179:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,214:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,214:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:42,220:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,224:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,270:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,305:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,306:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:42,308:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 13:29:42,316:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,361:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,396:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,397:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:42,406:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,453:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,488:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,488:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:42,491:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 13:29:42,543:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,578:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,579:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:42,635:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,669:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,670:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:42,672:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 13:29:42,725:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,761:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:42,817:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:42,852:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:42,854:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 13:29:42,946:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:42,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:43,041:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:43,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:43,044:INFO:Preparing preprocessing pipeline...
2024-03-02 13:29:43,044:INFO:Set up simple imputation.
2024-03-02 13:29:43,048:INFO:Set up encoding of categorical features.
2024-03-02 13:29:43,048:INFO:Set up column name cleaning.
2024-03-02 13:29:58,719:WARNING:D:\HackNITR\automata\polls\views.py:33: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 13:29:58,758:WARNING:D:\HackNITR\automata\polls\views.py:35: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 13:29:58,762:INFO:PyCaret RegressionExperiment
2024-03-02 13:29:58,763:INFO:Logging name: reg-default-name
2024-03-02 13:29:58,763:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 13:29:58,763:INFO:version 3.3.0
2024-03-02 13:29:58,763:INFO:Initializing setup()
2024-03-02 13:29:58,763:INFO:self.USI: 4c84
2024-03-02 13:29:58,763:INFO:self._variable_keys: {'pipeline', 'n_jobs_param', 'gpu_n_jobs_param', 'y_train', 'exp_name_log', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'memory', 'log_plots_param', 'USI', 'transform_target_param', 'X_train', 'fold_groups_param', 'X_test', 'target_param', 'idx', 'data', 'exp_id', 'html_param', 'seed', 'X', 'y_test', '_ml_usecase', 'gpu_param', '_available_plots', 'y'}
2024-03-02 13:29:58,763:INFO:Checking environment
2024-03-02 13:29:58,763:INFO:python_version: 3.9.0
2024-03-02 13:29:58,763:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 13:29:58,763:INFO:machine: AMD64
2024-03-02 13:29:58,763:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 13:29:58,770:INFO:Memory: svmem(total=16476958720, available=4403687424, percent=73.3, used=12073271296, free=4403687424)
2024-03-02 13:29:58,770:INFO:Physical Core: 8
2024-03-02 13:29:58,770:INFO:Logical Core: 16
2024-03-02 13:29:58,770:INFO:Checking libraries
2024-03-02 13:29:58,770:INFO:System:
2024-03-02 13:29:58,770:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 13:29:58,770:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 13:29:58,770:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 13:29:58,770:INFO:PyCaret required dependencies:
2024-03-02 13:29:58,770:INFO:                 pip: 23.3.2
2024-03-02 13:29:58,771:INFO:          setuptools: 49.2.1
2024-03-02 13:29:58,771:INFO:             pycaret: 3.3.0
2024-03-02 13:29:58,771:INFO:             IPython: 8.18.1
2024-03-02 13:29:58,771:INFO:          ipywidgets: 8.1.2
2024-03-02 13:29:58,771:INFO:                tqdm: 4.66.1
2024-03-02 13:29:58,771:INFO:               numpy: 1.25.2
2024-03-02 13:29:58,771:INFO:              pandas: 2.1.1
2024-03-02 13:29:58,771:INFO:              jinja2: 3.1.2
2024-03-02 13:29:58,771:INFO:               scipy: 1.11.4
2024-03-02 13:29:58,771:INFO:              joblib: 1.3.2
2024-03-02 13:29:58,771:INFO:             sklearn: 1.4.1.post1
2024-03-02 13:29:58,771:INFO:                pyod: 1.1.3
2024-03-02 13:29:58,771:INFO:            imblearn: 0.12.0
2024-03-02 13:29:58,771:INFO:   category_encoders: 2.6.3
2024-03-02 13:29:58,771:INFO:            lightgbm: 4.3.0
2024-03-02 13:29:58,771:INFO:               numba: 0.58.1
2024-03-02 13:29:58,771:INFO:            requests: 2.31.0
2024-03-02 13:29:58,771:INFO:          matplotlib: 3.7.5
2024-03-02 13:29:58,771:INFO:          scikitplot: 0.3.7
2024-03-02 13:29:58,771:INFO:         yellowbrick: 1.5
2024-03-02 13:29:58,771:INFO:              plotly: 5.19.0
2024-03-02 13:29:58,771:INFO:    plotly-resampler: Not installed
2024-03-02 13:29:58,771:INFO:             kaleido: 0.2.1
2024-03-02 13:29:58,771:INFO:           schemdraw: 0.15
2024-03-02 13:29:58,771:INFO:         statsmodels: 0.14.1
2024-03-02 13:29:58,771:INFO:              sktime: 0.27.0
2024-03-02 13:29:58,771:INFO:               tbats: 1.1.3
2024-03-02 13:29:58,771:INFO:            pmdarima: 2.0.4
2024-03-02 13:29:58,771:INFO:              psutil: 5.9.8
2024-03-02 13:29:58,771:INFO:          markupsafe: 2.1.3
2024-03-02 13:29:58,771:INFO:             pickle5: Not installed
2024-03-02 13:29:58,771:INFO:         cloudpickle: 3.0.0
2024-03-02 13:29:58,771:INFO:         deprecation: 2.1.0
2024-03-02 13:29:58,771:INFO:              xxhash: 3.4.1
2024-03-02 13:29:58,771:INFO:           wurlitzer: Not installed
2024-03-02 13:29:58,771:INFO:PyCaret optional dependencies:
2024-03-02 13:29:58,771:INFO:                shap: 0.44.1
2024-03-02 13:29:58,771:INFO:           interpret: Not installed
2024-03-02 13:29:58,771:INFO:                umap: Not installed
2024-03-02 13:29:58,772:INFO:     ydata_profiling: 4.6.5
2024-03-02 13:29:58,772:INFO:  explainerdashboard: 0.4.5
2024-03-02 13:29:58,772:INFO:             autoviz: Not installed
2024-03-02 13:29:58,772:INFO:           fairlearn: Not installed
2024-03-02 13:29:58,772:INFO:          deepchecks: Not installed
2024-03-02 13:29:58,772:INFO:             xgboost: 2.0.3
2024-03-02 13:29:58,772:INFO:            catboost: Not installed
2024-03-02 13:29:58,772:INFO:              kmodes: Not installed
2024-03-02 13:29:58,772:INFO:             mlxtend: Not installed
2024-03-02 13:29:58,772:INFO:       statsforecast: Not installed
2024-03-02 13:29:58,772:INFO:        tune_sklearn: Not installed
2024-03-02 13:29:58,772:INFO:                 ray: Not installed
2024-03-02 13:29:58,772:INFO:            hyperopt: Not installed
2024-03-02 13:29:58,772:INFO:              optuna: Not installed
2024-03-02 13:29:58,772:INFO:               skopt: Not installed
2024-03-02 13:29:58,772:INFO:              mlflow: Not installed
2024-03-02 13:29:58,772:INFO:              gradio: Not installed
2024-03-02 13:29:58,772:INFO:             fastapi: Not installed
2024-03-02 13:29:58,772:INFO:             uvicorn: Not installed
2024-03-02 13:29:58,772:INFO:              m2cgen: Not installed
2024-03-02 13:29:58,772:INFO:           evidently: Not installed
2024-03-02 13:29:58,772:INFO:               fugue: Not installed
2024-03-02 13:29:58,772:INFO:           streamlit: 1.27.2
2024-03-02 13:29:58,772:INFO:             prophet: Not installed
2024-03-02 13:29:58,772:INFO:None
2024-03-02 13:29:58,772:INFO:Set up data.
2024-03-02 13:29:58,785:INFO:Set up folding strategy.
2024-03-02 13:29:58,785:INFO:Set up train/test split.
2024-03-02 13:29:58,792:INFO:Set up index.
2024-03-02 13:29:58,792:INFO:Assigning column types.
2024-03-02 13:29:58,795:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 13:29:58,795:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,799:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,802:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,847:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,882:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,883:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:58,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:58,885:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,889:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,893:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,938:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,973:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,974:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:58,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:58,977:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 13:29:58,980:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:29:58,984:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,030:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,065:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,065:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:59,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:59,071:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,075:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,119:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,155:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:59,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:59,157:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 13:29:59,164:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,209:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,244:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,244:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:59,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:59,254:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,299:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,334:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,334:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:59,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:59,336:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 13:29:59,389:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,425:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,426:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:59,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:59,481:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,516:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,517:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:59,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:59,519:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 13:29:59,572:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,607:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:59,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:59,662:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:29:59,697:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:59,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:59,699:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 13:29:59,787:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:59,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:59,877:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:29:59,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:29:59,880:INFO:Preparing preprocessing pipeline...
2024-03-02 13:29:59,880:INFO:Set up simple imputation.
2024-03-02 13:29:59,883:INFO:Set up encoding of categorical features.
2024-03-02 13:29:59,884:INFO:Set up column name cleaning.
2024-03-02 13:30:00,059:INFO:Finished creating preprocessing pipeline.
2024-03-02 13:30:00,066:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 13:30:00,066:INFO:Creating final display dataframe.
2024-03-02 13:30:00,577:INFO:Setup _display_container:                     Description             Value
0                    Session id              5729
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              4c84
2024-03-02 13:30:00,672:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:30:00,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:30:00,762:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:30:00,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:30:00,765:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 13:30:00,765:INFO:setup() successfully completed in 2.0s...............
2024-03-02 13:30:00,766:INFO:Initializing compare_models()
2024-03-02 13:30:00,766:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 13:30:00,766:INFO:Checking exceptions
2024-03-02 13:30:00,768:INFO:Preparing display monitor
2024-03-02 13:30:00,770:INFO:Time budget is 1 minutes
2024-03-02 13:30:00,770:INFO:Initializing Linear Regression
2024-03-02 13:30:00,770:INFO:Total runtime is 0.0 minutes
2024-03-02 13:30:00,771:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:00,771:INFO:Initializing create_model()
2024-03-02 13:30:00,771:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:00,771:INFO:Checking exceptions
2024-03-02 13:30:00,771:INFO:Importing libraries
2024-03-02 13:30:00,771:INFO:Copying training dataset
2024-03-02 13:30:00,775:INFO:Defining folds
2024-03-02 13:30:00,775:INFO:Declaring metric variables
2024-03-02 13:30:00,775:INFO:Importing untrained model
2024-03-02 13:30:00,776:INFO:Linear Regression Imported successfully
2024-03-02 13:30:00,776:INFO:Starting cross validation
2024-03-02 13:30:00,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:03,313:INFO:Calculating mean and std
2024-03-02 13:30:03,314:INFO:Creating metrics dataframe
2024-03-02 13:30:03,315:INFO:Uploading results into container
2024-03-02 13:30:03,316:INFO:Uploading model into container now
2024-03-02 13:30:03,316:INFO:_master_model_container: 1
2024-03-02 13:30:03,316:INFO:_display_container: 2
2024-03-02 13:30:03,316:INFO:LinearRegression(n_jobs=-1)
2024-03-02 13:30:03,316:INFO:create_model() successfully completed......................................
2024-03-02 13:30:03,400:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:03,401:INFO:Creating metrics dataframe
2024-03-02 13:30:03,402:INFO:Initializing Lasso Regression
2024-03-02 13:30:03,402:INFO:Total runtime is 0.04386779069900513 minutes
2024-03-02 13:30:03,402:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:03,403:INFO:Initializing create_model()
2024-03-02 13:30:03,403:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:03,403:INFO:Checking exceptions
2024-03-02 13:30:03,403:INFO:Importing libraries
2024-03-02 13:30:03,403:INFO:Copying training dataset
2024-03-02 13:30:03,406:INFO:Defining folds
2024-03-02 13:30:03,406:INFO:Declaring metric variables
2024-03-02 13:30:03,406:INFO:Importing untrained model
2024-03-02 13:30:03,406:INFO:Lasso Regression Imported successfully
2024-03-02 13:30:03,406:INFO:Starting cross validation
2024-03-02 13:30:03,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:05,132:INFO:Calculating mean and std
2024-03-02 13:30:05,133:INFO:Creating metrics dataframe
2024-03-02 13:30:05,134:INFO:Uploading results into container
2024-03-02 13:30:05,135:INFO:Uploading model into container now
2024-03-02 13:30:05,135:INFO:_master_model_container: 2
2024-03-02 13:30:05,135:INFO:_display_container: 2
2024-03-02 13:30:05,135:INFO:Lasso(random_state=5729)
2024-03-02 13:30:05,135:INFO:create_model() successfully completed......................................
2024-03-02 13:30:05,219:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:05,219:INFO:Creating metrics dataframe
2024-03-02 13:30:05,221:INFO:Initializing Ridge Regression
2024-03-02 13:30:05,221:INFO:Total runtime is 0.07418268124262492 minutes
2024-03-02 13:30:05,222:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:05,222:INFO:Initializing create_model()
2024-03-02 13:30:05,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:05,222:INFO:Checking exceptions
2024-03-02 13:30:05,222:INFO:Importing libraries
2024-03-02 13:30:05,222:INFO:Copying training dataset
2024-03-02 13:30:05,225:INFO:Defining folds
2024-03-02 13:30:05,225:INFO:Declaring metric variables
2024-03-02 13:30:05,225:INFO:Importing untrained model
2024-03-02 13:30:05,225:INFO:Ridge Regression Imported successfully
2024-03-02 13:30:05,225:INFO:Starting cross validation
2024-03-02 13:30:05,227:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:05,362:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.11129e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:05,363:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.31393e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:05,363:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.68119e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:05,373:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.20747e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:05,374:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.02643e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:05,394:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.61914e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:05,396:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.30649e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:05,400:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.39617e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:05,403:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.16994e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:05,419:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.42056e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:05,447:INFO:Calculating mean and std
2024-03-02 13:30:05,448:INFO:Creating metrics dataframe
2024-03-02 13:30:05,449:INFO:Uploading results into container
2024-03-02 13:30:05,450:INFO:Uploading model into container now
2024-03-02 13:30:05,450:INFO:_master_model_container: 3
2024-03-02 13:30:05,450:INFO:_display_container: 2
2024-03-02 13:30:05,450:INFO:Ridge(random_state=5729)
2024-03-02 13:30:05,450:INFO:create_model() successfully completed......................................
2024-03-02 13:30:05,531:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:05,531:INFO:Creating metrics dataframe
2024-03-02 13:30:05,533:INFO:Initializing Elastic Net
2024-03-02 13:30:05,533:INFO:Total runtime is 0.07938564618428548 minutes
2024-03-02 13:30:05,534:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:05,534:INFO:Initializing create_model()
2024-03-02 13:30:05,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:05,534:INFO:Checking exceptions
2024-03-02 13:30:05,534:INFO:Importing libraries
2024-03-02 13:30:05,534:INFO:Copying training dataset
2024-03-02 13:30:05,537:INFO:Defining folds
2024-03-02 13:30:05,537:INFO:Declaring metric variables
2024-03-02 13:30:05,537:INFO:Importing untrained model
2024-03-02 13:30:05,537:INFO:Elastic Net Imported successfully
2024-03-02 13:30:05,537:INFO:Starting cross validation
2024-03-02 13:30:05,539:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:05,781:INFO:Calculating mean and std
2024-03-02 13:30:05,782:INFO:Creating metrics dataframe
2024-03-02 13:30:05,783:INFO:Uploading results into container
2024-03-02 13:30:05,783:INFO:Uploading model into container now
2024-03-02 13:30:05,784:INFO:_master_model_container: 4
2024-03-02 13:30:05,784:INFO:_display_container: 2
2024-03-02 13:30:05,784:INFO:ElasticNet(random_state=5729)
2024-03-02 13:30:05,784:INFO:create_model() successfully completed......................................
2024-03-02 13:30:05,868:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:05,868:INFO:Creating metrics dataframe
2024-03-02 13:30:05,870:INFO:Initializing Least Angle Regression
2024-03-02 13:30:05,870:INFO:Total runtime is 0.08499433596928914 minutes
2024-03-02 13:30:05,871:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:05,871:INFO:Initializing create_model()
2024-03-02 13:30:05,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:05,871:INFO:Checking exceptions
2024-03-02 13:30:05,871:INFO:Importing libraries
2024-03-02 13:30:05,871:INFO:Copying training dataset
2024-03-02 13:30:05,875:INFO:Defining folds
2024-03-02 13:30:05,875:INFO:Declaring metric variables
2024-03-02 13:30:05,875:INFO:Importing untrained model
2024-03-02 13:30:05,876:INFO:Least Angle Regression Imported successfully
2024-03-02 13:30:05,876:INFO:Starting cross validation
2024-03-02 13:30:05,877:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:06,115:INFO:Calculating mean and std
2024-03-02 13:30:06,116:INFO:Creating metrics dataframe
2024-03-02 13:30:06,117:INFO:Uploading results into container
2024-03-02 13:30:06,117:INFO:Uploading model into container now
2024-03-02 13:30:06,118:INFO:_master_model_container: 5
2024-03-02 13:30:06,118:INFO:_display_container: 2
2024-03-02 13:30:06,118:INFO:Lars(random_state=5729)
2024-03-02 13:30:06,118:INFO:create_model() successfully completed......................................
2024-03-02 13:30:06,201:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:06,201:INFO:Creating metrics dataframe
2024-03-02 13:30:06,203:INFO:Initializing Lasso Least Angle Regression
2024-03-02 13:30:06,203:INFO:Total runtime is 0.09055536985397339 minutes
2024-03-02 13:30:06,203:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:06,203:INFO:Initializing create_model()
2024-03-02 13:30:06,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:06,203:INFO:Checking exceptions
2024-03-02 13:30:06,203:INFO:Importing libraries
2024-03-02 13:30:06,203:INFO:Copying training dataset
2024-03-02 13:30:06,206:INFO:Defining folds
2024-03-02 13:30:06,206:INFO:Declaring metric variables
2024-03-02 13:30:06,207:INFO:Importing untrained model
2024-03-02 13:30:06,207:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 13:30:06,207:INFO:Starting cross validation
2024-03-02 13:30:06,208:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:06,429:INFO:Calculating mean and std
2024-03-02 13:30:06,430:INFO:Creating metrics dataframe
2024-03-02 13:30:06,431:INFO:Uploading results into container
2024-03-02 13:30:06,431:INFO:Uploading model into container now
2024-03-02 13:30:06,432:INFO:_master_model_container: 6
2024-03-02 13:30:06,432:INFO:_display_container: 2
2024-03-02 13:30:06,432:INFO:LassoLars(random_state=5729)
2024-03-02 13:30:06,432:INFO:create_model() successfully completed......................................
2024-03-02 13:30:06,514:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:06,514:INFO:Creating metrics dataframe
2024-03-02 13:30:06,516:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 13:30:06,516:INFO:Total runtime is 0.0957672397295634 minutes
2024-03-02 13:30:06,516:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:06,516:INFO:Initializing create_model()
2024-03-02 13:30:06,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:06,516:INFO:Checking exceptions
2024-03-02 13:30:06,516:INFO:Importing libraries
2024-03-02 13:30:06,516:INFO:Copying training dataset
2024-03-02 13:30:06,519:INFO:Defining folds
2024-03-02 13:30:06,519:INFO:Declaring metric variables
2024-03-02 13:30:06,520:INFO:Importing untrained model
2024-03-02 13:30:06,520:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 13:30:06,520:INFO:Starting cross validation
2024-03-02 13:30:06,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:06,761:INFO:Calculating mean and std
2024-03-02 13:30:06,762:INFO:Creating metrics dataframe
2024-03-02 13:30:06,763:INFO:Uploading results into container
2024-03-02 13:30:06,763:INFO:Uploading model into container now
2024-03-02 13:30:06,764:INFO:_master_model_container: 7
2024-03-02 13:30:06,764:INFO:_display_container: 2
2024-03-02 13:30:06,764:INFO:OrthogonalMatchingPursuit()
2024-03-02 13:30:06,764:INFO:create_model() successfully completed......................................
2024-03-02 13:30:06,849:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:06,850:INFO:Creating metrics dataframe
2024-03-02 13:30:06,852:INFO:Initializing Bayesian Ridge
2024-03-02 13:30:06,852:INFO:Total runtime is 0.1013619065284729 minutes
2024-03-02 13:30:06,852:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:06,852:INFO:Initializing create_model()
2024-03-02 13:30:06,852:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:06,852:INFO:Checking exceptions
2024-03-02 13:30:06,852:INFO:Importing libraries
2024-03-02 13:30:06,852:INFO:Copying training dataset
2024-03-02 13:30:06,855:INFO:Defining folds
2024-03-02 13:30:06,856:INFO:Declaring metric variables
2024-03-02 13:30:06,856:INFO:Importing untrained model
2024-03-02 13:30:06,856:INFO:Bayesian Ridge Imported successfully
2024-03-02 13:30:06,856:INFO:Starting cross validation
2024-03-02 13:30:06,857:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:07,104:INFO:Calculating mean and std
2024-03-02 13:30:07,105:INFO:Creating metrics dataframe
2024-03-02 13:30:07,106:INFO:Uploading results into container
2024-03-02 13:30:07,107:INFO:Uploading model into container now
2024-03-02 13:30:07,107:INFO:_master_model_container: 8
2024-03-02 13:30:07,107:INFO:_display_container: 2
2024-03-02 13:30:07,107:INFO:BayesianRidge()
2024-03-02 13:30:07,107:INFO:create_model() successfully completed......................................
2024-03-02 13:30:07,190:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:07,190:INFO:Creating metrics dataframe
2024-03-02 13:30:07,192:INFO:Initializing Passive Aggressive Regressor
2024-03-02 13:30:07,192:INFO:Total runtime is 0.10703253746032715 minutes
2024-03-02 13:30:07,192:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:07,192:INFO:Initializing create_model()
2024-03-02 13:30:07,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:07,192:INFO:Checking exceptions
2024-03-02 13:30:07,192:INFO:Importing libraries
2024-03-02 13:30:07,192:INFO:Copying training dataset
2024-03-02 13:30:07,195:INFO:Defining folds
2024-03-02 13:30:07,195:INFO:Declaring metric variables
2024-03-02 13:30:07,195:INFO:Importing untrained model
2024-03-02 13:30:07,195:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 13:30:07,196:INFO:Starting cross validation
2024-03-02 13:30:07,197:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:07,420:INFO:Calculating mean and std
2024-03-02 13:30:07,421:INFO:Creating metrics dataframe
2024-03-02 13:30:07,422:INFO:Uploading results into container
2024-03-02 13:30:07,422:INFO:Uploading model into container now
2024-03-02 13:30:07,423:INFO:_master_model_container: 9
2024-03-02 13:30:07,423:INFO:_display_container: 2
2024-03-02 13:30:07,423:INFO:PassiveAggressiveRegressor(random_state=5729)
2024-03-02 13:30:07,423:INFO:create_model() successfully completed......................................
2024-03-02 13:30:07,505:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:07,505:INFO:Creating metrics dataframe
2024-03-02 13:30:07,507:INFO:Initializing Huber Regressor
2024-03-02 13:30:07,507:INFO:Total runtime is 0.11227559645970663 minutes
2024-03-02 13:30:07,507:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:07,507:INFO:Initializing create_model()
2024-03-02 13:30:07,507:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:07,508:INFO:Checking exceptions
2024-03-02 13:30:07,508:INFO:Importing libraries
2024-03-02 13:30:07,508:INFO:Copying training dataset
2024-03-02 13:30:07,511:INFO:Defining folds
2024-03-02 13:30:07,511:INFO:Declaring metric variables
2024-03-02 13:30:07,511:INFO:Importing untrained model
2024-03-02 13:30:07,511:INFO:Huber Regressor Imported successfully
2024-03-02 13:30:07,511:INFO:Starting cross validation
2024-03-02 13:30:07,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:07,738:INFO:Calculating mean and std
2024-03-02 13:30:07,739:INFO:Creating metrics dataframe
2024-03-02 13:30:07,741:INFO:Uploading results into container
2024-03-02 13:30:07,741:INFO:Uploading model into container now
2024-03-02 13:30:07,741:INFO:_master_model_container: 10
2024-03-02 13:30:07,741:INFO:_display_container: 2
2024-03-02 13:30:07,742:INFO:HuberRegressor()
2024-03-02 13:30:07,742:INFO:create_model() successfully completed......................................
2024-03-02 13:30:07,827:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:07,827:INFO:Creating metrics dataframe
2024-03-02 13:30:07,829:INFO:Initializing K Neighbors Regressor
2024-03-02 13:30:07,829:INFO:Total runtime is 0.11764429012934367 minutes
2024-03-02 13:30:07,829:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:07,829:INFO:Initializing create_model()
2024-03-02 13:30:07,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:07,829:INFO:Checking exceptions
2024-03-02 13:30:07,830:INFO:Importing libraries
2024-03-02 13:30:07,830:INFO:Copying training dataset
2024-03-02 13:30:07,833:INFO:Defining folds
2024-03-02 13:30:07,833:INFO:Declaring metric variables
2024-03-02 13:30:07,833:INFO:Importing untrained model
2024-03-02 13:30:07,833:INFO:K Neighbors Regressor Imported successfully
2024-03-02 13:30:07,833:INFO:Starting cross validation
2024-03-02 13:30:07,834:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:08,152:INFO:Calculating mean and std
2024-03-02 13:30:08,153:INFO:Creating metrics dataframe
2024-03-02 13:30:08,154:INFO:Uploading results into container
2024-03-02 13:30:08,154:INFO:Uploading model into container now
2024-03-02 13:30:08,155:INFO:_master_model_container: 11
2024-03-02 13:30:08,155:INFO:_display_container: 2
2024-03-02 13:30:08,155:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 13:30:08,155:INFO:create_model() successfully completed......................................
2024-03-02 13:30:08,238:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:08,238:INFO:Creating metrics dataframe
2024-03-02 13:30:08,241:INFO:Initializing Decision Tree Regressor
2024-03-02 13:30:08,241:INFO:Total runtime is 0.12451535860697428 minutes
2024-03-02 13:30:08,241:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:08,241:INFO:Initializing create_model()
2024-03-02 13:30:08,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:08,241:INFO:Checking exceptions
2024-03-02 13:30:08,241:INFO:Importing libraries
2024-03-02 13:30:08,241:INFO:Copying training dataset
2024-03-02 13:30:08,246:INFO:Defining folds
2024-03-02 13:30:08,246:INFO:Declaring metric variables
2024-03-02 13:30:08,246:INFO:Importing untrained model
2024-03-02 13:30:08,246:INFO:Decision Tree Regressor Imported successfully
2024-03-02 13:30:08,246:INFO:Starting cross validation
2024-03-02 13:30:08,248:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:08,484:INFO:Calculating mean and std
2024-03-02 13:30:08,485:INFO:Creating metrics dataframe
2024-03-02 13:30:08,486:INFO:Uploading results into container
2024-03-02 13:30:08,487:INFO:Uploading model into container now
2024-03-02 13:30:08,487:INFO:_master_model_container: 12
2024-03-02 13:30:08,487:INFO:_display_container: 2
2024-03-02 13:30:08,487:INFO:DecisionTreeRegressor(random_state=5729)
2024-03-02 13:30:08,487:INFO:create_model() successfully completed......................................
2024-03-02 13:30:08,570:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:08,570:INFO:Creating metrics dataframe
2024-03-02 13:30:08,572:INFO:Initializing Random Forest Regressor
2024-03-02 13:30:08,572:INFO:Total runtime is 0.1300283630688985 minutes
2024-03-02 13:30:08,572:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:08,572:INFO:Initializing create_model()
2024-03-02 13:30:08,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:08,573:INFO:Checking exceptions
2024-03-02 13:30:08,573:INFO:Importing libraries
2024-03-02 13:30:08,573:INFO:Copying training dataset
2024-03-02 13:30:08,576:INFO:Defining folds
2024-03-02 13:30:08,576:INFO:Declaring metric variables
2024-03-02 13:30:08,576:INFO:Importing untrained model
2024-03-02 13:30:08,576:INFO:Random Forest Regressor Imported successfully
2024-03-02 13:30:08,576:INFO:Starting cross validation
2024-03-02 13:30:08,577:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:10,034:INFO:Calculating mean and std
2024-03-02 13:30:10,035:INFO:Creating metrics dataframe
2024-03-02 13:30:10,036:INFO:Uploading results into container
2024-03-02 13:30:10,037:INFO:Uploading model into container now
2024-03-02 13:30:10,037:INFO:_master_model_container: 13
2024-03-02 13:30:10,037:INFO:_display_container: 2
2024-03-02 13:30:10,037:INFO:RandomForestRegressor(n_jobs=-1, random_state=5729)
2024-03-02 13:30:10,037:INFO:create_model() successfully completed......................................
2024-03-02 13:30:10,125:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:10,125:INFO:Creating metrics dataframe
2024-03-02 13:30:10,127:INFO:Initializing Extra Trees Regressor
2024-03-02 13:30:10,127:INFO:Total runtime is 0.1559481422106425 minutes
2024-03-02 13:30:10,128:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:10,128:INFO:Initializing create_model()
2024-03-02 13:30:10,128:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:10,128:INFO:Checking exceptions
2024-03-02 13:30:10,128:INFO:Importing libraries
2024-03-02 13:30:10,128:INFO:Copying training dataset
2024-03-02 13:30:10,131:INFO:Defining folds
2024-03-02 13:30:10,132:INFO:Declaring metric variables
2024-03-02 13:30:10,132:INFO:Importing untrained model
2024-03-02 13:30:10,132:INFO:Extra Trees Regressor Imported successfully
2024-03-02 13:30:10,132:INFO:Starting cross validation
2024-03-02 13:30:10,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:10,975:INFO:Calculating mean and std
2024-03-02 13:30:10,976:INFO:Creating metrics dataframe
2024-03-02 13:30:10,977:INFO:Uploading results into container
2024-03-02 13:30:10,978:INFO:Uploading model into container now
2024-03-02 13:30:10,978:INFO:_master_model_container: 14
2024-03-02 13:30:10,978:INFO:_display_container: 2
2024-03-02 13:30:10,979:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5729)
2024-03-02 13:30:10,979:INFO:create_model() successfully completed......................................
2024-03-02 13:30:11,067:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:11,067:INFO:Creating metrics dataframe
2024-03-02 13:30:11,070:INFO:Initializing AdaBoost Regressor
2024-03-02 13:30:11,070:INFO:Total runtime is 0.17165838479995726 minutes
2024-03-02 13:30:11,070:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:11,070:INFO:Initializing create_model()
2024-03-02 13:30:11,070:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:11,070:INFO:Checking exceptions
2024-03-02 13:30:11,070:INFO:Importing libraries
2024-03-02 13:30:11,071:INFO:Copying training dataset
2024-03-02 13:30:11,075:INFO:Defining folds
2024-03-02 13:30:11,076:INFO:Declaring metric variables
2024-03-02 13:30:11,076:INFO:Importing untrained model
2024-03-02 13:30:11,076:INFO:AdaBoost Regressor Imported successfully
2024-03-02 13:30:11,076:INFO:Starting cross validation
2024-03-02 13:30:11,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:11,516:INFO:Calculating mean and std
2024-03-02 13:30:11,517:INFO:Creating metrics dataframe
2024-03-02 13:30:11,518:INFO:Uploading results into container
2024-03-02 13:30:11,518:INFO:Uploading model into container now
2024-03-02 13:30:11,519:INFO:_master_model_container: 15
2024-03-02 13:30:11,519:INFO:_display_container: 2
2024-03-02 13:30:11,519:INFO:AdaBoostRegressor(random_state=5729)
2024-03-02 13:30:11,519:INFO:create_model() successfully completed......................................
2024-03-02 13:30:11,602:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:11,602:INFO:Creating metrics dataframe
2024-03-02 13:30:11,604:INFO:Initializing Gradient Boosting Regressor
2024-03-02 13:30:11,604:INFO:Total runtime is 0.18056248029073077 minutes
2024-03-02 13:30:11,604:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:11,604:INFO:Initializing create_model()
2024-03-02 13:30:11,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:11,604:INFO:Checking exceptions
2024-03-02 13:30:11,604:INFO:Importing libraries
2024-03-02 13:30:11,604:INFO:Copying training dataset
2024-03-02 13:30:11,607:INFO:Defining folds
2024-03-02 13:30:11,607:INFO:Declaring metric variables
2024-03-02 13:30:11,607:INFO:Importing untrained model
2024-03-02 13:30:11,608:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 13:30:11,608:INFO:Starting cross validation
2024-03-02 13:30:11,609:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:12,357:INFO:Calculating mean and std
2024-03-02 13:30:12,358:INFO:Creating metrics dataframe
2024-03-02 13:30:12,359:INFO:Uploading results into container
2024-03-02 13:30:12,360:INFO:Uploading model into container now
2024-03-02 13:30:12,360:INFO:_master_model_container: 16
2024-03-02 13:30:12,360:INFO:_display_container: 2
2024-03-02 13:30:12,360:INFO:GradientBoostingRegressor(random_state=5729)
2024-03-02 13:30:12,360:INFO:create_model() successfully completed......................................
2024-03-02 13:30:12,443:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:12,443:INFO:Creating metrics dataframe
2024-03-02 13:30:12,445:INFO:Initializing Extreme Gradient Boosting
2024-03-02 13:30:12,445:INFO:Total runtime is 0.19458202123641966 minutes
2024-03-02 13:30:12,445:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:12,446:INFO:Initializing create_model()
2024-03-02 13:30:12,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:12,446:INFO:Checking exceptions
2024-03-02 13:30:12,446:INFO:Importing libraries
2024-03-02 13:30:12,446:INFO:Copying training dataset
2024-03-02 13:30:12,451:INFO:Defining folds
2024-03-02 13:30:12,451:INFO:Declaring metric variables
2024-03-02 13:30:12,451:INFO:Importing untrained model
2024-03-02 13:30:12,452:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 13:30:12,452:INFO:Starting cross validation
2024-03-02 13:30:12,453:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:12,894:INFO:Calculating mean and std
2024-03-02 13:30:12,895:INFO:Creating metrics dataframe
2024-03-02 13:30:12,896:INFO:Uploading results into container
2024-03-02 13:30:12,896:INFO:Uploading model into container now
2024-03-02 13:30:12,897:INFO:_master_model_container: 17
2024-03-02 13:30:12,897:INFO:_display_container: 2
2024-03-02 13:30:12,897:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=5729, ...)
2024-03-02 13:30:12,897:INFO:create_model() successfully completed......................................
2024-03-02 13:30:12,981:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:12,981:INFO:Creating metrics dataframe
2024-03-02 13:30:12,983:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 13:30:12,983:INFO:Total runtime is 0.2035521586736043 minutes
2024-03-02 13:30:12,983:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:12,984:INFO:Initializing create_model()
2024-03-02 13:30:12,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:12,984:INFO:Checking exceptions
2024-03-02 13:30:12,984:INFO:Importing libraries
2024-03-02 13:30:12,984:INFO:Copying training dataset
2024-03-02 13:30:12,986:INFO:Defining folds
2024-03-02 13:30:12,986:INFO:Declaring metric variables
2024-03-02 13:30:12,988:INFO:Importing untrained model
2024-03-02 13:30:12,988:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 13:30:12,988:INFO:Starting cross validation
2024-03-02 13:30:12,989:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:13,932:INFO:Calculating mean and std
2024-03-02 13:30:13,933:INFO:Creating metrics dataframe
2024-03-02 13:30:13,935:INFO:Uploading results into container
2024-03-02 13:30:13,936:INFO:Uploading model into container now
2024-03-02 13:30:13,936:INFO:_master_model_container: 18
2024-03-02 13:30:13,936:INFO:_display_container: 2
2024-03-02 13:30:13,937:INFO:LGBMRegressor(n_jobs=-1, random_state=5729)
2024-03-02 13:30:13,937:INFO:create_model() successfully completed......................................
2024-03-02 13:30:14,035:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:14,035:INFO:Creating metrics dataframe
2024-03-02 13:30:14,038:INFO:Initializing Dummy Regressor
2024-03-02 13:30:14,038:INFO:Total runtime is 0.2211365977923075 minutes
2024-03-02 13:30:14,038:INFO:SubProcess create_model() called ==================================
2024-03-02 13:30:14,038:INFO:Initializing create_model()
2024-03-02 13:30:14,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E4D0AC7100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:14,038:INFO:Checking exceptions
2024-03-02 13:30:14,038:INFO:Importing libraries
2024-03-02 13:30:14,038:INFO:Copying training dataset
2024-03-02 13:30:14,042:INFO:Defining folds
2024-03-02 13:30:14,042:INFO:Declaring metric variables
2024-03-02 13:30:14,042:INFO:Importing untrained model
2024-03-02 13:30:14,042:INFO:Dummy Regressor Imported successfully
2024-03-02 13:30:14,042:INFO:Starting cross validation
2024-03-02 13:30:14,043:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:30:14,264:INFO:Calculating mean and std
2024-03-02 13:30:14,265:INFO:Creating metrics dataframe
2024-03-02 13:30:14,267:INFO:Uploading results into container
2024-03-02 13:30:14,267:INFO:Uploading model into container now
2024-03-02 13:30:14,268:INFO:_master_model_container: 19
2024-03-02 13:30:14,268:INFO:_display_container: 2
2024-03-02 13:30:14,268:INFO:DummyRegressor()
2024-03-02 13:30:14,268:INFO:create_model() successfully completed......................................
2024-03-02 13:30:14,353:INFO:SubProcess create_model() end ==================================
2024-03-02 13:30:14,353:INFO:Creating metrics dataframe
2024-03-02 13:30:14,356:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 13:30:14,357:INFO:Initializing create_model()
2024-03-02 13:30:14,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E4CFE8BA90>, estimator=Ridge(random_state=5729), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:30:14,357:INFO:Checking exceptions
2024-03-02 13:30:14,358:INFO:Importing libraries
2024-03-02 13:30:14,358:INFO:Copying training dataset
2024-03-02 13:30:14,361:INFO:Defining folds
2024-03-02 13:30:14,361:INFO:Declaring metric variables
2024-03-02 13:30:14,361:INFO:Importing untrained model
2024-03-02 13:30:14,361:INFO:Declaring custom model
2024-03-02 13:30:14,362:INFO:Ridge Regression Imported successfully
2024-03-02 13:30:14,363:INFO:Cross validation set to False
2024-03-02 13:30:14,363:INFO:Fitting Model
2024-03-02 13:30:14,444:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.3996e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:30:14,444:INFO:Ridge(random_state=5729)
2024-03-02 13:30:14,444:INFO:create_model() successfully completed......................................
2024-03-02 13:30:14,542:INFO:_master_model_container: 19
2024-03-02 13:30:14,542:INFO:_display_container: 2
2024-03-02 13:30:14,542:INFO:Ridge(random_state=5729)
2024-03-02 13:30:14,542:INFO:compare_models() successfully completed......................................
2024-03-02 13:30:56,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:30:56,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:30:56,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:30:56,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:30:59,731:WARNING:D:\HackNITR\automata\polls\views.py:33: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 13:30:59,770:WARNING:D:\HackNITR\automata\polls\views.py:35: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 13:30:59,776:INFO:PyCaret RegressionExperiment
2024-03-02 13:30:59,776:INFO:Logging name: reg-default-name
2024-03-02 13:30:59,776:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 13:30:59,776:INFO:version 3.3.0
2024-03-02 13:30:59,776:INFO:Initializing setup()
2024-03-02 13:30:59,776:INFO:self.USI: fda3
2024-03-02 13:30:59,776:INFO:self._variable_keys: {'USI', '_available_plots', '_ml_usecase', 'y_test', 'fold_generator', 'exp_name_log', 'n_jobs_param', 'gpu_n_jobs_param', 'y_train', 'X_train', 'fold_groups_param', 'target_param', 'X_test', 'X', 'exp_id', 'html_param', 'transform_target_param', 'fold_shuffle_param', 'logging_param', 'idx', 'memory', 'y', 'pipeline', 'data', 'seed', 'log_plots_param', 'gpu_param'}
2024-03-02 13:30:59,776:INFO:Checking environment
2024-03-02 13:30:59,776:INFO:python_version: 3.9.0
2024-03-02 13:30:59,776:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 13:30:59,776:INFO:machine: AMD64
2024-03-02 13:30:59,776:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 13:30:59,784:INFO:Memory: svmem(total=16476958720, available=4565544960, percent=72.3, used=11911413760, free=4565544960)
2024-03-02 13:30:59,784:INFO:Physical Core: 8
2024-03-02 13:30:59,784:INFO:Logical Core: 16
2024-03-02 13:30:59,784:INFO:Checking libraries
2024-03-02 13:30:59,784:INFO:System:
2024-03-02 13:30:59,784:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 13:30:59,785:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 13:30:59,785:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 13:30:59,785:INFO:PyCaret required dependencies:
2024-03-02 13:30:59,840:INFO:                 pip: 23.3.2
2024-03-02 13:30:59,840:INFO:          setuptools: 49.2.1
2024-03-02 13:30:59,840:INFO:             pycaret: 3.3.0
2024-03-02 13:30:59,840:INFO:             IPython: 8.18.1
2024-03-02 13:30:59,841:INFO:          ipywidgets: 8.1.2
2024-03-02 13:30:59,841:INFO:                tqdm: 4.66.1
2024-03-02 13:30:59,841:INFO:               numpy: 1.25.2
2024-03-02 13:30:59,841:INFO:              pandas: 2.1.1
2024-03-02 13:30:59,841:INFO:              jinja2: 3.1.2
2024-03-02 13:30:59,841:INFO:               scipy: 1.11.4
2024-03-02 13:30:59,841:INFO:              joblib: 1.3.2
2024-03-02 13:30:59,841:INFO:             sklearn: 1.4.1.post1
2024-03-02 13:30:59,841:INFO:                pyod: 1.1.3
2024-03-02 13:30:59,841:INFO:            imblearn: 0.12.0
2024-03-02 13:30:59,841:INFO:   category_encoders: 2.6.3
2024-03-02 13:30:59,841:INFO:            lightgbm: 4.3.0
2024-03-02 13:30:59,841:INFO:               numba: 0.58.1
2024-03-02 13:30:59,841:INFO:            requests: 2.31.0
2024-03-02 13:30:59,841:INFO:          matplotlib: 3.7.5
2024-03-02 13:30:59,841:INFO:          scikitplot: 0.3.7
2024-03-02 13:30:59,841:INFO:         yellowbrick: 1.5
2024-03-02 13:30:59,841:INFO:              plotly: 5.19.0
2024-03-02 13:30:59,841:INFO:    plotly-resampler: Not installed
2024-03-02 13:30:59,842:INFO:             kaleido: 0.2.1
2024-03-02 13:30:59,842:INFO:           schemdraw: 0.15
2024-03-02 13:30:59,842:INFO:         statsmodels: 0.14.1
2024-03-02 13:30:59,842:INFO:              sktime: 0.27.0
2024-03-02 13:30:59,842:INFO:               tbats: 1.1.3
2024-03-02 13:30:59,842:INFO:            pmdarima: 2.0.4
2024-03-02 13:30:59,842:INFO:              psutil: 5.9.8
2024-03-02 13:30:59,843:INFO:          markupsafe: 2.1.3
2024-03-02 13:30:59,843:INFO:             pickle5: Not installed
2024-03-02 13:30:59,843:INFO:         cloudpickle: 3.0.0
2024-03-02 13:30:59,843:INFO:         deprecation: 2.1.0
2024-03-02 13:30:59,843:INFO:              xxhash: 3.4.1
2024-03-02 13:30:59,843:INFO:           wurlitzer: Not installed
2024-03-02 13:30:59,843:INFO:PyCaret optional dependencies:
2024-03-02 13:30:59,871:INFO:                shap: 0.44.1
2024-03-02 13:30:59,871:INFO:           interpret: Not installed
2024-03-02 13:30:59,871:INFO:                umap: Not installed
2024-03-02 13:30:59,871:INFO:     ydata_profiling: 4.6.5
2024-03-02 13:30:59,872:INFO:  explainerdashboard: 0.4.5
2024-03-02 13:30:59,872:INFO:             autoviz: Not installed
2024-03-02 13:30:59,872:INFO:           fairlearn: Not installed
2024-03-02 13:30:59,872:INFO:          deepchecks: Not installed
2024-03-02 13:30:59,872:INFO:             xgboost: 2.0.3
2024-03-02 13:30:59,872:INFO:            catboost: Not installed
2024-03-02 13:30:59,872:INFO:              kmodes: Not installed
2024-03-02 13:30:59,872:INFO:             mlxtend: Not installed
2024-03-02 13:30:59,872:INFO:       statsforecast: Not installed
2024-03-02 13:30:59,872:INFO:        tune_sklearn: Not installed
2024-03-02 13:30:59,872:INFO:                 ray: Not installed
2024-03-02 13:30:59,872:INFO:            hyperopt: Not installed
2024-03-02 13:30:59,872:INFO:              optuna: Not installed
2024-03-02 13:30:59,872:INFO:               skopt: Not installed
2024-03-02 13:30:59,872:INFO:              mlflow: Not installed
2024-03-02 13:30:59,872:INFO:              gradio: Not installed
2024-03-02 13:30:59,872:INFO:             fastapi: Not installed
2024-03-02 13:30:59,872:INFO:             uvicorn: Not installed
2024-03-02 13:30:59,872:INFO:              m2cgen: Not installed
2024-03-02 13:30:59,872:INFO:           evidently: Not installed
2024-03-02 13:30:59,872:INFO:               fugue: Not installed
2024-03-02 13:30:59,872:INFO:           streamlit: 1.27.2
2024-03-02 13:30:59,872:INFO:             prophet: Not installed
2024-03-02 13:30:59,872:INFO:None
2024-03-02 13:30:59,872:INFO:Set up data.
2024-03-02 13:30:59,890:INFO:Set up folding strategy.
2024-03-02 13:30:59,890:INFO:Set up train/test split.
2024-03-02 13:30:59,901:INFO:Set up index.
2024-03-02 13:30:59,902:INFO:Assigning column types.
2024-03-02 13:30:59,905:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 13:30:59,905:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:30:59,909:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:30:59,913:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:30:59,959:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:30:59,994:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:30:59,995:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:30:59,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:30:59,997:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,001:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,005:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,051:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,085:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,086:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,088:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 13:31:00,092:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,095:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,142:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,176:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,178:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,184:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,187:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,233:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,267:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,268:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,271:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 13:31:00,278:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,324:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,358:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,359:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,368:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,414:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,449:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,450:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,452:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 13:31:00,504:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,539:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,540:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,595:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,629:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,630:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,632:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 13:31:00,685:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,721:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,777:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:31:00,811:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,814:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 13:31:00,901:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,991:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:00,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:00,995:INFO:Preparing preprocessing pipeline...
2024-03-02 13:31:00,995:INFO:Set up simple imputation.
2024-03-02 13:31:00,999:INFO:Set up encoding of categorical features.
2024-03-02 13:31:00,999:INFO:Set up column name cleaning.
2024-03-02 13:31:01,184:INFO:Finished creating preprocessing pipeline.
2024-03-02 13:31:01,191:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 13:31:01,191:INFO:Creating final display dataframe.
2024-03-02 13:31:01,633:INFO:Setup _display_container:                     Description             Value
0                    Session id              3330
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              fda3
2024-03-02 13:31:01,727:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:01,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:01,817:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:31:01,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:31:01,819:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 13:31:01,820:INFO:setup() successfully completed in 2.05s...............
2024-03-02 13:31:01,820:INFO:Initializing compare_models()
2024-03-02 13:31:01,820:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 13:31:01,820:INFO:Checking exceptions
2024-03-02 13:31:01,822:INFO:Preparing display monitor
2024-03-02 13:31:01,824:INFO:Time budget is 1 minutes
2024-03-02 13:31:01,824:INFO:Initializing Linear Regression
2024-03-02 13:31:01,825:INFO:Total runtime is 1.6585985819498697e-05 minutes
2024-03-02 13:31:01,825:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:01,825:INFO:Initializing create_model()
2024-03-02 13:31:01,825:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:01,825:INFO:Checking exceptions
2024-03-02 13:31:01,825:INFO:Importing libraries
2024-03-02 13:31:01,825:INFO:Copying training dataset
2024-03-02 13:31:01,830:INFO:Defining folds
2024-03-02 13:31:01,830:INFO:Declaring metric variables
2024-03-02 13:31:01,830:INFO:Importing untrained model
2024-03-02 13:31:01,830:INFO:Linear Regression Imported successfully
2024-03-02 13:31:01,830:INFO:Starting cross validation
2024-03-02 13:31:01,835:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:04,407:INFO:Calculating mean and std
2024-03-02 13:31:04,408:INFO:Creating metrics dataframe
2024-03-02 13:31:04,410:INFO:Uploading results into container
2024-03-02 13:31:04,411:INFO:Uploading model into container now
2024-03-02 13:31:04,411:INFO:_master_model_container: 1
2024-03-02 13:31:04,411:INFO:_display_container: 2
2024-03-02 13:31:04,411:INFO:LinearRegression(n_jobs=-1)
2024-03-02 13:31:04,411:INFO:create_model() successfully completed......................................
2024-03-02 13:31:04,508:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:04,508:INFO:Creating metrics dataframe
2024-03-02 13:31:04,510:INFO:Initializing Lasso Regression
2024-03-02 13:31:04,511:INFO:Total runtime is 0.04477179447809856 minutes
2024-03-02 13:31:04,511:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:04,511:INFO:Initializing create_model()
2024-03-02 13:31:04,511:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:04,511:INFO:Checking exceptions
2024-03-02 13:31:04,511:INFO:Importing libraries
2024-03-02 13:31:04,511:INFO:Copying training dataset
2024-03-02 13:31:04,515:INFO:Defining folds
2024-03-02 13:31:04,515:INFO:Declaring metric variables
2024-03-02 13:31:04,515:INFO:Importing untrained model
2024-03-02 13:31:04,515:INFO:Lasso Regression Imported successfully
2024-03-02 13:31:04,515:INFO:Starting cross validation
2024-03-02 13:31:04,517:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:06,194:INFO:Calculating mean and std
2024-03-02 13:31:06,195:INFO:Creating metrics dataframe
2024-03-02 13:31:06,198:INFO:Uploading results into container
2024-03-02 13:31:06,199:INFO:Uploading model into container now
2024-03-02 13:31:06,199:INFO:_master_model_container: 2
2024-03-02 13:31:06,199:INFO:_display_container: 2
2024-03-02 13:31:06,200:INFO:Lasso(random_state=3330)
2024-03-02 13:31:06,200:INFO:create_model() successfully completed......................................
2024-03-02 13:31:06,286:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:06,287:INFO:Creating metrics dataframe
2024-03-02 13:31:06,289:INFO:Initializing Ridge Regression
2024-03-02 13:31:06,289:INFO:Total runtime is 0.07440469264984131 minutes
2024-03-02 13:31:06,289:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:06,289:INFO:Initializing create_model()
2024-03-02 13:31:06,289:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:06,289:INFO:Checking exceptions
2024-03-02 13:31:06,289:INFO:Importing libraries
2024-03-02 13:31:06,289:INFO:Copying training dataset
2024-03-02 13:31:06,294:INFO:Defining folds
2024-03-02 13:31:06,294:INFO:Declaring metric variables
2024-03-02 13:31:06,294:INFO:Importing untrained model
2024-03-02 13:31:06,294:INFO:Ridge Regression Imported successfully
2024-03-02 13:31:06,295:INFO:Starting cross validation
2024-03-02 13:31:06,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:06,442:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.96244e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:31:06,444:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.93106e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:31:06,456:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.33941e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:31:06,460:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.96711e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:31:06,461:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.98962e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:31:06,477:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.96457e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:31:06,489:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.2145e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:31:06,500:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.96965e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:31:06,506:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=5.20436e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:31:06,508:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.34878e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:31:06,544:INFO:Calculating mean and std
2024-03-02 13:31:06,545:INFO:Creating metrics dataframe
2024-03-02 13:31:06,547:INFO:Uploading results into container
2024-03-02 13:31:06,547:INFO:Uploading model into container now
2024-03-02 13:31:06,547:INFO:_master_model_container: 3
2024-03-02 13:31:06,547:INFO:_display_container: 2
2024-03-02 13:31:06,547:INFO:Ridge(random_state=3330)
2024-03-02 13:31:06,547:INFO:create_model() successfully completed......................................
2024-03-02 13:31:06,628:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:06,628:INFO:Creating metrics dataframe
2024-03-02 13:31:06,630:INFO:Initializing Elastic Net
2024-03-02 13:31:06,630:INFO:Total runtime is 0.08010022640228272 minutes
2024-03-02 13:31:06,630:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:06,630:INFO:Initializing create_model()
2024-03-02 13:31:06,630:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:06,630:INFO:Checking exceptions
2024-03-02 13:31:06,630:INFO:Importing libraries
2024-03-02 13:31:06,630:INFO:Copying training dataset
2024-03-02 13:31:06,633:INFO:Defining folds
2024-03-02 13:31:06,633:INFO:Declaring metric variables
2024-03-02 13:31:06,634:INFO:Importing untrained model
2024-03-02 13:31:06,634:INFO:Elastic Net Imported successfully
2024-03-02 13:31:06,634:INFO:Starting cross validation
2024-03-02 13:31:06,635:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:06,885:INFO:Calculating mean and std
2024-03-02 13:31:06,886:INFO:Creating metrics dataframe
2024-03-02 13:31:06,887:INFO:Uploading results into container
2024-03-02 13:31:06,887:INFO:Uploading model into container now
2024-03-02 13:31:06,888:INFO:_master_model_container: 4
2024-03-02 13:31:06,888:INFO:_display_container: 2
2024-03-02 13:31:06,888:INFO:ElasticNet(random_state=3330)
2024-03-02 13:31:06,888:INFO:create_model() successfully completed......................................
2024-03-02 13:31:06,968:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:06,968:INFO:Creating metrics dataframe
2024-03-02 13:31:06,970:INFO:Initializing Least Angle Regression
2024-03-02 13:31:06,970:INFO:Total runtime is 0.08576273520787557 minutes
2024-03-02 13:31:06,971:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:06,971:INFO:Initializing create_model()
2024-03-02 13:31:06,971:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:06,971:INFO:Checking exceptions
2024-03-02 13:31:06,971:INFO:Importing libraries
2024-03-02 13:31:06,971:INFO:Copying training dataset
2024-03-02 13:31:06,974:INFO:Defining folds
2024-03-02 13:31:06,974:INFO:Declaring metric variables
2024-03-02 13:31:06,974:INFO:Importing untrained model
2024-03-02 13:31:06,974:INFO:Least Angle Regression Imported successfully
2024-03-02 13:31:06,974:INFO:Starting cross validation
2024-03-02 13:31:06,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:07,216:INFO:Calculating mean and std
2024-03-02 13:31:07,217:INFO:Creating metrics dataframe
2024-03-02 13:31:07,218:INFO:Uploading results into container
2024-03-02 13:31:07,219:INFO:Uploading model into container now
2024-03-02 13:31:07,219:INFO:_master_model_container: 5
2024-03-02 13:31:07,219:INFO:_display_container: 2
2024-03-02 13:31:07,219:INFO:Lars(random_state=3330)
2024-03-02 13:31:07,219:INFO:create_model() successfully completed......................................
2024-03-02 13:31:07,301:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:07,301:INFO:Creating metrics dataframe
2024-03-02 13:31:07,303:INFO:Initializing Lasso Least Angle Regression
2024-03-02 13:31:07,303:INFO:Total runtime is 0.09131959279378256 minutes
2024-03-02 13:31:07,304:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:07,304:INFO:Initializing create_model()
2024-03-02 13:31:07,304:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:07,304:INFO:Checking exceptions
2024-03-02 13:31:07,304:INFO:Importing libraries
2024-03-02 13:31:07,304:INFO:Copying training dataset
2024-03-02 13:31:07,307:INFO:Defining folds
2024-03-02 13:31:07,307:INFO:Declaring metric variables
2024-03-02 13:31:07,307:INFO:Importing untrained model
2024-03-02 13:31:07,307:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 13:31:07,307:INFO:Starting cross validation
2024-03-02 13:31:07,309:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:07,533:INFO:Calculating mean and std
2024-03-02 13:31:07,533:INFO:Creating metrics dataframe
2024-03-02 13:31:07,535:INFO:Uploading results into container
2024-03-02 13:31:07,535:INFO:Uploading model into container now
2024-03-02 13:31:07,536:INFO:_master_model_container: 6
2024-03-02 13:31:07,536:INFO:_display_container: 2
2024-03-02 13:31:07,536:INFO:LassoLars(random_state=3330)
2024-03-02 13:31:07,536:INFO:create_model() successfully completed......................................
2024-03-02 13:31:07,617:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:07,617:INFO:Creating metrics dataframe
2024-03-02 13:31:07,619:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 13:31:07,619:INFO:Total runtime is 0.09657180309295654 minutes
2024-03-02 13:31:07,620:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:07,620:INFO:Initializing create_model()
2024-03-02 13:31:07,620:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:07,620:INFO:Checking exceptions
2024-03-02 13:31:07,620:INFO:Importing libraries
2024-03-02 13:31:07,620:INFO:Copying training dataset
2024-03-02 13:31:07,625:INFO:Defining folds
2024-03-02 13:31:07,625:INFO:Declaring metric variables
2024-03-02 13:31:07,625:INFO:Importing untrained model
2024-03-02 13:31:07,625:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 13:31:07,625:INFO:Starting cross validation
2024-03-02 13:31:07,627:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:07,849:INFO:Calculating mean and std
2024-03-02 13:31:07,850:INFO:Creating metrics dataframe
2024-03-02 13:31:07,851:INFO:Uploading results into container
2024-03-02 13:31:07,852:INFO:Uploading model into container now
2024-03-02 13:31:07,852:INFO:_master_model_container: 7
2024-03-02 13:31:07,852:INFO:_display_container: 2
2024-03-02 13:31:07,852:INFO:OrthogonalMatchingPursuit()
2024-03-02 13:31:07,852:INFO:create_model() successfully completed......................................
2024-03-02 13:31:07,932:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:07,932:INFO:Creating metrics dataframe
2024-03-02 13:31:07,934:INFO:Initializing Bayesian Ridge
2024-03-02 13:31:07,934:INFO:Total runtime is 0.10183337926864625 minutes
2024-03-02 13:31:07,934:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:07,934:INFO:Initializing create_model()
2024-03-02 13:31:07,935:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:07,935:INFO:Checking exceptions
2024-03-02 13:31:07,935:INFO:Importing libraries
2024-03-02 13:31:07,935:INFO:Copying training dataset
2024-03-02 13:31:07,938:INFO:Defining folds
2024-03-02 13:31:07,938:INFO:Declaring metric variables
2024-03-02 13:31:07,938:INFO:Importing untrained model
2024-03-02 13:31:07,938:INFO:Bayesian Ridge Imported successfully
2024-03-02 13:31:07,938:INFO:Starting cross validation
2024-03-02 13:31:07,940:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:08,167:INFO:Calculating mean and std
2024-03-02 13:31:08,168:INFO:Creating metrics dataframe
2024-03-02 13:31:08,169:INFO:Uploading results into container
2024-03-02 13:31:08,170:INFO:Uploading model into container now
2024-03-02 13:31:08,170:INFO:_master_model_container: 8
2024-03-02 13:31:08,170:INFO:_display_container: 2
2024-03-02 13:31:08,170:INFO:BayesianRidge()
2024-03-02 13:31:08,170:INFO:create_model() successfully completed......................................
2024-03-02 13:31:08,250:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:08,250:INFO:Creating metrics dataframe
2024-03-02 13:31:08,252:INFO:Initializing Passive Aggressive Regressor
2024-03-02 13:31:08,252:INFO:Total runtime is 0.10712367296218872 minutes
2024-03-02 13:31:08,252:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:08,252:INFO:Initializing create_model()
2024-03-02 13:31:08,252:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:08,252:INFO:Checking exceptions
2024-03-02 13:31:08,252:INFO:Importing libraries
2024-03-02 13:31:08,252:INFO:Copying training dataset
2024-03-02 13:31:08,255:INFO:Defining folds
2024-03-02 13:31:08,255:INFO:Declaring metric variables
2024-03-02 13:31:08,255:INFO:Importing untrained model
2024-03-02 13:31:08,256:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 13:31:08,256:INFO:Starting cross validation
2024-03-02 13:31:08,257:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:08,486:INFO:Calculating mean and std
2024-03-02 13:31:08,487:INFO:Creating metrics dataframe
2024-03-02 13:31:08,488:INFO:Uploading results into container
2024-03-02 13:31:08,488:INFO:Uploading model into container now
2024-03-02 13:31:08,489:INFO:_master_model_container: 9
2024-03-02 13:31:08,489:INFO:_display_container: 2
2024-03-02 13:31:08,489:INFO:PassiveAggressiveRegressor(random_state=3330)
2024-03-02 13:31:08,489:INFO:create_model() successfully completed......................................
2024-03-02 13:31:08,568:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:08,568:INFO:Creating metrics dataframe
2024-03-02 13:31:08,570:INFO:Initializing Huber Regressor
2024-03-02 13:31:08,570:INFO:Total runtime is 0.11243227322896322 minutes
2024-03-02 13:31:08,571:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:08,571:INFO:Initializing create_model()
2024-03-02 13:31:08,571:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:08,571:INFO:Checking exceptions
2024-03-02 13:31:08,571:INFO:Importing libraries
2024-03-02 13:31:08,571:INFO:Copying training dataset
2024-03-02 13:31:08,574:INFO:Defining folds
2024-03-02 13:31:08,574:INFO:Declaring metric variables
2024-03-02 13:31:08,574:INFO:Importing untrained model
2024-03-02 13:31:08,574:INFO:Huber Regressor Imported successfully
2024-03-02 13:31:08,574:INFO:Starting cross validation
2024-03-02 13:31:08,576:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:08,820:INFO:Calculating mean and std
2024-03-02 13:31:08,820:INFO:Creating metrics dataframe
2024-03-02 13:31:08,822:INFO:Uploading results into container
2024-03-02 13:31:08,822:INFO:Uploading model into container now
2024-03-02 13:31:08,823:INFO:_master_model_container: 10
2024-03-02 13:31:08,823:INFO:_display_container: 2
2024-03-02 13:31:08,823:INFO:HuberRegressor()
2024-03-02 13:31:08,823:INFO:create_model() successfully completed......................................
2024-03-02 13:31:08,909:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:08,910:INFO:Creating metrics dataframe
2024-03-02 13:31:08,911:INFO:Initializing K Neighbors Regressor
2024-03-02 13:31:08,912:INFO:Total runtime is 0.1181233565012614 minutes
2024-03-02 13:31:08,912:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:08,912:INFO:Initializing create_model()
2024-03-02 13:31:08,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:08,912:INFO:Checking exceptions
2024-03-02 13:31:08,912:INFO:Importing libraries
2024-03-02 13:31:08,912:INFO:Copying training dataset
2024-03-02 13:31:08,915:INFO:Defining folds
2024-03-02 13:31:08,915:INFO:Declaring metric variables
2024-03-02 13:31:08,915:INFO:Importing untrained model
2024-03-02 13:31:08,915:INFO:K Neighbors Regressor Imported successfully
2024-03-02 13:31:08,916:INFO:Starting cross validation
2024-03-02 13:31:08,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:09,244:INFO:Calculating mean and std
2024-03-02 13:31:09,248:INFO:Creating metrics dataframe
2024-03-02 13:31:09,250:INFO:Uploading results into container
2024-03-02 13:31:09,250:INFO:Uploading model into container now
2024-03-02 13:31:09,250:INFO:_master_model_container: 11
2024-03-02 13:31:09,250:INFO:_display_container: 2
2024-03-02 13:31:09,250:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 13:31:09,250:INFO:create_model() successfully completed......................................
2024-03-02 13:31:09,331:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:09,331:INFO:Creating metrics dataframe
2024-03-02 13:31:09,333:INFO:Initializing Decision Tree Regressor
2024-03-02 13:31:09,333:INFO:Total runtime is 0.1251452922821045 minutes
2024-03-02 13:31:09,334:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:09,334:INFO:Initializing create_model()
2024-03-02 13:31:09,334:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:09,334:INFO:Checking exceptions
2024-03-02 13:31:09,334:INFO:Importing libraries
2024-03-02 13:31:09,334:INFO:Copying training dataset
2024-03-02 13:31:09,337:INFO:Defining folds
2024-03-02 13:31:09,337:INFO:Declaring metric variables
2024-03-02 13:31:09,337:INFO:Importing untrained model
2024-03-02 13:31:09,337:INFO:Decision Tree Regressor Imported successfully
2024-03-02 13:31:09,337:INFO:Starting cross validation
2024-03-02 13:31:09,339:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:09,577:INFO:Calculating mean and std
2024-03-02 13:31:09,578:INFO:Creating metrics dataframe
2024-03-02 13:31:09,579:INFO:Uploading results into container
2024-03-02 13:31:09,579:INFO:Uploading model into container now
2024-03-02 13:31:09,580:INFO:_master_model_container: 12
2024-03-02 13:31:09,580:INFO:_display_container: 2
2024-03-02 13:31:09,580:INFO:DecisionTreeRegressor(random_state=3330)
2024-03-02 13:31:09,580:INFO:create_model() successfully completed......................................
2024-03-02 13:31:09,661:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:09,661:INFO:Creating metrics dataframe
2024-03-02 13:31:09,663:INFO:Initializing Random Forest Regressor
2024-03-02 13:31:09,663:INFO:Total runtime is 0.1306527853012085 minutes
2024-03-02 13:31:09,663:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:09,663:INFO:Initializing create_model()
2024-03-02 13:31:09,663:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:09,663:INFO:Checking exceptions
2024-03-02 13:31:09,663:INFO:Importing libraries
2024-03-02 13:31:09,663:INFO:Copying training dataset
2024-03-02 13:31:09,666:INFO:Defining folds
2024-03-02 13:31:09,667:INFO:Declaring metric variables
2024-03-02 13:31:09,667:INFO:Importing untrained model
2024-03-02 13:31:09,667:INFO:Random Forest Regressor Imported successfully
2024-03-02 13:31:09,667:INFO:Starting cross validation
2024-03-02 13:31:09,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:11,136:INFO:Calculating mean and std
2024-03-02 13:31:11,137:INFO:Creating metrics dataframe
2024-03-02 13:31:11,139:INFO:Uploading results into container
2024-03-02 13:31:11,139:INFO:Uploading model into container now
2024-03-02 13:31:11,139:INFO:_master_model_container: 13
2024-03-02 13:31:11,140:INFO:_display_container: 2
2024-03-02 13:31:11,140:INFO:RandomForestRegressor(n_jobs=-1, random_state=3330)
2024-03-02 13:31:11,140:INFO:create_model() successfully completed......................................
2024-03-02 13:31:11,225:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:11,225:INFO:Creating metrics dataframe
2024-03-02 13:31:11,227:INFO:Initializing Extra Trees Regressor
2024-03-02 13:31:11,227:INFO:Total runtime is 0.15671510299046834 minutes
2024-03-02 13:31:11,227:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:11,227:INFO:Initializing create_model()
2024-03-02 13:31:11,227:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:11,227:INFO:Checking exceptions
2024-03-02 13:31:11,227:INFO:Importing libraries
2024-03-02 13:31:11,227:INFO:Copying training dataset
2024-03-02 13:31:11,230:INFO:Defining folds
2024-03-02 13:31:11,230:INFO:Declaring metric variables
2024-03-02 13:31:11,230:INFO:Importing untrained model
2024-03-02 13:31:11,231:INFO:Extra Trees Regressor Imported successfully
2024-03-02 13:31:11,231:INFO:Starting cross validation
2024-03-02 13:31:11,232:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:12,084:INFO:Calculating mean and std
2024-03-02 13:31:12,085:INFO:Creating metrics dataframe
2024-03-02 13:31:12,086:INFO:Uploading results into container
2024-03-02 13:31:12,086:INFO:Uploading model into container now
2024-03-02 13:31:12,087:INFO:_master_model_container: 14
2024-03-02 13:31:12,087:INFO:_display_container: 2
2024-03-02 13:31:12,087:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3330)
2024-03-02 13:31:12,087:INFO:create_model() successfully completed......................................
2024-03-02 13:31:12,168:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:12,168:INFO:Creating metrics dataframe
2024-03-02 13:31:12,170:INFO:Initializing AdaBoost Regressor
2024-03-02 13:31:12,170:INFO:Total runtime is 0.17243792613347372 minutes
2024-03-02 13:31:12,170:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:12,170:INFO:Initializing create_model()
2024-03-02 13:31:12,170:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:12,170:INFO:Checking exceptions
2024-03-02 13:31:12,170:INFO:Importing libraries
2024-03-02 13:31:12,170:INFO:Copying training dataset
2024-03-02 13:31:12,174:INFO:Defining folds
2024-03-02 13:31:12,174:INFO:Declaring metric variables
2024-03-02 13:31:12,174:INFO:Importing untrained model
2024-03-02 13:31:12,174:INFO:AdaBoost Regressor Imported successfully
2024-03-02 13:31:12,174:INFO:Starting cross validation
2024-03-02 13:31:12,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:12,625:INFO:Calculating mean and std
2024-03-02 13:31:12,626:INFO:Creating metrics dataframe
2024-03-02 13:31:12,627:INFO:Uploading results into container
2024-03-02 13:31:12,628:INFO:Uploading model into container now
2024-03-02 13:31:12,628:INFO:_master_model_container: 15
2024-03-02 13:31:12,628:INFO:_display_container: 2
2024-03-02 13:31:12,628:INFO:AdaBoostRegressor(random_state=3330)
2024-03-02 13:31:12,628:INFO:create_model() successfully completed......................................
2024-03-02 13:31:12,709:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:12,709:INFO:Creating metrics dataframe
2024-03-02 13:31:12,711:INFO:Initializing Gradient Boosting Regressor
2024-03-02 13:31:12,711:INFO:Total runtime is 0.18144384622573853 minutes
2024-03-02 13:31:12,711:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:12,711:INFO:Initializing create_model()
2024-03-02 13:31:12,712:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:12,712:INFO:Checking exceptions
2024-03-02 13:31:12,712:INFO:Importing libraries
2024-03-02 13:31:12,712:INFO:Copying training dataset
2024-03-02 13:31:12,715:INFO:Defining folds
2024-03-02 13:31:12,715:INFO:Declaring metric variables
2024-03-02 13:31:12,715:INFO:Importing untrained model
2024-03-02 13:31:12,715:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 13:31:12,716:INFO:Starting cross validation
2024-03-02 13:31:12,717:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:13,463:INFO:Calculating mean and std
2024-03-02 13:31:13,464:INFO:Creating metrics dataframe
2024-03-02 13:31:13,465:INFO:Uploading results into container
2024-03-02 13:31:13,466:INFO:Uploading model into container now
2024-03-02 13:31:13,466:INFO:_master_model_container: 16
2024-03-02 13:31:13,466:INFO:_display_container: 2
2024-03-02 13:31:13,466:INFO:GradientBoostingRegressor(random_state=3330)
2024-03-02 13:31:13,466:INFO:create_model() successfully completed......................................
2024-03-02 13:31:13,548:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:13,548:INFO:Creating metrics dataframe
2024-03-02 13:31:13,550:INFO:Initializing Extreme Gradient Boosting
2024-03-02 13:31:13,550:INFO:Total runtime is 0.19542158444722493 minutes
2024-03-02 13:31:13,550:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:13,550:INFO:Initializing create_model()
2024-03-02 13:31:13,550:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:13,550:INFO:Checking exceptions
2024-03-02 13:31:13,550:INFO:Importing libraries
2024-03-02 13:31:13,550:INFO:Copying training dataset
2024-03-02 13:31:13,553:INFO:Defining folds
2024-03-02 13:31:13,553:INFO:Declaring metric variables
2024-03-02 13:31:13,554:INFO:Importing untrained model
2024-03-02 13:31:13,554:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 13:31:13,554:INFO:Starting cross validation
2024-03-02 13:31:13,555:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:14,034:INFO:Calculating mean and std
2024-03-02 13:31:14,035:INFO:Creating metrics dataframe
2024-03-02 13:31:14,036:INFO:Uploading results into container
2024-03-02 13:31:14,036:INFO:Uploading model into container now
2024-03-02 13:31:14,037:INFO:_master_model_container: 17
2024-03-02 13:31:14,037:INFO:_display_container: 2
2024-03-02 13:31:14,037:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=3330, ...)
2024-03-02 13:31:14,037:INFO:create_model() successfully completed......................................
2024-03-02 13:31:14,119:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:14,119:INFO:Creating metrics dataframe
2024-03-02 13:31:14,121:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 13:31:14,121:INFO:Total runtime is 0.20494631926218668 minutes
2024-03-02 13:31:14,121:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:14,121:INFO:Initializing create_model()
2024-03-02 13:31:14,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:14,121:INFO:Checking exceptions
2024-03-02 13:31:14,121:INFO:Importing libraries
2024-03-02 13:31:14,121:INFO:Copying training dataset
2024-03-02 13:31:14,124:INFO:Defining folds
2024-03-02 13:31:14,124:INFO:Declaring metric variables
2024-03-02 13:31:14,124:INFO:Importing untrained model
2024-03-02 13:31:14,125:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 13:31:14,125:INFO:Starting cross validation
2024-03-02 13:31:14,126:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:15,132:INFO:Calculating mean and std
2024-03-02 13:31:15,133:INFO:Creating metrics dataframe
2024-03-02 13:31:15,135:INFO:Uploading results into container
2024-03-02 13:31:15,135:INFO:Uploading model into container now
2024-03-02 13:31:15,136:INFO:_master_model_container: 18
2024-03-02 13:31:15,136:INFO:_display_container: 2
2024-03-02 13:31:15,136:INFO:LGBMRegressor(n_jobs=-1, random_state=3330)
2024-03-02 13:31:15,136:INFO:create_model() successfully completed......................................
2024-03-02 13:31:15,234:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:15,234:INFO:Creating metrics dataframe
2024-03-02 13:31:15,237:INFO:Initializing Dummy Regressor
2024-03-02 13:31:15,237:INFO:Total runtime is 0.22354076703389486 minutes
2024-03-02 13:31:15,237:INFO:SubProcess create_model() called ==================================
2024-03-02 13:31:15,237:INFO:Initializing create_model()
2024-03-02 13:31:15,237:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023617E60A00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:15,237:INFO:Checking exceptions
2024-03-02 13:31:15,237:INFO:Importing libraries
2024-03-02 13:31:15,237:INFO:Copying training dataset
2024-03-02 13:31:15,241:INFO:Defining folds
2024-03-02 13:31:15,241:INFO:Declaring metric variables
2024-03-02 13:31:15,241:INFO:Importing untrained model
2024-03-02 13:31:15,241:INFO:Dummy Regressor Imported successfully
2024-03-02 13:31:15,241:INFO:Starting cross validation
2024-03-02 13:31:15,243:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:31:15,479:INFO:Calculating mean and std
2024-03-02 13:31:15,480:INFO:Creating metrics dataframe
2024-03-02 13:31:15,481:INFO:Uploading results into container
2024-03-02 13:31:15,482:INFO:Uploading model into container now
2024-03-02 13:31:15,482:INFO:_master_model_container: 19
2024-03-02 13:31:15,482:INFO:_display_container: 2
2024-03-02 13:31:15,482:INFO:DummyRegressor()
2024-03-02 13:31:15,482:INFO:create_model() successfully completed......................................
2024-03-02 13:31:15,564:INFO:SubProcess create_model() end ==================================
2024-03-02 13:31:15,564:INFO:Creating metrics dataframe
2024-03-02 13:31:15,568:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 13:31:15,569:INFO:Initializing create_model()
2024-03-02 13:31:15,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023615468E80>, estimator=ElasticNet(random_state=3330), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:31:15,569:INFO:Checking exceptions
2024-03-02 13:31:15,569:INFO:Importing libraries
2024-03-02 13:31:15,570:INFO:Copying training dataset
2024-03-02 13:31:15,573:INFO:Defining folds
2024-03-02 13:31:15,573:INFO:Declaring metric variables
2024-03-02 13:31:15,573:INFO:Importing untrained model
2024-03-02 13:31:15,573:INFO:Declaring custom model
2024-03-02 13:31:15,573:INFO:Elastic Net Imported successfully
2024-03-02 13:31:15,574:INFO:Cross validation set to False
2024-03-02 13:31:15,574:INFO:Fitting Model
2024-03-02 13:31:15,650:INFO:ElasticNet(random_state=3330)
2024-03-02 13:31:15,650:INFO:create_model() successfully completed......................................
2024-03-02 13:31:15,743:INFO:_master_model_container: 19
2024-03-02 13:31:15,743:INFO:_display_container: 2
2024-03-02 13:31:15,743:INFO:ElasticNet(random_state=3330)
2024-03-02 13:31:15,743:INFO:compare_models() successfully completed......................................
2024-03-02 13:34:00,199:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:34:00,199:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:34:00,199:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:34:00,199:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:35:51,166:WARNING:D:\HackNITR\automata\polls\views.py:34: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 13:35:51,203:WARNING:D:\HackNITR\automata\polls\views.py:36: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 13:35:51,209:INFO:PyCaret RegressionExperiment
2024-03-02 13:35:51,209:INFO:Logging name: reg-default-name
2024-03-02 13:35:51,209:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 13:35:51,209:INFO:version 3.3.0
2024-03-02 13:35:51,209:INFO:Initializing setup()
2024-03-02 13:35:51,209:INFO:self.USI: 6cb8
2024-03-02 13:35:51,209:INFO:self._variable_keys: {'y_train', 'gpu_n_jobs_param', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'exp_name_log', 'X', 'y_test', 'X_test', 'fold_generator', 'y', 'X_train', 'USI', 'pipeline', 'html_param', 'exp_id', 'memory', 'seed', 'n_jobs_param', 'target_param', '_available_plots', 'data', 'transform_target_param', 'gpu_param', 'log_plots_param', '_ml_usecase', 'idx'}
2024-03-02 13:35:51,209:INFO:Checking environment
2024-03-02 13:35:51,209:INFO:python_version: 3.9.0
2024-03-02 13:35:51,210:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 13:35:51,210:INFO:machine: AMD64
2024-03-02 13:35:51,210:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 13:35:51,217:INFO:Memory: svmem(total=16476958720, available=4259561472, percent=74.1, used=12217397248, free=4259561472)
2024-03-02 13:35:51,217:INFO:Physical Core: 8
2024-03-02 13:35:51,217:INFO:Logical Core: 16
2024-03-02 13:35:51,217:INFO:Checking libraries
2024-03-02 13:35:51,217:INFO:System:
2024-03-02 13:35:51,217:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 13:35:51,217:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 13:35:51,217:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 13:35:51,217:INFO:PyCaret required dependencies:
2024-03-02 13:35:51,262:INFO:                 pip: 23.3.2
2024-03-02 13:35:51,262:INFO:          setuptools: 49.2.1
2024-03-02 13:35:51,263:INFO:             pycaret: 3.3.0
2024-03-02 13:35:51,263:INFO:             IPython: 8.18.1
2024-03-02 13:35:51,263:INFO:          ipywidgets: 8.1.2
2024-03-02 13:35:51,263:INFO:                tqdm: 4.66.1
2024-03-02 13:35:51,263:INFO:               numpy: 1.25.2
2024-03-02 13:35:51,263:INFO:              pandas: 2.1.1
2024-03-02 13:35:51,263:INFO:              jinja2: 3.1.2
2024-03-02 13:35:51,263:INFO:               scipy: 1.11.4
2024-03-02 13:35:51,263:INFO:              joblib: 1.3.2
2024-03-02 13:35:51,263:INFO:             sklearn: 1.4.1.post1
2024-03-02 13:35:51,263:INFO:                pyod: 1.1.3
2024-03-02 13:35:51,263:INFO:            imblearn: 0.12.0
2024-03-02 13:35:51,263:INFO:   category_encoders: 2.6.3
2024-03-02 13:35:51,263:INFO:            lightgbm: 4.3.0
2024-03-02 13:35:51,263:INFO:               numba: 0.58.1
2024-03-02 13:35:51,263:INFO:            requests: 2.31.0
2024-03-02 13:35:51,263:INFO:          matplotlib: 3.7.5
2024-03-02 13:35:51,263:INFO:          scikitplot: 0.3.7
2024-03-02 13:35:51,263:INFO:         yellowbrick: 1.5
2024-03-02 13:35:51,263:INFO:              plotly: 5.19.0
2024-03-02 13:35:51,263:INFO:    plotly-resampler: Not installed
2024-03-02 13:35:51,263:INFO:             kaleido: 0.2.1
2024-03-02 13:35:51,263:INFO:           schemdraw: 0.15
2024-03-02 13:35:51,263:INFO:         statsmodels: 0.14.1
2024-03-02 13:35:51,263:INFO:              sktime: 0.27.0
2024-03-02 13:35:51,263:INFO:               tbats: 1.1.3
2024-03-02 13:35:51,263:INFO:            pmdarima: 2.0.4
2024-03-02 13:35:51,263:INFO:              psutil: 5.9.8
2024-03-02 13:35:51,263:INFO:          markupsafe: 2.1.3
2024-03-02 13:35:51,263:INFO:             pickle5: Not installed
2024-03-02 13:35:51,263:INFO:         cloudpickle: 3.0.0
2024-03-02 13:35:51,263:INFO:         deprecation: 2.1.0
2024-03-02 13:35:51,263:INFO:              xxhash: 3.4.1
2024-03-02 13:35:51,263:INFO:           wurlitzer: Not installed
2024-03-02 13:35:51,263:INFO:PyCaret optional dependencies:
2024-03-02 13:35:51,285:INFO:                shap: 0.44.1
2024-03-02 13:35:51,285:INFO:           interpret: Not installed
2024-03-02 13:35:51,285:INFO:                umap: Not installed
2024-03-02 13:35:51,285:INFO:     ydata_profiling: 4.6.5
2024-03-02 13:35:51,285:INFO:  explainerdashboard: 0.4.5
2024-03-02 13:35:51,285:INFO:             autoviz: Not installed
2024-03-02 13:35:51,285:INFO:           fairlearn: Not installed
2024-03-02 13:35:51,285:INFO:          deepchecks: Not installed
2024-03-02 13:35:51,285:INFO:             xgboost: 2.0.3
2024-03-02 13:35:51,285:INFO:            catboost: Not installed
2024-03-02 13:35:51,285:INFO:              kmodes: Not installed
2024-03-02 13:35:51,285:INFO:             mlxtend: Not installed
2024-03-02 13:35:51,285:INFO:       statsforecast: Not installed
2024-03-02 13:35:51,285:INFO:        tune_sklearn: Not installed
2024-03-02 13:35:51,285:INFO:                 ray: Not installed
2024-03-02 13:35:51,285:INFO:            hyperopt: Not installed
2024-03-02 13:35:51,285:INFO:              optuna: Not installed
2024-03-02 13:35:51,285:INFO:               skopt: Not installed
2024-03-02 13:35:51,285:INFO:              mlflow: Not installed
2024-03-02 13:35:51,285:INFO:              gradio: Not installed
2024-03-02 13:35:51,285:INFO:             fastapi: Not installed
2024-03-02 13:35:51,285:INFO:             uvicorn: Not installed
2024-03-02 13:35:51,285:INFO:              m2cgen: Not installed
2024-03-02 13:35:51,285:INFO:           evidently: Not installed
2024-03-02 13:35:51,285:INFO:               fugue: Not installed
2024-03-02 13:35:51,285:INFO:           streamlit: 1.27.2
2024-03-02 13:35:51,285:INFO:             prophet: Not installed
2024-03-02 13:35:51,285:INFO:None
2024-03-02 13:35:51,286:INFO:Set up data.
2024-03-02 13:35:51,301:INFO:Set up folding strategy.
2024-03-02 13:35:51,301:INFO:Set up train/test split.
2024-03-02 13:35:51,308:INFO:Set up index.
2024-03-02 13:35:51,309:INFO:Assigning column types.
2024-03-02 13:35:51,311:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 13:35:51,311:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,315:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,318:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,368:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,402:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,403:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:51,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:51,406:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,409:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,413:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,457:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,492:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,492:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:51,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:51,495:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 13:35:51,499:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,502:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,547:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,581:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,582:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:51,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:51,587:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,591:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,639:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,673:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,674:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:51,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:51,676:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 13:35:51,683:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,728:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,762:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,762:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:51,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:51,772:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,816:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,851:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:51,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:51,853:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 13:35:51,906:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:35:51,941:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:51,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:51,995:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:35:52,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 13:35:52,030:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:52,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:52,032:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 13:35:52,085:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:35:52,120:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:52,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:52,174:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 13:35:52,209:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:52,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:52,211:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 13:35:52,298:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:52,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:52,389:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:52,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:52,393:INFO:Preparing preprocessing pipeline...
2024-03-02 13:35:52,394:INFO:Set up simple imputation.
2024-03-02 13:35:52,397:INFO:Set up encoding of categorical features.
2024-03-02 13:35:52,398:INFO:Set up column name cleaning.
2024-03-02 13:35:52,571:INFO:Finished creating preprocessing pipeline.
2024-03-02 13:35:52,579:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Market Cap', 'IPO Year',
                                             'Volume'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country', 'Sector',
                                             'Industry'],
                                    transformer=SimpleImputer(strategy=...
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['Symbol', 'Name', 'Last Sale',
                                             '% Change', 'Country',
                                             'Industry'],
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2024-03-02 13:35:52,579:INFO:Creating final display dataframe.
2024-03-02 13:35:53,015:INFO:Setup _display_container:                     Description             Value
0                    Session id              8360
1                        Target        Net Change
2                   Target type        Regression
3           Original data shape        (3794, 11)
4        Transformed data shape        (3794, 22)
5   Transformed train set shape        (2655, 22)
6    Transformed test set shape        (1139, 22)
7              Numeric features                 3
8          Categorical features                 7
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              6cb8
2024-03-02 13:35:53,107:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:53,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:53,196:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 13:35:53,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 13:35:53,199:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 13:35:53,199:INFO:setup() successfully completed in 1.99s...............
2024-03-02 13:35:53,199:INFO:Initializing compare_models()
2024-03-02 13:35:53,199:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-03-02 13:35:53,199:INFO:Checking exceptions
2024-03-02 13:35:53,201:INFO:Preparing display monitor
2024-03-02 13:35:53,204:INFO:Time budget is 1 minutes
2024-03-02 13:35:53,204:INFO:Initializing Linear Regression
2024-03-02 13:35:53,204:INFO:Total runtime is 0.0 minutes
2024-03-02 13:35:53,204:INFO:SubProcess create_model() called ==================================
2024-03-02 13:35:53,204:INFO:Initializing create_model()
2024-03-02 13:35:53,205:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:35:53,205:INFO:Checking exceptions
2024-03-02 13:35:53,205:INFO:Importing libraries
2024-03-02 13:35:53,205:INFO:Copying training dataset
2024-03-02 13:35:53,209:INFO:Defining folds
2024-03-02 13:35:53,209:INFO:Declaring metric variables
2024-03-02 13:35:53,209:INFO:Importing untrained model
2024-03-02 13:35:53,209:INFO:Linear Regression Imported successfully
2024-03-02 13:35:53,209:INFO:Starting cross validation
2024-03-02 13:35:53,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:35:55,724:INFO:Calculating mean and std
2024-03-02 13:35:55,725:INFO:Creating metrics dataframe
2024-03-02 13:35:55,727:INFO:Uploading results into container
2024-03-02 13:35:55,728:INFO:Uploading model into container now
2024-03-02 13:35:55,728:INFO:_master_model_container: 1
2024-03-02 13:35:55,728:INFO:_display_container: 2
2024-03-02 13:35:55,728:INFO:LinearRegression(n_jobs=-1)
2024-03-02 13:35:55,728:INFO:create_model() successfully completed......................................
2024-03-02 13:35:55,820:INFO:SubProcess create_model() end ==================================
2024-03-02 13:35:55,820:INFO:Creating metrics dataframe
2024-03-02 13:35:55,822:INFO:Initializing Lasso Regression
2024-03-02 13:35:55,822:INFO:Total runtime is 0.043633532524108884 minutes
2024-03-02 13:35:55,822:INFO:SubProcess create_model() called ==================================
2024-03-02 13:35:55,822:INFO:Initializing create_model()
2024-03-02 13:35:55,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:35:55,822:INFO:Checking exceptions
2024-03-02 13:35:55,822:INFO:Importing libraries
2024-03-02 13:35:55,822:INFO:Copying training dataset
2024-03-02 13:35:55,825:INFO:Defining folds
2024-03-02 13:35:55,826:INFO:Declaring metric variables
2024-03-02 13:35:55,826:INFO:Importing untrained model
2024-03-02 13:35:55,826:INFO:Lasso Regression Imported successfully
2024-03-02 13:35:55,826:INFO:Starting cross validation
2024-03-02 13:35:55,828:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:35:57,686:INFO:Calculating mean and std
2024-03-02 13:35:57,687:INFO:Creating metrics dataframe
2024-03-02 13:35:57,689:INFO:Uploading results into container
2024-03-02 13:35:57,690:INFO:Uploading model into container now
2024-03-02 13:35:57,690:INFO:_master_model_container: 2
2024-03-02 13:35:57,690:INFO:_display_container: 2
2024-03-02 13:35:57,691:INFO:Lasso(random_state=8360)
2024-03-02 13:35:57,691:INFO:create_model() successfully completed......................................
2024-03-02 13:35:57,778:INFO:SubProcess create_model() end ==================================
2024-03-02 13:35:57,778:INFO:Creating metrics dataframe
2024-03-02 13:35:57,780:INFO:Initializing Ridge Regression
2024-03-02 13:35:57,781:INFO:Total runtime is 0.0762755552927653 minutes
2024-03-02 13:35:57,781:INFO:SubProcess create_model() called ==================================
2024-03-02 13:35:57,781:INFO:Initializing create_model()
2024-03-02 13:35:57,781:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:35:57,781:INFO:Checking exceptions
2024-03-02 13:35:57,781:INFO:Importing libraries
2024-03-02 13:35:57,781:INFO:Copying training dataset
2024-03-02 13:35:57,784:INFO:Defining folds
2024-03-02 13:35:57,784:INFO:Declaring metric variables
2024-03-02 13:35:57,784:INFO:Importing untrained model
2024-03-02 13:35:57,784:INFO:Ridge Regression Imported successfully
2024-03-02 13:35:57,784:INFO:Starting cross validation
2024-03-02 13:35:57,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:35:57,923:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.38645e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:35:57,933:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=7.85427e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:35:57,948:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.08105e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:35:57,948:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.19377e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:35:57,950:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.1215e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:35:57,952:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.02751e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:35:57,960:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.09168e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:35:57,973:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.5575e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:35:57,980:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=6.13708e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:35:57,989:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=8.01809e-26): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 13:35:58,020:INFO:Calculating mean and std
2024-03-02 13:35:58,021:INFO:Creating metrics dataframe
2024-03-02 13:35:58,023:INFO:Uploading results into container
2024-03-02 13:35:58,023:INFO:Uploading model into container now
2024-03-02 13:35:58,023:INFO:_master_model_container: 3
2024-03-02 13:35:58,023:INFO:_display_container: 2
2024-03-02 13:35:58,024:INFO:Ridge(random_state=8360)
2024-03-02 13:35:58,024:INFO:create_model() successfully completed......................................
2024-03-02 13:35:58,106:INFO:SubProcess create_model() end ==================================
2024-03-02 13:35:58,106:INFO:Creating metrics dataframe
2024-03-02 13:35:58,108:INFO:Initializing Elastic Net
2024-03-02 13:35:58,108:INFO:Total runtime is 0.08172723849614462 minutes
2024-03-02 13:35:58,108:INFO:SubProcess create_model() called ==================================
2024-03-02 13:35:58,108:INFO:Initializing create_model()
2024-03-02 13:35:58,108:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:35:58,108:INFO:Checking exceptions
2024-03-02 13:35:58,108:INFO:Importing libraries
2024-03-02 13:35:58,108:INFO:Copying training dataset
2024-03-02 13:35:58,111:INFO:Defining folds
2024-03-02 13:35:58,111:INFO:Declaring metric variables
2024-03-02 13:35:58,112:INFO:Importing untrained model
2024-03-02 13:35:58,112:INFO:Elastic Net Imported successfully
2024-03-02 13:35:58,112:INFO:Starting cross validation
2024-03-02 13:35:58,113:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:35:58,338:INFO:Calculating mean and std
2024-03-02 13:35:58,339:INFO:Creating metrics dataframe
2024-03-02 13:35:58,340:INFO:Uploading results into container
2024-03-02 13:35:58,340:INFO:Uploading model into container now
2024-03-02 13:35:58,341:INFO:_master_model_container: 4
2024-03-02 13:35:58,341:INFO:_display_container: 2
2024-03-02 13:35:58,341:INFO:ElasticNet(random_state=8360)
2024-03-02 13:35:58,341:INFO:create_model() successfully completed......................................
2024-03-02 13:35:58,422:INFO:SubProcess create_model() end ==================================
2024-03-02 13:35:58,422:INFO:Creating metrics dataframe
2024-03-02 13:35:58,424:INFO:Initializing Least Angle Regression
2024-03-02 13:35:58,424:INFO:Total runtime is 0.08699818054835003 minutes
2024-03-02 13:35:58,424:INFO:SubProcess create_model() called ==================================
2024-03-02 13:35:58,424:INFO:Initializing create_model()
2024-03-02 13:35:58,424:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:35:58,424:INFO:Checking exceptions
2024-03-02 13:35:58,424:INFO:Importing libraries
2024-03-02 13:35:58,424:INFO:Copying training dataset
2024-03-02 13:35:58,427:INFO:Defining folds
2024-03-02 13:35:58,427:INFO:Declaring metric variables
2024-03-02 13:35:58,427:INFO:Importing untrained model
2024-03-02 13:35:58,428:INFO:Least Angle Regression Imported successfully
2024-03-02 13:35:58,428:INFO:Starting cross validation
2024-03-02 13:35:58,429:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:35:58,657:INFO:Calculating mean and std
2024-03-02 13:35:58,658:INFO:Creating metrics dataframe
2024-03-02 13:35:58,659:INFO:Uploading results into container
2024-03-02 13:35:58,659:INFO:Uploading model into container now
2024-03-02 13:35:58,660:INFO:_master_model_container: 5
2024-03-02 13:35:58,660:INFO:_display_container: 2
2024-03-02 13:35:58,660:INFO:Lars(random_state=8360)
2024-03-02 13:35:58,660:INFO:create_model() successfully completed......................................
2024-03-02 13:35:58,743:INFO:SubProcess create_model() end ==================================
2024-03-02 13:35:58,743:INFO:Creating metrics dataframe
2024-03-02 13:35:58,745:INFO:Initializing Lasso Least Angle Regression
2024-03-02 13:35:58,745:INFO:Total runtime is 0.0923487941424052 minutes
2024-03-02 13:35:58,746:INFO:SubProcess create_model() called ==================================
2024-03-02 13:35:58,746:INFO:Initializing create_model()
2024-03-02 13:35:58,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:35:58,746:INFO:Checking exceptions
2024-03-02 13:35:58,746:INFO:Importing libraries
2024-03-02 13:35:58,746:INFO:Copying training dataset
2024-03-02 13:35:58,750:INFO:Defining folds
2024-03-02 13:35:58,751:INFO:Declaring metric variables
2024-03-02 13:35:58,751:INFO:Importing untrained model
2024-03-02 13:35:58,751:INFO:Lasso Least Angle Regression Imported successfully
2024-03-02 13:35:58,751:INFO:Starting cross validation
2024-03-02 13:35:58,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:35:58,991:INFO:Calculating mean and std
2024-03-02 13:35:58,992:INFO:Creating metrics dataframe
2024-03-02 13:35:58,994:INFO:Uploading results into container
2024-03-02 13:35:58,994:INFO:Uploading model into container now
2024-03-02 13:35:58,994:INFO:_master_model_container: 6
2024-03-02 13:35:58,994:INFO:_display_container: 2
2024-03-02 13:35:58,994:INFO:LassoLars(random_state=8360)
2024-03-02 13:35:58,994:INFO:create_model() successfully completed......................................
2024-03-02 13:35:59,075:INFO:SubProcess create_model() end ==================================
2024-03-02 13:35:59,076:INFO:Creating metrics dataframe
2024-03-02 13:35:59,077:INFO:Initializing Orthogonal Matching Pursuit
2024-03-02 13:35:59,078:INFO:Total runtime is 0.09788628021876018 minutes
2024-03-02 13:35:59,078:INFO:SubProcess create_model() called ==================================
2024-03-02 13:35:59,078:INFO:Initializing create_model()
2024-03-02 13:35:59,078:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:35:59,078:INFO:Checking exceptions
2024-03-02 13:35:59,078:INFO:Importing libraries
2024-03-02 13:35:59,078:INFO:Copying training dataset
2024-03-02 13:35:59,082:INFO:Defining folds
2024-03-02 13:35:59,082:INFO:Declaring metric variables
2024-03-02 13:35:59,082:INFO:Importing untrained model
2024-03-02 13:35:59,082:INFO:Orthogonal Matching Pursuit Imported successfully
2024-03-02 13:35:59,083:INFO:Starting cross validation
2024-03-02 13:35:59,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:35:59,307:INFO:Calculating mean and std
2024-03-02 13:35:59,308:INFO:Creating metrics dataframe
2024-03-02 13:35:59,310:INFO:Uploading results into container
2024-03-02 13:35:59,310:INFO:Uploading model into container now
2024-03-02 13:35:59,310:INFO:_master_model_container: 7
2024-03-02 13:35:59,310:INFO:_display_container: 2
2024-03-02 13:35:59,310:INFO:OrthogonalMatchingPursuit()
2024-03-02 13:35:59,310:INFO:create_model() successfully completed......................................
2024-03-02 13:35:59,392:INFO:SubProcess create_model() end ==================================
2024-03-02 13:35:59,392:INFO:Creating metrics dataframe
2024-03-02 13:35:59,394:INFO:Initializing Bayesian Ridge
2024-03-02 13:35:59,394:INFO:Total runtime is 0.10316941340764364 minutes
2024-03-02 13:35:59,394:INFO:SubProcess create_model() called ==================================
2024-03-02 13:35:59,394:INFO:Initializing create_model()
2024-03-02 13:35:59,394:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:35:59,394:INFO:Checking exceptions
2024-03-02 13:35:59,394:INFO:Importing libraries
2024-03-02 13:35:59,394:INFO:Copying training dataset
2024-03-02 13:35:59,397:INFO:Defining folds
2024-03-02 13:35:59,397:INFO:Declaring metric variables
2024-03-02 13:35:59,397:INFO:Importing untrained model
2024-03-02 13:35:59,398:INFO:Bayesian Ridge Imported successfully
2024-03-02 13:35:59,398:INFO:Starting cross validation
2024-03-02 13:35:59,399:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:35:59,669:INFO:Calculating mean and std
2024-03-02 13:35:59,670:INFO:Creating metrics dataframe
2024-03-02 13:35:59,671:INFO:Uploading results into container
2024-03-02 13:35:59,672:INFO:Uploading model into container now
2024-03-02 13:35:59,672:INFO:_master_model_container: 8
2024-03-02 13:35:59,672:INFO:_display_container: 2
2024-03-02 13:35:59,672:INFO:BayesianRidge()
2024-03-02 13:35:59,672:INFO:create_model() successfully completed......................................
2024-03-02 13:35:59,755:INFO:SubProcess create_model() end ==================================
2024-03-02 13:35:59,755:INFO:Creating metrics dataframe
2024-03-02 13:35:59,757:INFO:Initializing Passive Aggressive Regressor
2024-03-02 13:35:59,757:INFO:Total runtime is 0.10921839475631714 minutes
2024-03-02 13:35:59,757:INFO:SubProcess create_model() called ==================================
2024-03-02 13:35:59,757:INFO:Initializing create_model()
2024-03-02 13:35:59,757:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:35:59,758:INFO:Checking exceptions
2024-03-02 13:35:59,758:INFO:Importing libraries
2024-03-02 13:35:59,758:INFO:Copying training dataset
2024-03-02 13:35:59,761:INFO:Defining folds
2024-03-02 13:35:59,761:INFO:Declaring metric variables
2024-03-02 13:35:59,761:INFO:Importing untrained model
2024-03-02 13:35:59,761:INFO:Passive Aggressive Regressor Imported successfully
2024-03-02 13:35:59,761:INFO:Starting cross validation
2024-03-02 13:35:59,763:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:00,001:INFO:Calculating mean and std
2024-03-02 13:36:00,002:INFO:Creating metrics dataframe
2024-03-02 13:36:00,004:INFO:Uploading results into container
2024-03-02 13:36:00,004:INFO:Uploading model into container now
2024-03-02 13:36:00,004:INFO:_master_model_container: 9
2024-03-02 13:36:00,004:INFO:_display_container: 2
2024-03-02 13:36:00,005:INFO:PassiveAggressiveRegressor(random_state=8360)
2024-03-02 13:36:00,005:INFO:create_model() successfully completed......................................
2024-03-02 13:36:00,088:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:00,088:INFO:Creating metrics dataframe
2024-03-02 13:36:00,090:INFO:Initializing Huber Regressor
2024-03-02 13:36:00,090:INFO:Total runtime is 0.11476942698160808 minutes
2024-03-02 13:36:00,090:INFO:SubProcess create_model() called ==================================
2024-03-02 13:36:00,091:INFO:Initializing create_model()
2024-03-02 13:36:00,091:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:00,091:INFO:Checking exceptions
2024-03-02 13:36:00,091:INFO:Importing libraries
2024-03-02 13:36:00,091:INFO:Copying training dataset
2024-03-02 13:36:00,096:INFO:Defining folds
2024-03-02 13:36:00,096:INFO:Declaring metric variables
2024-03-02 13:36:00,096:INFO:Importing untrained model
2024-03-02 13:36:00,096:INFO:Huber Regressor Imported successfully
2024-03-02 13:36:00,096:INFO:Starting cross validation
2024-03-02 13:36:00,098:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:00,334:INFO:Calculating mean and std
2024-03-02 13:36:00,335:INFO:Creating metrics dataframe
2024-03-02 13:36:00,336:INFO:Uploading results into container
2024-03-02 13:36:00,336:INFO:Uploading model into container now
2024-03-02 13:36:00,337:INFO:_master_model_container: 10
2024-03-02 13:36:00,337:INFO:_display_container: 2
2024-03-02 13:36:00,337:INFO:HuberRegressor()
2024-03-02 13:36:00,337:INFO:create_model() successfully completed......................................
2024-03-02 13:36:00,419:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:00,420:INFO:Creating metrics dataframe
2024-03-02 13:36:00,422:INFO:Initializing K Neighbors Regressor
2024-03-02 13:36:00,422:INFO:Total runtime is 0.12029319206873576 minutes
2024-03-02 13:36:00,422:INFO:SubProcess create_model() called ==================================
2024-03-02 13:36:00,422:INFO:Initializing create_model()
2024-03-02 13:36:00,422:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:00,422:INFO:Checking exceptions
2024-03-02 13:36:00,422:INFO:Importing libraries
2024-03-02 13:36:00,422:INFO:Copying training dataset
2024-03-02 13:36:00,425:INFO:Defining folds
2024-03-02 13:36:00,425:INFO:Declaring metric variables
2024-03-02 13:36:00,425:INFO:Importing untrained model
2024-03-02 13:36:00,425:INFO:K Neighbors Regressor Imported successfully
2024-03-02 13:36:00,426:INFO:Starting cross validation
2024-03-02 13:36:00,427:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:00,748:INFO:Calculating mean and std
2024-03-02 13:36:00,749:INFO:Creating metrics dataframe
2024-03-02 13:36:00,750:INFO:Uploading results into container
2024-03-02 13:36:00,750:INFO:Uploading model into container now
2024-03-02 13:36:00,751:INFO:_master_model_container: 11
2024-03-02 13:36:00,751:INFO:_display_container: 2
2024-03-02 13:36:00,751:INFO:KNeighborsRegressor(n_jobs=-1)
2024-03-02 13:36:00,751:INFO:create_model() successfully completed......................................
2024-03-02 13:36:00,832:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:00,832:INFO:Creating metrics dataframe
2024-03-02 13:36:00,834:INFO:Initializing Decision Tree Regressor
2024-03-02 13:36:00,834:INFO:Total runtime is 0.12716858386993407 minutes
2024-03-02 13:36:00,835:INFO:SubProcess create_model() called ==================================
2024-03-02 13:36:00,835:INFO:Initializing create_model()
2024-03-02 13:36:00,835:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:00,835:INFO:Checking exceptions
2024-03-02 13:36:00,835:INFO:Importing libraries
2024-03-02 13:36:00,835:INFO:Copying training dataset
2024-03-02 13:36:00,838:INFO:Defining folds
2024-03-02 13:36:00,838:INFO:Declaring metric variables
2024-03-02 13:36:00,838:INFO:Importing untrained model
2024-03-02 13:36:00,838:INFO:Decision Tree Regressor Imported successfully
2024-03-02 13:36:00,839:INFO:Starting cross validation
2024-03-02 13:36:00,840:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:01,082:INFO:Calculating mean and std
2024-03-02 13:36:01,083:INFO:Creating metrics dataframe
2024-03-02 13:36:01,084:INFO:Uploading results into container
2024-03-02 13:36:01,084:INFO:Uploading model into container now
2024-03-02 13:36:01,085:INFO:_master_model_container: 12
2024-03-02 13:36:01,085:INFO:_display_container: 2
2024-03-02 13:36:01,085:INFO:DecisionTreeRegressor(random_state=8360)
2024-03-02 13:36:01,085:INFO:create_model() successfully completed......................................
2024-03-02 13:36:01,166:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:01,167:INFO:Creating metrics dataframe
2024-03-02 13:36:01,169:INFO:Initializing Random Forest Regressor
2024-03-02 13:36:01,169:INFO:Total runtime is 0.13273807764053344 minutes
2024-03-02 13:36:01,169:INFO:SubProcess create_model() called ==================================
2024-03-02 13:36:01,169:INFO:Initializing create_model()
2024-03-02 13:36:01,169:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:01,169:INFO:Checking exceptions
2024-03-02 13:36:01,169:INFO:Importing libraries
2024-03-02 13:36:01,169:INFO:Copying training dataset
2024-03-02 13:36:01,172:INFO:Defining folds
2024-03-02 13:36:01,172:INFO:Declaring metric variables
2024-03-02 13:36:01,172:INFO:Importing untrained model
2024-03-02 13:36:01,173:INFO:Random Forest Regressor Imported successfully
2024-03-02 13:36:01,173:INFO:Starting cross validation
2024-03-02 13:36:01,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:02,714:INFO:Calculating mean and std
2024-03-02 13:36:02,715:INFO:Creating metrics dataframe
2024-03-02 13:36:02,716:INFO:Uploading results into container
2024-03-02 13:36:02,717:INFO:Uploading model into container now
2024-03-02 13:36:02,717:INFO:_master_model_container: 13
2024-03-02 13:36:02,717:INFO:_display_container: 2
2024-03-02 13:36:02,717:INFO:RandomForestRegressor(n_jobs=-1, random_state=8360)
2024-03-02 13:36:02,717:INFO:create_model() successfully completed......................................
2024-03-02 13:36:02,804:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:02,805:INFO:Creating metrics dataframe
2024-03-02 13:36:02,807:INFO:Initializing Extra Trees Regressor
2024-03-02 13:36:02,807:INFO:Total runtime is 0.16004430452982585 minutes
2024-03-02 13:36:02,807:INFO:SubProcess create_model() called ==================================
2024-03-02 13:36:02,807:INFO:Initializing create_model()
2024-03-02 13:36:02,807:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:02,807:INFO:Checking exceptions
2024-03-02 13:36:02,807:INFO:Importing libraries
2024-03-02 13:36:02,807:INFO:Copying training dataset
2024-03-02 13:36:02,811:INFO:Defining folds
2024-03-02 13:36:02,811:INFO:Declaring metric variables
2024-03-02 13:36:02,811:INFO:Importing untrained model
2024-03-02 13:36:02,811:INFO:Extra Trees Regressor Imported successfully
2024-03-02 13:36:02,811:INFO:Starting cross validation
2024-03-02 13:36:02,813:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:03,648:INFO:Calculating mean and std
2024-03-02 13:36:03,648:INFO:Creating metrics dataframe
2024-03-02 13:36:03,650:INFO:Uploading results into container
2024-03-02 13:36:03,650:INFO:Uploading model into container now
2024-03-02 13:36:03,651:INFO:_master_model_container: 14
2024-03-02 13:36:03,651:INFO:_display_container: 2
2024-03-02 13:36:03,651:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8360)
2024-03-02 13:36:03,651:INFO:create_model() successfully completed......................................
2024-03-02 13:36:03,734:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:03,734:INFO:Creating metrics dataframe
2024-03-02 13:36:03,736:INFO:Initializing AdaBoost Regressor
2024-03-02 13:36:03,736:INFO:Total runtime is 0.17552155653635662 minutes
2024-03-02 13:36:03,736:INFO:SubProcess create_model() called ==================================
2024-03-02 13:36:03,737:INFO:Initializing create_model()
2024-03-02 13:36:03,737:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:03,737:INFO:Checking exceptions
2024-03-02 13:36:03,737:INFO:Importing libraries
2024-03-02 13:36:03,737:INFO:Copying training dataset
2024-03-02 13:36:03,741:INFO:Defining folds
2024-03-02 13:36:03,741:INFO:Declaring metric variables
2024-03-02 13:36:03,741:INFO:Importing untrained model
2024-03-02 13:36:03,741:INFO:AdaBoost Regressor Imported successfully
2024-03-02 13:36:03,742:INFO:Starting cross validation
2024-03-02 13:36:03,743:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:04,168:INFO:Calculating mean and std
2024-03-02 13:36:04,169:INFO:Creating metrics dataframe
2024-03-02 13:36:04,170:INFO:Uploading results into container
2024-03-02 13:36:04,170:INFO:Uploading model into container now
2024-03-02 13:36:04,171:INFO:_master_model_container: 15
2024-03-02 13:36:04,171:INFO:_display_container: 2
2024-03-02 13:36:04,171:INFO:AdaBoostRegressor(random_state=8360)
2024-03-02 13:36:04,171:INFO:create_model() successfully completed......................................
2024-03-02 13:36:04,253:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:04,253:INFO:Creating metrics dataframe
2024-03-02 13:36:04,255:INFO:Initializing Gradient Boosting Regressor
2024-03-02 13:36:04,255:INFO:Total runtime is 0.18418033123016359 minutes
2024-03-02 13:36:04,255:INFO:SubProcess create_model() called ==================================
2024-03-02 13:36:04,255:INFO:Initializing create_model()
2024-03-02 13:36:04,255:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:04,255:INFO:Checking exceptions
2024-03-02 13:36:04,255:INFO:Importing libraries
2024-03-02 13:36:04,255:INFO:Copying training dataset
2024-03-02 13:36:04,258:INFO:Defining folds
2024-03-02 13:36:04,258:INFO:Declaring metric variables
2024-03-02 13:36:04,259:INFO:Importing untrained model
2024-03-02 13:36:04,259:INFO:Gradient Boosting Regressor Imported successfully
2024-03-02 13:36:04,259:INFO:Starting cross validation
2024-03-02 13:36:04,260:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:05,006:INFO:Calculating mean and std
2024-03-02 13:36:05,007:INFO:Creating metrics dataframe
2024-03-02 13:36:05,008:INFO:Uploading results into container
2024-03-02 13:36:05,009:INFO:Uploading model into container now
2024-03-02 13:36:05,009:INFO:_master_model_container: 16
2024-03-02 13:36:05,009:INFO:_display_container: 2
2024-03-02 13:36:05,009:INFO:GradientBoostingRegressor(random_state=8360)
2024-03-02 13:36:05,009:INFO:create_model() successfully completed......................................
2024-03-02 13:36:05,096:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:05,096:INFO:Creating metrics dataframe
2024-03-02 13:36:05,099:INFO:Initializing Extreme Gradient Boosting
2024-03-02 13:36:05,099:INFO:Total runtime is 0.19824976126352947 minutes
2024-03-02 13:36:05,099:INFO:SubProcess create_model() called ==================================
2024-03-02 13:36:05,099:INFO:Initializing create_model()
2024-03-02 13:36:05,099:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:05,099:INFO:Checking exceptions
2024-03-02 13:36:05,099:INFO:Importing libraries
2024-03-02 13:36:05,099:INFO:Copying training dataset
2024-03-02 13:36:05,104:INFO:Defining folds
2024-03-02 13:36:05,104:INFO:Declaring metric variables
2024-03-02 13:36:05,104:INFO:Importing untrained model
2024-03-02 13:36:05,104:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 13:36:05,105:INFO:Starting cross validation
2024-03-02 13:36:05,106:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:05,590:INFO:Calculating mean and std
2024-03-02 13:36:05,590:INFO:Creating metrics dataframe
2024-03-02 13:36:05,592:INFO:Uploading results into container
2024-03-02 13:36:05,592:INFO:Uploading model into container now
2024-03-02 13:36:05,593:INFO:_master_model_container: 17
2024-03-02 13:36:05,593:INFO:_display_container: 2
2024-03-02 13:36:05,593:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=8360, ...)
2024-03-02 13:36:05,593:INFO:create_model() successfully completed......................................
2024-03-02 13:36:05,677:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:05,677:INFO:Creating metrics dataframe
2024-03-02 13:36:05,679:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 13:36:05,679:INFO:Total runtime is 0.20790977080663048 minutes
2024-03-02 13:36:05,679:INFO:SubProcess create_model() called ==================================
2024-03-02 13:36:05,679:INFO:Initializing create_model()
2024-03-02 13:36:05,679:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:05,679:INFO:Checking exceptions
2024-03-02 13:36:05,679:INFO:Importing libraries
2024-03-02 13:36:05,679:INFO:Copying training dataset
2024-03-02 13:36:05,682:INFO:Defining folds
2024-03-02 13:36:05,682:INFO:Declaring metric variables
2024-03-02 13:36:05,682:INFO:Importing untrained model
2024-03-02 13:36:05,682:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 13:36:05,682:INFO:Starting cross validation
2024-03-02 13:36:05,684:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:06,672:INFO:Calculating mean and std
2024-03-02 13:36:06,677:INFO:Creating metrics dataframe
2024-03-02 13:36:06,679:INFO:Uploading results into container
2024-03-02 13:36:06,679:INFO:Uploading model into container now
2024-03-02 13:36:06,680:INFO:_master_model_container: 18
2024-03-02 13:36:06,680:INFO:_display_container: 2
2024-03-02 13:36:06,680:INFO:LGBMRegressor(n_jobs=-1, random_state=8360)
2024-03-02 13:36:06,680:INFO:create_model() successfully completed......................................
2024-03-02 13:36:06,780:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:06,780:INFO:Creating metrics dataframe
2024-03-02 13:36:06,782:INFO:Initializing Dummy Regressor
2024-03-02 13:36:06,783:INFO:Total runtime is 0.22631732225418094 minutes
2024-03-02 13:36:06,783:INFO:SubProcess create_model() called ==================================
2024-03-02 13:36:06,783:INFO:Initializing create_model()
2024-03-02 13:36:06,783:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000193E6FE5AC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:06,783:INFO:Checking exceptions
2024-03-02 13:36:06,783:INFO:Importing libraries
2024-03-02 13:36:06,783:INFO:Copying training dataset
2024-03-02 13:36:06,787:INFO:Defining folds
2024-03-02 13:36:06,787:INFO:Declaring metric variables
2024-03-02 13:36:06,787:INFO:Importing untrained model
2024-03-02 13:36:06,787:INFO:Dummy Regressor Imported successfully
2024-03-02 13:36:06,787:INFO:Starting cross validation
2024-03-02 13:36:06,789:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 13:36:07,022:INFO:Calculating mean and std
2024-03-02 13:36:07,023:INFO:Creating metrics dataframe
2024-03-02 13:36:07,024:INFO:Uploading results into container
2024-03-02 13:36:07,024:INFO:Uploading model into container now
2024-03-02 13:36:07,024:INFO:_master_model_container: 19
2024-03-02 13:36:07,025:INFO:_display_container: 2
2024-03-02 13:36:07,025:INFO:DummyRegressor()
2024-03-02 13:36:07,025:INFO:create_model() successfully completed......................................
2024-03-02 13:36:07,112:INFO:SubProcess create_model() end ==================================
2024-03-02 13:36:07,112:INFO:Creating metrics dataframe
2024-03-02 13:36:07,115:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 13:36:07,117:INFO:Initializing create_model()
2024-03-02 13:36:07,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000193E55152E0>, estimator=ElasticNet(random_state=8360), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 13:36:07,117:INFO:Checking exceptions
2024-03-02 13:36:07,117:INFO:Importing libraries
2024-03-02 13:36:07,117:INFO:Copying training dataset
2024-03-02 13:36:07,121:INFO:Defining folds
2024-03-02 13:36:07,121:INFO:Declaring metric variables
2024-03-02 13:36:07,121:INFO:Importing untrained model
2024-03-02 13:36:07,121:INFO:Declaring custom model
2024-03-02 13:36:07,121:INFO:Elastic Net Imported successfully
2024-03-02 13:36:07,123:INFO:Cross validation set to False
2024-03-02 13:36:07,123:INFO:Fitting Model
2024-03-02 13:36:07,199:INFO:ElasticNet(random_state=8360)
2024-03-02 13:36:07,199:INFO:create_model() successfully completed......................................
2024-03-02 13:36:07,293:INFO:_master_model_container: 19
2024-03-02 13:36:07,293:INFO:_display_container: 2
2024-03-02 13:36:07,294:INFO:ElasticNet(random_state=8360)
2024-03-02 13:36:07,294:INFO:compare_models() successfully completed......................................
2024-03-02 13:37:51,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:37:51,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:37:51,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:37:51,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:38:45,101:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:38:45,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:38:45,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:38:45,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:42:21,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:42:21,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:42:21,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:42:21,098:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:43:40,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:43:40,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:43:40,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:43:40,921:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:45:37,372:WARNING:D:\HackNITR\automata\polls\views.py:33: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 13:45:37,411:WARNING:D:\HackNITR\automata\polls\views.py:35: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 13:45:37,417:INFO:PyCaret ClassificationExperiment
2024-03-02 13:45:37,417:INFO:Logging name: clf-default-name
2024-03-02 13:45:37,417:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-03-02 13:45:37,417:INFO:version 3.3.0
2024-03-02 13:45:37,417:INFO:Initializing setup()
2024-03-02 13:45:37,417:INFO:self.USI: 7d61
2024-03-02 13:45:37,417:INFO:self._variable_keys: {'exp_name_log', 'X_test', 'html_param', '_ml_usecase', 'gpu_n_jobs_param', '_available_plots', 'y_train', 'target_param', 'X_train', 'fold_groups_param', 'is_multiclass', 'log_plots_param', 'logging_param', 'gpu_param', 'memory', 'n_jobs_param', 'USI', 'pipeline', 'X', 'y_test', 'idx', 'exp_id', 'data', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator', 'seed', 'y'}
2024-03-02 13:45:37,417:INFO:Checking environment
2024-03-02 13:45:37,417:INFO:python_version: 3.9.0
2024-03-02 13:45:37,417:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 13:45:37,417:INFO:machine: AMD64
2024-03-02 13:45:37,418:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 13:45:37,424:INFO:Memory: svmem(total=16476958720, available=4174409728, percent=74.7, used=12302548992, free=4174409728)
2024-03-02 13:45:37,425:INFO:Physical Core: 8
2024-03-02 13:45:37,425:INFO:Logical Core: 16
2024-03-02 13:45:37,425:INFO:Checking libraries
2024-03-02 13:45:37,425:INFO:System:
2024-03-02 13:45:37,425:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 13:45:37,425:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 13:45:37,425:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 13:45:37,425:INFO:PyCaret required dependencies:
2024-03-02 13:45:37,471:INFO:                 pip: 23.3.2
2024-03-02 13:45:37,471:INFO:          setuptools: 49.2.1
2024-03-02 13:45:37,471:INFO:             pycaret: 3.3.0
2024-03-02 13:45:37,471:INFO:             IPython: 8.18.1
2024-03-02 13:45:37,471:INFO:          ipywidgets: 8.1.2
2024-03-02 13:45:37,471:INFO:                tqdm: 4.66.1
2024-03-02 13:45:37,471:INFO:               numpy: 1.25.2
2024-03-02 13:45:37,471:INFO:              pandas: 2.1.1
2024-03-02 13:45:37,471:INFO:              jinja2: 3.1.2
2024-03-02 13:45:37,471:INFO:               scipy: 1.11.4
2024-03-02 13:45:37,471:INFO:              joblib: 1.3.2
2024-03-02 13:45:37,471:INFO:             sklearn: 1.4.1.post1
2024-03-02 13:45:37,471:INFO:                pyod: 1.1.3
2024-03-02 13:45:37,471:INFO:            imblearn: 0.12.0
2024-03-02 13:45:37,471:INFO:   category_encoders: 2.6.3
2024-03-02 13:45:37,471:INFO:            lightgbm: 4.3.0
2024-03-02 13:45:37,471:INFO:               numba: 0.58.1
2024-03-02 13:45:37,471:INFO:            requests: 2.31.0
2024-03-02 13:45:37,471:INFO:          matplotlib: 3.7.5
2024-03-02 13:45:37,471:INFO:          scikitplot: 0.3.7
2024-03-02 13:45:37,471:INFO:         yellowbrick: 1.5
2024-03-02 13:45:37,471:INFO:              plotly: 5.19.0
2024-03-02 13:45:37,472:INFO:    plotly-resampler: Not installed
2024-03-02 13:45:37,472:INFO:             kaleido: 0.2.1
2024-03-02 13:45:37,472:INFO:           schemdraw: 0.15
2024-03-02 13:45:37,472:INFO:         statsmodels: 0.14.1
2024-03-02 13:45:37,472:INFO:              sktime: 0.27.0
2024-03-02 13:45:37,472:INFO:               tbats: 1.1.3
2024-03-02 13:45:37,472:INFO:            pmdarima: 2.0.4
2024-03-02 13:45:37,472:INFO:              psutil: 5.9.8
2024-03-02 13:45:37,472:INFO:          markupsafe: 2.1.3
2024-03-02 13:45:37,472:INFO:             pickle5: Not installed
2024-03-02 13:45:37,472:INFO:         cloudpickle: 3.0.0
2024-03-02 13:45:37,472:INFO:         deprecation: 2.1.0
2024-03-02 13:45:37,472:INFO:              xxhash: 3.4.1
2024-03-02 13:45:37,472:INFO:           wurlitzer: Not installed
2024-03-02 13:45:37,472:INFO:PyCaret optional dependencies:
2024-03-02 13:45:37,493:INFO:                shap: 0.44.1
2024-03-02 13:45:37,494:INFO:           interpret: Not installed
2024-03-02 13:45:37,494:INFO:                umap: Not installed
2024-03-02 13:45:37,494:INFO:     ydata_profiling: 4.6.5
2024-03-02 13:45:37,494:INFO:  explainerdashboard: 0.4.5
2024-03-02 13:45:37,494:INFO:             autoviz: Not installed
2024-03-02 13:45:37,494:INFO:           fairlearn: Not installed
2024-03-02 13:45:37,494:INFO:          deepchecks: Not installed
2024-03-02 13:45:37,494:INFO:             xgboost: 2.0.3
2024-03-02 13:45:37,494:INFO:            catboost: Not installed
2024-03-02 13:45:37,494:INFO:              kmodes: Not installed
2024-03-02 13:45:37,494:INFO:             mlxtend: Not installed
2024-03-02 13:45:37,494:INFO:       statsforecast: Not installed
2024-03-02 13:45:37,494:INFO:        tune_sklearn: Not installed
2024-03-02 13:45:37,494:INFO:                 ray: Not installed
2024-03-02 13:45:37,494:INFO:            hyperopt: Not installed
2024-03-02 13:45:37,494:INFO:              optuna: Not installed
2024-03-02 13:45:37,494:INFO:               skopt: Not installed
2024-03-02 13:45:37,494:INFO:              mlflow: Not installed
2024-03-02 13:45:37,494:INFO:              gradio: Not installed
2024-03-02 13:45:37,494:INFO:             fastapi: Not installed
2024-03-02 13:45:37,494:INFO:             uvicorn: Not installed
2024-03-02 13:45:37,494:INFO:              m2cgen: Not installed
2024-03-02 13:45:37,494:INFO:           evidently: Not installed
2024-03-02 13:45:37,494:INFO:               fugue: Not installed
2024-03-02 13:45:37,494:INFO:           streamlit: 1.27.2
2024-03-02 13:45:37,494:INFO:             prophet: Not installed
2024-03-02 13:45:37,494:INFO:None
2024-03-02 13:45:37,494:INFO:Set up data.
2024-03-02 13:45:37,508:INFO:Set up folding strategy.
2024-03-02 13:45:37,508:INFO:Set up train/test split.
2024-03-02 13:54:59,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:54:59,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:54:59,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:54:59,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:58:47,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:58:47,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:58:47,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:58:47,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:58:58,233:WARNING:D:\HackNITR\automata\polls\views.py:25: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  return df.applymap(remove_percent_symbol).applymap(remove_currency_symbol)

2024-03-02 13:59:58,858:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:59:58,858:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:59:58,858:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 13:59:58,858:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 14:00:01,154:WARNING:D:\HackNITR\automata\polls\views.py:25: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  return df.applymap(remove_percent_symbol).applymap(remove_currency_symbol)

2024-03-02 14:00:11,860:WARNING:D:\HackNITR\automata\polls\views.py:25: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  return df.applymap(remove_percent_symbol).applymap(remove_currency_symbol)

2024-03-02 14:00:19,322:WARNING:D:\HackNITR\automata\polls\views.py:51: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 14:00:19,361:WARNING:D:\HackNITR\automata\polls\views.py:53: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 14:00:19,367:INFO:PyCaret RegressionExperiment
2024-03-02 14:00:19,367:INFO:Logging name: reg-default-name
2024-03-02 14:00:19,367:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 14:00:19,367:INFO:version 3.3.0
2024-03-02 14:00:19,367:INFO:Initializing setup()
2024-03-02 14:00:19,367:INFO:self.USI: 44e1
2024-03-02 14:00:19,367:INFO:self._variable_keys: {'data', 'y', 'n_jobs_param', 'y_test', 'fold_generator', 'target_param', 'log_plots_param', 'memory', 'X_train', 'y_train', 'gpu_param', 'gpu_n_jobs_param', 'USI', 'fold_shuffle_param', '_available_plots', 'idx', 'X', 'logging_param', '_ml_usecase', 'exp_name_log', 'html_param', 'X_test', 'transform_target_param', 'fold_groups_param', 'seed', 'exp_id', 'pipeline'}
2024-03-02 14:00:19,367:INFO:Checking environment
2024-03-02 14:00:19,367:INFO:python_version: 3.9.0
2024-03-02 14:00:19,367:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 14:00:19,367:INFO:machine: AMD64
2024-03-02 14:00:19,367:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 14:00:19,374:INFO:Memory: svmem(total=16476958720, available=3900084224, percent=76.3, used=12576874496, free=3900084224)
2024-03-02 14:00:19,374:INFO:Physical Core: 8
2024-03-02 14:00:19,374:INFO:Logical Core: 16
2024-03-02 14:00:19,374:INFO:Checking libraries
2024-03-02 14:00:19,374:INFO:System:
2024-03-02 14:00:19,375:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 14:00:19,375:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 14:00:19,375:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 14:00:19,375:INFO:PyCaret required dependencies:
2024-03-02 14:00:19,421:INFO:                 pip: 23.3.2
2024-03-02 14:00:19,421:INFO:          setuptools: 49.2.1
2024-03-02 14:00:19,421:INFO:             pycaret: 3.3.0
2024-03-02 14:00:19,421:INFO:             IPython: 8.18.1
2024-03-02 14:00:19,421:INFO:          ipywidgets: 8.1.2
2024-03-02 14:00:19,421:INFO:                tqdm: 4.66.1
2024-03-02 14:00:19,421:INFO:               numpy: 1.25.2
2024-03-02 14:00:19,421:INFO:              pandas: 2.1.1
2024-03-02 14:00:19,421:INFO:              jinja2: 3.1.2
2024-03-02 14:00:19,421:INFO:               scipy: 1.11.4
2024-03-02 14:00:19,421:INFO:              joblib: 1.3.2
2024-03-02 14:00:19,421:INFO:             sklearn: 1.4.1.post1
2024-03-02 14:00:19,421:INFO:                pyod: 1.1.3
2024-03-02 14:00:19,421:INFO:            imblearn: 0.12.0
2024-03-02 14:00:19,421:INFO:   category_encoders: 2.6.3
2024-03-02 14:00:19,421:INFO:            lightgbm: 4.3.0
2024-03-02 14:00:19,421:INFO:               numba: 0.58.1
2024-03-02 14:00:19,421:INFO:            requests: 2.31.0
2024-03-02 14:00:19,421:INFO:          matplotlib: 3.7.5
2024-03-02 14:00:19,421:INFO:          scikitplot: 0.3.7
2024-03-02 14:00:19,421:INFO:         yellowbrick: 1.5
2024-03-02 14:00:19,421:INFO:              plotly: 5.19.0
2024-03-02 14:00:19,421:INFO:    plotly-resampler: Not installed
2024-03-02 14:00:19,421:INFO:             kaleido: 0.2.1
2024-03-02 14:00:19,421:INFO:           schemdraw: 0.15
2024-03-02 14:00:19,422:INFO:         statsmodels: 0.14.1
2024-03-02 14:00:19,422:INFO:              sktime: 0.27.0
2024-03-02 14:00:19,422:INFO:               tbats: 1.1.3
2024-03-02 14:00:19,422:INFO:            pmdarima: 2.0.4
2024-03-02 14:00:19,422:INFO:              psutil: 5.9.8
2024-03-02 14:00:19,422:INFO:          markupsafe: 2.1.3
2024-03-02 14:00:19,422:INFO:             pickle5: Not installed
2024-03-02 14:00:19,422:INFO:         cloudpickle: 3.0.0
2024-03-02 14:00:19,422:INFO:         deprecation: 2.1.0
2024-03-02 14:00:19,422:INFO:              xxhash: 3.4.1
2024-03-02 14:00:19,422:INFO:           wurlitzer: Not installed
2024-03-02 14:00:19,422:INFO:PyCaret optional dependencies:
2024-03-02 14:00:19,443:INFO:                shap: 0.44.1
2024-03-02 14:00:19,443:INFO:           interpret: Not installed
2024-03-02 14:00:19,443:INFO:                umap: Not installed
2024-03-02 14:00:19,443:INFO:     ydata_profiling: 4.6.5
2024-03-02 14:00:19,444:INFO:  explainerdashboard: 0.4.5
2024-03-02 14:00:19,444:INFO:             autoviz: Not installed
2024-03-02 14:00:19,444:INFO:           fairlearn: Not installed
2024-03-02 14:00:19,444:INFO:          deepchecks: Not installed
2024-03-02 14:00:19,444:INFO:             xgboost: 2.0.3
2024-03-02 14:00:19,444:INFO:            catboost: Not installed
2024-03-02 14:00:19,444:INFO:              kmodes: Not installed
2024-03-02 14:00:19,444:INFO:             mlxtend: Not installed
2024-03-02 14:00:19,444:INFO:       statsforecast: Not installed
2024-03-02 14:00:19,444:INFO:        tune_sklearn: Not installed
2024-03-02 14:00:19,444:INFO:                 ray: Not installed
2024-03-02 14:00:19,444:INFO:            hyperopt: Not installed
2024-03-02 14:00:19,444:INFO:              optuna: Not installed
2024-03-02 14:00:19,444:INFO:               skopt: Not installed
2024-03-02 14:00:19,444:INFO:              mlflow: Not installed
2024-03-02 14:00:19,444:INFO:              gradio: Not installed
2024-03-02 14:00:19,444:INFO:             fastapi: Not installed
2024-03-02 14:00:19,444:INFO:             uvicorn: Not installed
2024-03-02 14:00:19,444:INFO:              m2cgen: Not installed
2024-03-02 14:00:19,444:INFO:           evidently: Not installed
2024-03-02 14:00:19,444:INFO:               fugue: Not installed
2024-03-02 14:00:19,444:INFO:           streamlit: 1.27.2
2024-03-02 14:00:19,444:INFO:             prophet: Not installed
2024-03-02 14:00:19,444:INFO:None
2024-03-02 14:00:19,444:INFO:Set up data.
2024-03-02 14:00:19,458:INFO:Set up folding strategy.
2024-03-02 14:00:19,458:INFO:Set up train/test split.
2024-03-02 14:00:19,466:INFO:Set up index.
2024-03-02 14:00:19,467:INFO:Assigning column types.
2024-03-02 14:00:19,469:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 14:00:19,470:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,473:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,477:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,522:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,557:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:19,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:19,560:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,564:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,567:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,612:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,647:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:19,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:19,649:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 14:00:19,653:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,656:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,701:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,735:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,735:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:19,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:19,741:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,745:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,789:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,825:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,825:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:19,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:19,832:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 14:00:19,839:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,885:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,919:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,919:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:19,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:19,930:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:00:19,975:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:00:20,009:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:00:20,010:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:20,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:20,012:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 14:00:20,064:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:00:20,099:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:00:20,099:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:20,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:20,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:00:20,189:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:00:20,189:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:20,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:20,192:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 14:00:20,244:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:00:20,279:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:20,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:20,334:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:00:20,369:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:20,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:20,371:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 14:00:20,459:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:20,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:20,548:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:00:20,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:00:20,552:INFO:Preparing preprocessing pipeline...
2024-03-02 14:00:20,552:INFO:Set up simple imputation.
2024-03-02 14:00:20,555:INFO:Set up encoding of categorical features.
2024-03-02 14:00:20,556:INFO:Set up column name cleaning.
2024-03-02 14:01:08,821:WARNING:D:\HackNITR\automata\polls\views.py:25: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  return df.applymap(remove_percent_symbol).applymap(remove_currency_symbol)

2024-03-02 14:01:13,284:WARNING:D:\HackNITR\automata\polls\views.py:51: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 14:01:13,328:WARNING:D:\HackNITR\automata\polls\views.py:53: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 14:01:13,333:INFO:PyCaret ClassificationExperiment
2024-03-02 14:01:13,334:INFO:Logging name: clf-default-name
2024-03-02 14:01:13,334:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-03-02 14:01:13,334:INFO:version 3.3.0
2024-03-02 14:01:13,334:INFO:Initializing setup()
2024-03-02 14:01:13,334:INFO:self.USI: 0319
2024-03-02 14:01:13,334:INFO:self._variable_keys: {'data', 'y', 'n_jobs_param', 'y_test', 'fix_imbalance', 'fold_generator', 'target_param', 'log_plots_param', 'memory', 'X_train', 'y_train', 'gpu_param', 'gpu_n_jobs_param', 'USI', 'fold_shuffle_param', '_available_plots', 'idx', 'X', 'logging_param', '_ml_usecase', 'exp_name_log', 'html_param', 'X_test', 'is_multiclass', 'fold_groups_param', 'seed', 'exp_id', 'pipeline'}
2024-03-02 14:01:13,334:INFO:Checking environment
2024-03-02 14:01:13,334:INFO:python_version: 3.9.0
2024-03-02 14:01:13,334:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 14:01:13,334:INFO:machine: AMD64
2024-03-02 14:01:13,334:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 14:01:13,340:INFO:Memory: svmem(total=16476958720, available=3925172224, percent=76.2, used=12551786496, free=3925172224)
2024-03-02 14:01:13,340:INFO:Physical Core: 8
2024-03-02 14:01:13,340:INFO:Logical Core: 16
2024-03-02 14:01:13,340:INFO:Checking libraries
2024-03-02 14:01:13,340:INFO:System:
2024-03-02 14:01:13,340:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 14:01:13,340:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 14:01:13,340:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 14:01:13,340:INFO:PyCaret required dependencies:
2024-03-02 14:01:13,340:INFO:                 pip: 23.3.2
2024-03-02 14:01:13,340:INFO:          setuptools: 49.2.1
2024-03-02 14:01:13,340:INFO:             pycaret: 3.3.0
2024-03-02 14:01:13,341:INFO:             IPython: 8.18.1
2024-03-02 14:01:13,341:INFO:          ipywidgets: 8.1.2
2024-03-02 14:01:13,341:INFO:                tqdm: 4.66.1
2024-03-02 14:01:13,341:INFO:               numpy: 1.25.2
2024-03-02 14:01:13,341:INFO:              pandas: 2.1.1
2024-03-02 14:01:13,341:INFO:              jinja2: 3.1.2
2024-03-02 14:01:13,341:INFO:               scipy: 1.11.4
2024-03-02 14:01:13,341:INFO:              joblib: 1.3.2
2024-03-02 14:01:13,341:INFO:             sklearn: 1.4.1.post1
2024-03-02 14:01:13,341:INFO:                pyod: 1.1.3
2024-03-02 14:01:13,341:INFO:            imblearn: 0.12.0
2024-03-02 14:01:13,341:INFO:   category_encoders: 2.6.3
2024-03-02 14:01:13,341:INFO:            lightgbm: 4.3.0
2024-03-02 14:01:13,341:INFO:               numba: 0.58.1
2024-03-02 14:01:13,341:INFO:            requests: 2.31.0
2024-03-02 14:01:13,341:INFO:          matplotlib: 3.7.5
2024-03-02 14:01:13,341:INFO:          scikitplot: 0.3.7
2024-03-02 14:01:13,341:INFO:         yellowbrick: 1.5
2024-03-02 14:01:13,341:INFO:              plotly: 5.19.0
2024-03-02 14:01:13,341:INFO:    plotly-resampler: Not installed
2024-03-02 14:01:13,341:INFO:             kaleido: 0.2.1
2024-03-02 14:01:13,341:INFO:           schemdraw: 0.15
2024-03-02 14:01:13,341:INFO:         statsmodels: 0.14.1
2024-03-02 14:01:13,341:INFO:              sktime: 0.27.0
2024-03-02 14:01:13,341:INFO:               tbats: 1.1.3
2024-03-02 14:01:13,341:INFO:            pmdarima: 2.0.4
2024-03-02 14:01:13,341:INFO:              psutil: 5.9.8
2024-03-02 14:01:13,341:INFO:          markupsafe: 2.1.3
2024-03-02 14:01:13,341:INFO:             pickle5: Not installed
2024-03-02 14:01:13,341:INFO:         cloudpickle: 3.0.0
2024-03-02 14:01:13,341:INFO:         deprecation: 2.1.0
2024-03-02 14:01:13,341:INFO:              xxhash: 3.4.1
2024-03-02 14:01:13,341:INFO:           wurlitzer: Not installed
2024-03-02 14:01:13,341:INFO:PyCaret optional dependencies:
2024-03-02 14:01:13,341:INFO:                shap: 0.44.1
2024-03-02 14:01:13,341:INFO:           interpret: Not installed
2024-03-02 14:01:13,341:INFO:                umap: Not installed
2024-03-02 14:01:13,341:INFO:     ydata_profiling: 4.6.5
2024-03-02 14:01:13,341:INFO:  explainerdashboard: 0.4.5
2024-03-02 14:01:13,341:INFO:             autoviz: Not installed
2024-03-02 14:01:13,342:INFO:           fairlearn: Not installed
2024-03-02 14:01:13,342:INFO:          deepchecks: Not installed
2024-03-02 14:01:13,342:INFO:             xgboost: 2.0.3
2024-03-02 14:01:13,342:INFO:            catboost: Not installed
2024-03-02 14:01:13,342:INFO:              kmodes: Not installed
2024-03-02 14:01:13,342:INFO:             mlxtend: Not installed
2024-03-02 14:01:13,342:INFO:       statsforecast: Not installed
2024-03-02 14:01:13,342:INFO:        tune_sklearn: Not installed
2024-03-02 14:01:13,342:INFO:                 ray: Not installed
2024-03-02 14:01:13,342:INFO:            hyperopt: Not installed
2024-03-02 14:01:13,342:INFO:              optuna: Not installed
2024-03-02 14:01:13,342:INFO:               skopt: Not installed
2024-03-02 14:01:13,342:INFO:              mlflow: Not installed
2024-03-02 14:01:13,342:INFO:              gradio: Not installed
2024-03-02 14:01:13,342:INFO:             fastapi: Not installed
2024-03-02 14:01:13,342:INFO:             uvicorn: Not installed
2024-03-02 14:01:13,342:INFO:              m2cgen: Not installed
2024-03-02 14:01:13,342:INFO:           evidently: Not installed
2024-03-02 14:01:13,342:INFO:               fugue: Not installed
2024-03-02 14:01:13,342:INFO:           streamlit: 1.27.2
2024-03-02 14:01:13,342:INFO:             prophet: Not installed
2024-03-02 14:01:13,342:INFO:None
2024-03-02 14:01:13,342:INFO:Set up data.
2024-03-02 14:01:13,356:INFO:Set up folding strategy.
2024-03-02 14:01:13,356:INFO:Set up train/test split.
2024-03-02 14:01:27,758:WARNING:D:\HackNITR\automata\polls\views.py:51: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 14:01:27,801:WARNING:D:\HackNITR\automata\polls\views.py:53: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 14:01:27,808:INFO:PyCaret RegressionExperiment
2024-03-02 14:01:27,808:INFO:Logging name: reg-default-name
2024-03-02 14:01:27,808:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 14:01:27,808:INFO:version 3.3.0
2024-03-02 14:01:27,809:INFO:Initializing setup()
2024-03-02 14:01:27,809:INFO:self.USI: 15e3
2024-03-02 14:01:27,809:INFO:self._variable_keys: {'data', 'y', 'n_jobs_param', 'y_test', 'fold_generator', 'target_param', 'log_plots_param', 'memory', 'X_train', 'y_train', 'gpu_param', 'gpu_n_jobs_param', 'USI', 'fold_shuffle_param', '_available_plots', 'idx', 'X', 'logging_param', '_ml_usecase', 'exp_name_log', 'html_param', 'X_test', 'transform_target_param', 'fold_groups_param', 'seed', 'exp_id', 'pipeline'}
2024-03-02 14:01:27,809:INFO:Checking environment
2024-03-02 14:01:27,809:INFO:python_version: 3.9.0
2024-03-02 14:01:27,809:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 14:01:27,809:INFO:machine: AMD64
2024-03-02 14:01:27,809:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 14:01:27,816:INFO:Memory: svmem(total=16476958720, available=3916042240, percent=76.2, used=12560916480, free=3916042240)
2024-03-02 14:01:27,816:INFO:Physical Core: 8
2024-03-02 14:01:27,816:INFO:Logical Core: 16
2024-03-02 14:01:27,816:INFO:Checking libraries
2024-03-02 14:01:27,816:INFO:System:
2024-03-02 14:01:27,816:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 14:01:27,816:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 14:01:27,817:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 14:01:27,817:INFO:PyCaret required dependencies:
2024-03-02 14:01:27,817:INFO:                 pip: 23.3.2
2024-03-02 14:01:27,817:INFO:          setuptools: 49.2.1
2024-03-02 14:01:27,817:INFO:             pycaret: 3.3.0
2024-03-02 14:01:27,817:INFO:             IPython: 8.18.1
2024-03-02 14:01:27,817:INFO:          ipywidgets: 8.1.2
2024-03-02 14:01:27,817:INFO:                tqdm: 4.66.1
2024-03-02 14:01:27,817:INFO:               numpy: 1.25.2
2024-03-02 14:01:27,817:INFO:              pandas: 2.1.1
2024-03-02 14:01:27,817:INFO:              jinja2: 3.1.2
2024-03-02 14:01:27,817:INFO:               scipy: 1.11.4
2024-03-02 14:01:27,817:INFO:              joblib: 1.3.2
2024-03-02 14:01:27,817:INFO:             sklearn: 1.4.1.post1
2024-03-02 14:01:27,817:INFO:                pyod: 1.1.3
2024-03-02 14:01:27,817:INFO:            imblearn: 0.12.0
2024-03-02 14:01:27,818:INFO:   category_encoders: 2.6.3
2024-03-02 14:01:27,818:INFO:            lightgbm: 4.3.0
2024-03-02 14:01:27,818:INFO:               numba: 0.58.1
2024-03-02 14:01:27,818:INFO:            requests: 2.31.0
2024-03-02 14:01:27,818:INFO:          matplotlib: 3.7.5
2024-03-02 14:01:27,818:INFO:          scikitplot: 0.3.7
2024-03-02 14:01:27,818:INFO:         yellowbrick: 1.5
2024-03-02 14:01:27,818:INFO:              plotly: 5.19.0
2024-03-02 14:01:27,818:INFO:    plotly-resampler: Not installed
2024-03-02 14:01:27,818:INFO:             kaleido: 0.2.1
2024-03-02 14:01:27,818:INFO:           schemdraw: 0.15
2024-03-02 14:01:27,818:INFO:         statsmodels: 0.14.1
2024-03-02 14:01:27,818:INFO:              sktime: 0.27.0
2024-03-02 14:01:27,818:INFO:               tbats: 1.1.3
2024-03-02 14:01:27,818:INFO:            pmdarima: 2.0.4
2024-03-02 14:01:27,818:INFO:              psutil: 5.9.8
2024-03-02 14:01:27,819:INFO:          markupsafe: 2.1.3
2024-03-02 14:01:27,819:INFO:             pickle5: Not installed
2024-03-02 14:01:27,819:INFO:         cloudpickle: 3.0.0
2024-03-02 14:01:27,819:INFO:         deprecation: 2.1.0
2024-03-02 14:01:27,819:INFO:              xxhash: 3.4.1
2024-03-02 14:01:27,819:INFO:           wurlitzer: Not installed
2024-03-02 14:01:27,819:INFO:PyCaret optional dependencies:
2024-03-02 14:01:27,819:INFO:                shap: 0.44.1
2024-03-02 14:01:27,819:INFO:           interpret: Not installed
2024-03-02 14:01:27,819:INFO:                umap: Not installed
2024-03-02 14:01:27,819:INFO:     ydata_profiling: 4.6.5
2024-03-02 14:01:27,819:INFO:  explainerdashboard: 0.4.5
2024-03-02 14:01:27,819:INFO:             autoviz: Not installed
2024-03-02 14:01:27,819:INFO:           fairlearn: Not installed
2024-03-02 14:01:27,819:INFO:          deepchecks: Not installed
2024-03-02 14:01:27,820:INFO:             xgboost: 2.0.3
2024-03-02 14:01:27,820:INFO:            catboost: Not installed
2024-03-02 14:01:27,820:INFO:              kmodes: Not installed
2024-03-02 14:01:27,820:INFO:             mlxtend: Not installed
2024-03-02 14:01:27,820:INFO:       statsforecast: Not installed
2024-03-02 14:01:27,820:INFO:        tune_sklearn: Not installed
2024-03-02 14:01:27,820:INFO:                 ray: Not installed
2024-03-02 14:01:27,820:INFO:            hyperopt: Not installed
2024-03-02 14:01:27,820:INFO:              optuna: Not installed
2024-03-02 14:01:27,820:INFO:               skopt: Not installed
2024-03-02 14:01:27,820:INFO:              mlflow: Not installed
2024-03-02 14:01:27,820:INFO:              gradio: Not installed
2024-03-02 14:01:27,820:INFO:             fastapi: Not installed
2024-03-02 14:01:27,820:INFO:             uvicorn: Not installed
2024-03-02 14:01:27,820:INFO:              m2cgen: Not installed
2024-03-02 14:01:27,821:INFO:           evidently: Not installed
2024-03-02 14:01:27,821:INFO:               fugue: Not installed
2024-03-02 14:01:27,821:INFO:           streamlit: 1.27.2
2024-03-02 14:01:27,821:INFO:             prophet: Not installed
2024-03-02 14:01:27,821:INFO:None
2024-03-02 14:01:27,821:INFO:Set up data.
2024-03-02 14:01:27,835:INFO:Set up folding strategy.
2024-03-02 14:01:27,835:INFO:Set up train/test split.
2024-03-02 14:01:27,842:INFO:Set up index.
2024-03-02 14:01:27,842:INFO:Assigning column types.
2024-03-02 14:01:27,845:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 14:01:27,846:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 14:01:27,849:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:01:27,852:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:01:27,897:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:01:27,931:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:01:27,931:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:27,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:27,934:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 14:01:27,937:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:01:27,941:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:01:27,986:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,020:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,020:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,023:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 14:01:28,027:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,030:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,075:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,108:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,109:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,115:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,118:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,162:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,197:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,197:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,200:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 14:01:28,206:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,252:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,287:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,287:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,297:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,341:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,375:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,376:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,378:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 14:01:28,430:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,465:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,519:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,553:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,553:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,556:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 14:01:28,607:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,641:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:01:28,731:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,733:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,734:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 14:01:28,820:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,907:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:01:28,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:01:28,910:INFO:Preparing preprocessing pipeline...
2024-03-02 14:01:28,910:INFO:Set up simple imputation.
2024-03-02 14:01:28,913:INFO:Set up encoding of categorical features.
2024-03-02 14:01:28,913:INFO:Set up column name cleaning.
2024-03-02 14:02:20,462:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 14:02:20,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 14:02:20,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 14:02:20,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 14:02:33,233:WARNING:D:\HackNITR\automata\polls\views.py:25: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  df = df.applymap(remove_percent_symbol).applymap(remove_currency_symbol)

2024-03-02 14:02:45,006:WARNING:D:\HackNITR\automata\polls\views.py:56: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 14:02:45,042:WARNING:D:\HackNITR\automata\polls\views.py:58: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 14:02:45,048:INFO:PyCaret ClassificationExperiment
2024-03-02 14:02:45,048:INFO:Logging name: clf-default-name
2024-03-02 14:02:45,048:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-03-02 14:02:45,048:INFO:version 3.3.0
2024-03-02 14:02:45,048:INFO:Initializing setup()
2024-03-02 14:02:45,048:INFO:self.USI: 4762
2024-03-02 14:02:45,048:INFO:self._variable_keys: {'data', 'fold_generator', 'fold_shuffle_param', 'y', 'pipeline', 'X_test', 'log_plots_param', 'is_multiclass', 'gpu_n_jobs_param', 'n_jobs_param', 'X', 'gpu_param', 'target_param', 'fold_groups_param', 'exp_id', 'X_train', 'seed', '_available_plots', 'y_test', 'html_param', 'logging_param', 'idx', 'fix_imbalance', '_ml_usecase', 'memory', 'USI', 'y_train', 'exp_name_log'}
2024-03-02 14:02:45,048:INFO:Checking environment
2024-03-02 14:02:45,048:INFO:python_version: 3.9.0
2024-03-02 14:02:45,048:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 14:02:45,048:INFO:machine: AMD64
2024-03-02 14:02:45,048:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 14:02:45,055:INFO:Memory: svmem(total=16476958720, available=3945439232, percent=76.1, used=12531519488, free=3945439232)
2024-03-02 14:02:45,056:INFO:Physical Core: 8
2024-03-02 14:02:45,056:INFO:Logical Core: 16
2024-03-02 14:02:45,056:INFO:Checking libraries
2024-03-02 14:02:45,056:INFO:System:
2024-03-02 14:02:45,056:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 14:02:45,056:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 14:02:45,056:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 14:02:45,056:INFO:PyCaret required dependencies:
2024-03-02 14:02:45,101:INFO:                 pip: 23.3.2
2024-03-02 14:02:45,101:INFO:          setuptools: 49.2.1
2024-03-02 14:02:45,101:INFO:             pycaret: 3.3.0
2024-03-02 14:02:45,101:INFO:             IPython: 8.18.1
2024-03-02 14:02:45,101:INFO:          ipywidgets: 8.1.2
2024-03-02 14:02:45,101:INFO:                tqdm: 4.66.1
2024-03-02 14:02:45,101:INFO:               numpy: 1.25.2
2024-03-02 14:02:45,101:INFO:              pandas: 2.1.1
2024-03-02 14:02:45,101:INFO:              jinja2: 3.1.2
2024-03-02 14:02:45,101:INFO:               scipy: 1.11.4
2024-03-02 14:02:45,101:INFO:              joblib: 1.3.2
2024-03-02 14:02:45,101:INFO:             sklearn: 1.4.1.post1
2024-03-02 14:02:45,101:INFO:                pyod: 1.1.3
2024-03-02 14:02:45,101:INFO:            imblearn: 0.12.0
2024-03-02 14:02:45,101:INFO:   category_encoders: 2.6.3
2024-03-02 14:02:45,101:INFO:            lightgbm: 4.3.0
2024-03-02 14:02:45,101:INFO:               numba: 0.58.1
2024-03-02 14:02:45,101:INFO:            requests: 2.31.0
2024-03-02 14:02:45,101:INFO:          matplotlib: 3.7.5
2024-03-02 14:02:45,101:INFO:          scikitplot: 0.3.7
2024-03-02 14:02:45,101:INFO:         yellowbrick: 1.5
2024-03-02 14:02:45,101:INFO:              plotly: 5.19.0
2024-03-02 14:02:45,101:INFO:    plotly-resampler: Not installed
2024-03-02 14:02:45,101:INFO:             kaleido: 0.2.1
2024-03-02 14:02:45,101:INFO:           schemdraw: 0.15
2024-03-02 14:02:45,101:INFO:         statsmodels: 0.14.1
2024-03-02 14:02:45,101:INFO:              sktime: 0.27.0
2024-03-02 14:02:45,101:INFO:               tbats: 1.1.3
2024-03-02 14:02:45,102:INFO:            pmdarima: 2.0.4
2024-03-02 14:02:45,102:INFO:              psutil: 5.9.8
2024-03-02 14:02:45,102:INFO:          markupsafe: 2.1.3
2024-03-02 14:02:45,102:INFO:             pickle5: Not installed
2024-03-02 14:02:45,102:INFO:         cloudpickle: 3.0.0
2024-03-02 14:02:45,102:INFO:         deprecation: 2.1.0
2024-03-02 14:02:45,102:INFO:              xxhash: 3.4.1
2024-03-02 14:02:45,102:INFO:           wurlitzer: Not installed
2024-03-02 14:02:45,102:INFO:PyCaret optional dependencies:
2024-03-02 14:02:45,123:INFO:                shap: 0.44.1
2024-03-02 14:02:45,123:INFO:           interpret: Not installed
2024-03-02 14:02:45,123:INFO:                umap: Not installed
2024-03-02 14:02:45,123:INFO:     ydata_profiling: 4.6.5
2024-03-02 14:02:45,123:INFO:  explainerdashboard: 0.4.5
2024-03-02 14:02:45,123:INFO:             autoviz: Not installed
2024-03-02 14:02:45,123:INFO:           fairlearn: Not installed
2024-03-02 14:02:45,123:INFO:          deepchecks: Not installed
2024-03-02 14:02:45,123:INFO:             xgboost: 2.0.3
2024-03-02 14:02:45,123:INFO:            catboost: Not installed
2024-03-02 14:02:45,123:INFO:              kmodes: Not installed
2024-03-02 14:02:45,123:INFO:             mlxtend: Not installed
2024-03-02 14:02:45,123:INFO:       statsforecast: Not installed
2024-03-02 14:02:45,123:INFO:        tune_sklearn: Not installed
2024-03-02 14:02:45,123:INFO:                 ray: Not installed
2024-03-02 14:02:45,123:INFO:            hyperopt: Not installed
2024-03-02 14:02:45,123:INFO:              optuna: Not installed
2024-03-02 14:02:45,123:INFO:               skopt: Not installed
2024-03-02 14:02:45,123:INFO:              mlflow: Not installed
2024-03-02 14:02:45,124:INFO:              gradio: Not installed
2024-03-02 14:02:45,124:INFO:             fastapi: Not installed
2024-03-02 14:02:45,124:INFO:             uvicorn: Not installed
2024-03-02 14:02:45,124:INFO:              m2cgen: Not installed
2024-03-02 14:02:45,124:INFO:           evidently: Not installed
2024-03-02 14:02:45,124:INFO:               fugue: Not installed
2024-03-02 14:02:45,124:INFO:           streamlit: 1.27.2
2024-03-02 14:02:45,124:INFO:             prophet: Not installed
2024-03-02 14:02:45,124:INFO:None
2024-03-02 14:02:45,124:INFO:Set up data.
2024-03-02 14:02:45,139:INFO:Set up folding strategy.
2024-03-02 14:02:45,139:INFO:Set up train/test split.
2024-03-02 14:02:45,150:INFO:Set up index.
2024-03-02 14:02:45,150:INFO:Assigning column types.
2024-03-02 14:02:45,153:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 14:02:45,187:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:02:45,190:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-02 14:02:45,215:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:02:45,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:02:45,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:02:45,252:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-02 14:02:45,273:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:02:45,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:02:45,275:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 14:02:45,309:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-02 14:02:45,330:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:02:45,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:02:45,371:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-03-02 14:02:45,392:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:02:45,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:02:45,395:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-03-02 14:02:45,451:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:02:45,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:02:45,510:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:02:45,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:02:45,514:INFO:Preparing preprocessing pipeline...
2024-03-02 14:02:45,515:INFO:Set up label encoding.
2024-03-02 14:02:45,515:INFO:Set up simple imputation.
2024-03-02 14:02:45,518:INFO:Set up encoding of categorical features.
2024-03-02 14:02:45,518:INFO:Set up column name cleaning.
2024-03-02 14:02:45,679:INFO:Finished creating preprocessing pipeline.
2024-03-02 14:02:45,685:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\crash\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Net Change', 'Market Cap',
                                             'IPO Year', 'Volume'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,...
                                    transformer=TargetEncoder(cols=['Symbol',
                                                                    'Name',
                                                                    'Last Sale',
                                                                    '% Change',
                                                                    'Country',
                                                                    'Industry'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-03-02 14:02:45,685:INFO:Creating final display dataframe.
2024-03-02 14:02:46,089:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               3194
1                        Target                                             Sector
2                   Target type                                         Multiclass
3                Target mapping  Basic Materials: 0, Consumer Discretionary: 1,...
4           Original data shape                                         (3794, 11)
5        Transformed data shape                                         (3794, 11)
6   Transformed train set shape                                         (2655, 11)
7    Transformed test set shape                                         (1139, 11)
8              Numeric features                                                  4
9          Categorical features                                                  6
10                   Preprocess                                               True
11              Imputation type                                             simple
12           Numeric imputation                                               mean
13       Categorical imputation                                               mode
14     Maximum one-hot encoding                                                 25
15              Encoding method                                               None
16               Fold Generator                                    StratifiedKFold
17                  Fold Number                                                 10
18                     CPU Jobs                                                 -1
19                      Use GPU                                              False
20               Log Experiment                                              False
21              Experiment Name                                   clf-default-name
22                          USI                                               4762
2024-03-02 14:02:46,150:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:02:46,152:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:02:46,209:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:02:46,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:02:46,212:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-03-02 14:02:46,212:INFO:setup() successfully completed in 1.17s...............
2024-03-02 14:02:46,213:INFO:Initializing compare_models()
2024-03-02 14:02:46,213:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=1, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': 1, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-03-02 14:02:46,213:INFO:Checking exceptions
2024-03-02 14:02:46,217:INFO:Preparing display monitor
2024-03-02 14:02:46,219:INFO:Time budget is 1 minutes
2024-03-02 14:02:46,219:INFO:Initializing Logistic Regression
2024-03-02 14:02:46,219:INFO:Total runtime is 0.0 minutes
2024-03-02 14:02:46,219:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:46,220:INFO:Initializing create_model()
2024-03-02 14:02:46,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:46,220:INFO:Checking exceptions
2024-03-02 14:02:46,220:INFO:Importing libraries
2024-03-02 14:02:46,220:INFO:Copying training dataset
2024-03-02 14:02:46,225:INFO:Defining folds
2024-03-02 14:02:46,225:INFO:Declaring metric variables
2024-03-02 14:02:46,225:INFO:Importing untrained model
2024-03-02 14:02:46,226:INFO:Logistic Regression Imported successfully
2024-03-02 14:02:46,226:INFO:Starting cross validation
2024-03-02 14:02:46,227:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:49,584:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-02 14:02:49,616:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:49,621:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,625:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,627:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:49,628:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,655:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-02 14:02:49,678:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-02 14:02:49,679:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-02 14:02:49,694:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:49,698:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,702:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,704:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:49,705:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:49,705:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-02 14:02:49,706:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,707:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:49,707:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,709:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,710:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,712:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:49,713:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,713:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-02 14:02:49,713:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,715:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:49,716:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,733:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-02 14:02:49,739:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:49,742:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,745:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,747:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:49,749:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,749:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-02 14:02:49,750:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:49,753:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,757:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,758:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:49,760:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,764:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-02 14:02:49,765:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:49,766:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-03-02 14:02:49,769:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,773:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,774:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:49,777:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,779:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:49,782:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,786:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,788:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:49,790:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,794:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:49,797:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,798:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:49,801:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,801:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,802:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:49,804:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,804:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,805:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:49,807:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:49,813:INFO:Calculating mean and std
2024-03-02 14:02:49,814:INFO:Creating metrics dataframe
2024-03-02 14:02:49,816:INFO:Uploading results into container
2024-03-02 14:02:49,817:INFO:Uploading model into container now
2024-03-02 14:02:49,817:INFO:_master_model_container: 1
2024-03-02 14:02:49,818:INFO:_display_container: 2
2024-03-02 14:02:49,818:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3194, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-03-02 14:02:49,818:INFO:create_model() successfully completed......................................
2024-03-02 14:02:49,906:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:49,906:INFO:Creating metrics dataframe
2024-03-02 14:02:49,908:INFO:Initializing K Neighbors Classifier
2024-03-02 14:02:49,908:INFO:Total runtime is 0.06147795518239339 minutes
2024-03-02 14:02:49,908:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:49,909:INFO:Initializing create_model()
2024-03-02 14:02:49,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:49,909:INFO:Checking exceptions
2024-03-02 14:02:49,909:INFO:Importing libraries
2024-03-02 14:02:49,909:INFO:Copying training dataset
2024-03-02 14:02:49,912:INFO:Defining folds
2024-03-02 14:02:49,912:INFO:Declaring metric variables
2024-03-02 14:02:49,912:INFO:Importing untrained model
2024-03-02 14:02:49,912:INFO:K Neighbors Classifier Imported successfully
2024-03-02 14:02:49,913:INFO:Starting cross validation
2024-03-02 14:02:49,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:50,110:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:50,112:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,114:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,117:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:50,120:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,134:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:50,136:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,137:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:50,138:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,139:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,140:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:50,141:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,142:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,143:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:50,144:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,154:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:50,155:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,158:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:50,160:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:50,161:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,573:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,575:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,578:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,579:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,581:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,587:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,589:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,593:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,594:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,596:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,604:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,605:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,608:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,608:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,611:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,612:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,613:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,613:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,615:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,615:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,621:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,623:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,624:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,626:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,627:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,629:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,629:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,631:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,631:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,633:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,654:INFO:Calculating mean and std
2024-03-02 14:02:51,655:INFO:Creating metrics dataframe
2024-03-02 14:02:51,658:INFO:Uploading results into container
2024-03-02 14:02:51,658:INFO:Uploading model into container now
2024-03-02 14:02:51,659:INFO:_master_model_container: 2
2024-03-02 14:02:51,659:INFO:_display_container: 2
2024-03-02 14:02:51,659:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-03-02 14:02:51,659:INFO:create_model() successfully completed......................................
2024-03-02 14:02:51,742:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:51,742:INFO:Creating metrics dataframe
2024-03-02 14:02:51,744:INFO:Initializing Naive Bayes
2024-03-02 14:02:51,744:INFO:Total runtime is 0.09208105802536011 minutes
2024-03-02 14:02:51,744:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:51,744:INFO:Initializing create_model()
2024-03-02 14:02:51,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:51,744:INFO:Checking exceptions
2024-03-02 14:02:51,744:INFO:Importing libraries
2024-03-02 14:02:51,745:INFO:Copying training dataset
2024-03-02 14:02:51,748:INFO:Defining folds
2024-03-02 14:02:51,748:INFO:Declaring metric variables
2024-03-02 14:02:51,748:INFO:Importing untrained model
2024-03-02 14:02:51,748:INFO:Naive Bayes Imported successfully
2024-03-02 14:02:51,748:INFO:Starting cross validation
2024-03-02 14:02:51,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:51,897:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,900:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,905:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,905:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,907:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,907:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,907:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,908:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,908:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,909:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,910:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,910:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,911:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,912:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,912:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,914:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,914:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,914:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,915:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,917:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,917:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,918:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,920:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,921:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,927:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,929:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,932:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,933:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,934:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,937:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,939:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,940:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,940:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,941:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,942:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,943:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,944:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,945:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,945:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,946:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,946:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:51,946:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,946:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,947:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,947:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,947:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,949:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,951:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:51,952:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:51,972:INFO:Calculating mean and std
2024-03-02 14:02:51,973:INFO:Creating metrics dataframe
2024-03-02 14:02:51,974:INFO:Uploading results into container
2024-03-02 14:02:51,974:INFO:Uploading model into container now
2024-03-02 14:02:51,975:INFO:_master_model_container: 3
2024-03-02 14:02:51,975:INFO:_display_container: 2
2024-03-02 14:02:51,975:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-03-02 14:02:51,975:INFO:create_model() successfully completed......................................
2024-03-02 14:02:52,054:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:52,054:INFO:Creating metrics dataframe
2024-03-02 14:02:52,056:INFO:Initializing Decision Tree Classifier
2024-03-02 14:02:52,056:INFO:Total runtime is 0.0972824494043986 minutes
2024-03-02 14:02:52,056:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:52,057:INFO:Initializing create_model()
2024-03-02 14:02:52,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:52,057:INFO:Checking exceptions
2024-03-02 14:02:52,057:INFO:Importing libraries
2024-03-02 14:02:52,057:INFO:Copying training dataset
2024-03-02 14:02:52,060:INFO:Defining folds
2024-03-02 14:02:52,060:INFO:Declaring metric variables
2024-03-02 14:02:52,060:INFO:Importing untrained model
2024-03-02 14:02:52,060:INFO:Decision Tree Classifier Imported successfully
2024-03-02 14:02:52,061:INFO:Starting cross validation
2024-03-02 14:02:52,062:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:52,187:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:52,189:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,192:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,193:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,195:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,205:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:52,207:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,209:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:52,210:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:52,210:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,211:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,212:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,212:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,212:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:52,214:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,214:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,215:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,216:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,216:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,217:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,218:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,219:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,219:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,221:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,221:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,230:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:52,231:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:52,231:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,232:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,234:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,234:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:52,235:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,235:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,235:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,236:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,236:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,237:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,238:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,239:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,241:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:52,241:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,242:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,244:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:52,245:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,245:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,246:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,247:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,248:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,249:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,250:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,260:INFO:Calculating mean and std
2024-03-02 14:02:52,261:INFO:Creating metrics dataframe
2024-03-02 14:02:52,262:INFO:Uploading results into container
2024-03-02 14:02:52,262:INFO:Uploading model into container now
2024-03-02 14:02:52,263:INFO:_master_model_container: 4
2024-03-02 14:02:52,263:INFO:_display_container: 2
2024-03-02 14:02:52,263:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3194, splitter='best')
2024-03-02 14:02:52,263:INFO:create_model() successfully completed......................................
2024-03-02 14:02:52,341:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:52,341:INFO:Creating metrics dataframe
2024-03-02 14:02:52,343:INFO:Initializing SVM - Linear Kernel
2024-03-02 14:02:52,343:INFO:Total runtime is 0.10206605990727743 minutes
2024-03-02 14:02:52,343:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:52,343:INFO:Initializing create_model()
2024-03-02 14:02:52,343:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:52,343:INFO:Checking exceptions
2024-03-02 14:02:52,343:INFO:Importing libraries
2024-03-02 14:02:52,344:INFO:Copying training dataset
2024-03-02 14:02:52,347:INFO:Defining folds
2024-03-02 14:02:52,347:INFO:Declaring metric variables
2024-03-02 14:02:52,347:INFO:Importing untrained model
2024-03-02 14:02:52,347:INFO:SVM - Linear Kernel Imported successfully
2024-03-02 14:02:52,347:INFO:Starting cross validation
2024-03-02 14:02:52,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:52,517:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,519:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,523:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,525:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,528:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,536:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,537:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,542:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,544:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,546:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,548:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,549:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,550:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,550:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,551:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,552:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,553:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,554:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,555:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,555:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,556:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,557:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,557:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,559:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,560:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,561:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,562:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,564:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,566:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,567:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,571:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,573:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,576:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,577:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,577:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,579:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,580:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,581:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,583:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,586:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,587:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,588:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,588:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,591:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,591:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,592:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,593:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,593:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,594:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,609:INFO:Calculating mean and std
2024-03-02 14:02:52,610:INFO:Creating metrics dataframe
2024-03-02 14:02:52,611:INFO:Uploading results into container
2024-03-02 14:02:52,611:INFO:Uploading model into container now
2024-03-02 14:02:52,612:INFO:_master_model_container: 5
2024-03-02 14:02:52,612:INFO:_display_container: 2
2024-03-02 14:02:52,612:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3194, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-03-02 14:02:52,612:INFO:create_model() successfully completed......................................
2024-03-02 14:02:52,694:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:52,694:INFO:Creating metrics dataframe
2024-03-02 14:02:52,697:INFO:Initializing Ridge Classifier
2024-03-02 14:02:52,697:INFO:Total runtime is 0.10796689987182619 minutes
2024-03-02 14:02:52,697:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:52,697:INFO:Initializing create_model()
2024-03-02 14:02:52,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:52,697:INFO:Checking exceptions
2024-03-02 14:02:52,697:INFO:Importing libraries
2024-03-02 14:02:52,697:INFO:Copying training dataset
2024-03-02 14:02:52,700:INFO:Defining folds
2024-03-02 14:02:52,700:INFO:Declaring metric variables
2024-03-02 14:02:52,700:INFO:Importing untrained model
2024-03-02 14:02:52,701:INFO:Ridge Classifier Imported successfully
2024-03-02 14:02:52,701:INFO:Starting cross validation
2024-03-02 14:02:52,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:52,811:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.93574e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 14:02:52,811:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.86091e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 14:02:52,818:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.40349e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 14:02:52,821:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.24879e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 14:02:52,824:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.82327e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 14:02:52,838:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,838:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.21484e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 14:02:52,840:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,842:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,844:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,844:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,846:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,847:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,848:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,848:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,849:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.10812e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 14:02:52,850:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,851:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,852:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,852:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,852:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,852:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,853:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,854:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,854:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,855:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,856:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,857:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,859:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,860:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,860:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,861:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,861:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,862:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,863:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,863:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,864:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,867:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.81543e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 14:02:52,868:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,870:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,875:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,877:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,877:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,878:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,880:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,881:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,881:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.82369e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 14:02:52,883:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,885:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,889:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,890:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,893:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,894:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,896:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,904:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-03-02 14:02:52,905:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,908:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,910:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:52,911:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:52,924:INFO:Calculating mean and std
2024-03-02 14:02:52,925:INFO:Creating metrics dataframe
2024-03-02 14:02:52,927:INFO:Uploading results into container
2024-03-02 14:02:52,927:INFO:Uploading model into container now
2024-03-02 14:02:52,927:INFO:_master_model_container: 6
2024-03-02 14:02:52,927:INFO:_display_container: 2
2024-03-02 14:02:52,927:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3194, solver='auto',
                tol=0.0001)
2024-03-02 14:02:52,927:INFO:create_model() successfully completed......................................
2024-03-02 14:02:53,013:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:53,014:INFO:Creating metrics dataframe
2024-03-02 14:02:53,016:INFO:Initializing Random Forest Classifier
2024-03-02 14:02:53,016:INFO:Total runtime is 0.11327867507934572 minutes
2024-03-02 14:02:53,016:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:53,016:INFO:Initializing create_model()
2024-03-02 14:02:53,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:53,016:INFO:Checking exceptions
2024-03-02 14:02:53,016:INFO:Importing libraries
2024-03-02 14:02:53,016:INFO:Copying training dataset
2024-03-02 14:02:53,021:INFO:Defining folds
2024-03-02 14:02:53,021:INFO:Declaring metric variables
2024-03-02 14:02:53,021:INFO:Importing untrained model
2024-03-02 14:02:53,021:INFO:Random Forest Classifier Imported successfully
2024-03-02 14:02:53,021:INFO:Starting cross validation
2024-03-02 14:02:53,022:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:53,403:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,403:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,404:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,405:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,406:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,406:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,410:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,411:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,411:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,412:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,413:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,414:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,415:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,415:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,417:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,418:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,418:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,419:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,421:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,421:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,421:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,425:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,426:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,426:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,427:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,428:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,428:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,429:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,430:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,431:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,434:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,436:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,439:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,440:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,442:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,450:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,452:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,455:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,457:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,458:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,512:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,514:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,516:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,517:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,519:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,528:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,529:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,532:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,533:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,534:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,541:INFO:Calculating mean and std
2024-03-02 14:02:53,542:INFO:Creating metrics dataframe
2024-03-02 14:02:53,543:INFO:Uploading results into container
2024-03-02 14:02:53,544:INFO:Uploading model into container now
2024-03-02 14:02:53,544:INFO:_master_model_container: 7
2024-03-02 14:02:53,544:INFO:_display_container: 2
2024-03-02 14:02:53,544:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3194, verbose=0,
                       warm_start=False)
2024-03-02 14:02:53,544:INFO:create_model() successfully completed......................................
2024-03-02 14:02:53,624:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:53,624:INFO:Creating metrics dataframe
2024-03-02 14:02:53,626:INFO:Initializing Quadratic Discriminant Analysis
2024-03-02 14:02:53,626:INFO:Total runtime is 0.1234467387199402 minutes
2024-03-02 14:02:53,627:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:53,627:INFO:Initializing create_model()
2024-03-02 14:02:53,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:53,627:INFO:Checking exceptions
2024-03-02 14:02:53,627:INFO:Importing libraries
2024-03-02 14:02:53,627:INFO:Copying training dataset
2024-03-02 14:02:53,630:INFO:Defining folds
2024-03-02 14:02:53,630:INFO:Declaring metric variables
2024-03-02 14:02:53,630:INFO:Importing untrained model
2024-03-02 14:02:53,630:INFO:Quadratic Discriminant Analysis Imported successfully
2024-03-02 14:02:53,631:INFO:Starting cross validation
2024-03-02 14:02:53,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:53,740:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-02 14:02:53,740:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-02 14:02:53,749:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-02 14:02:53,754:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-02 14:02:53,756:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-02 14:02:53,756:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-02 14:02:53,770:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,770:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,770:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-02 14:02:53,774:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,776:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,777:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,777:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,777:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,777:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-02 14:02:53,778:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,778:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,779:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-02 14:02:53,779:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,780:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,780:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-02 14:02:53,781:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,781:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,782:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,783:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,784:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,784:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,785:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,785:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,785:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,786:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,786:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,786:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,787:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,787:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,788:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,789:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,789:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,790:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-02 14:02:53,791:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,792:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,793:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,795:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,798:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,800:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,801:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,804:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,804:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,804:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-02 14:02:53,806:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,808:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,808:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,808:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,808:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-02 14:02:53,809:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-03-02 14:02:53,810:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,810:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,811:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,811:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,811:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-02 14:02:53,812:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,812:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,813:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,813:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,814:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,814:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,816:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,817:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,817:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,818:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,820:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,828:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,829:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-03-02 14:02:53,829:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-03-02 14:02:53,831:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:53,832:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,834:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,836:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:53,837:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:53,842:INFO:Calculating mean and std
2024-03-02 14:02:53,843:INFO:Creating metrics dataframe
2024-03-02 14:02:53,844:INFO:Uploading results into container
2024-03-02 14:02:53,844:INFO:Uploading model into container now
2024-03-02 14:02:53,845:INFO:_master_model_container: 8
2024-03-02 14:02:53,845:INFO:_display_container: 2
2024-03-02 14:02:53,845:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-03-02 14:02:53,845:INFO:create_model() successfully completed......................................
2024-03-02 14:02:53,923:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:53,924:INFO:Creating metrics dataframe
2024-03-02 14:02:53,926:INFO:Initializing Ada Boost Classifier
2024-03-02 14:02:53,926:INFO:Total runtime is 0.1284398436546326 minutes
2024-03-02 14:02:53,926:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:53,926:INFO:Initializing create_model()
2024-03-02 14:02:53,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:53,926:INFO:Checking exceptions
2024-03-02 14:02:53,926:INFO:Importing libraries
2024-03-02 14:02:53,926:INFO:Copying training dataset
2024-03-02 14:02:53,929:INFO:Defining folds
2024-03-02 14:02:53,929:INFO:Declaring metric variables
2024-03-02 14:02:53,929:INFO:Importing untrained model
2024-03-02 14:02:53,930:INFO:Ada Boost Classifier Imported successfully
2024-03-02 14:02:53,930:INFO:Starting cross validation
2024-03-02 14:02:53,931:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:54,032:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-02 14:02:54,037:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-02 14:02:54,040:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-02 14:02:54,040:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-02 14:02:54,058:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-02 14:02:54,061:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-02 14:02:54,070:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-02 14:02:54,077:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-02 14:02:54,078:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-02 14:02:54,090:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-03-02 14:02:54,305:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:54,307:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,312:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,314:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:54,317:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,321:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:54,322:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:54,323:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,324:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,327:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,327:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:54,328:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:54,329:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,329:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,330:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,330:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:54,331:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:54,332:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,332:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,333:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,333:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:54,333:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,336:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,336:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:54,336:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:54,338:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,338:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,342:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:54,343:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,344:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,344:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:54,346:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,346:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:54,346:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,347:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,348:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:54,349:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,349:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:54,350:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,351:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,351:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:54,353:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,353:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,355:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:54,356:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,365:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:54,366:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,368:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,370:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:54,371:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:54,382:INFO:Calculating mean and std
2024-03-02 14:02:54,383:INFO:Creating metrics dataframe
2024-03-02 14:02:54,384:INFO:Uploading results into container
2024-03-02 14:02:54,385:INFO:Uploading model into container now
2024-03-02 14:02:54,385:INFO:_master_model_container: 9
2024-03-02 14:02:54,385:INFO:_display_container: 2
2024-03-02 14:02:54,385:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3194)
2024-03-02 14:02:54,385:INFO:create_model() successfully completed......................................
2024-03-02 14:02:54,465:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:54,466:INFO:Creating metrics dataframe
2024-03-02 14:02:54,468:INFO:Initializing Gradient Boosting Classifier
2024-03-02 14:02:54,468:INFO:Total runtime is 0.13748271067937218 minutes
2024-03-02 14:02:54,468:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:54,468:INFO:Initializing create_model()
2024-03-02 14:02:54,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:54,468:INFO:Checking exceptions
2024-03-02 14:02:54,468:INFO:Importing libraries
2024-03-02 14:02:54,468:INFO:Copying training dataset
2024-03-02 14:02:54,472:INFO:Defining folds
2024-03-02 14:02:54,472:INFO:Declaring metric variables
2024-03-02 14:02:54,472:INFO:Importing untrained model
2024-03-02 14:02:54,472:INFO:Gradient Boosting Classifier Imported successfully
2024-03-02 14:02:54,472:INFO:Starting cross validation
2024-03-02 14:02:54,473:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:58,619:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:58,620:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,624:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,625:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:58,627:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,637:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:58,640:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,645:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,647:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:58,650:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,686:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:58,687:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,690:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,691:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:58,693:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,717:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:58,719:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,722:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,723:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:58,725:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,748:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:58,749:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,752:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,753:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:58,755:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,762:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:58,764:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,768:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:58,770:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,770:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:58,772:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,772:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,773:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:58,775:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,786:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:58,787:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,790:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:58,791:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,791:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,792:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:58,793:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,794:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,795:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:58,795:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:58,796:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,797:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,799:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,801:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:58,802:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:58,822:INFO:Calculating mean and std
2024-03-02 14:02:58,823:INFO:Creating metrics dataframe
2024-03-02 14:02:58,824:INFO:Uploading results into container
2024-03-02 14:02:58,824:INFO:Uploading model into container now
2024-03-02 14:02:58,825:INFO:_master_model_container: 10
2024-03-02 14:02:58,825:INFO:_display_container: 2
2024-03-02 14:02:58,825:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3194, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-03-02 14:02:58,825:INFO:create_model() successfully completed......................................
2024-03-02 14:02:58,906:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:58,906:INFO:Creating metrics dataframe
2024-03-02 14:02:58,908:INFO:Initializing Linear Discriminant Analysis
2024-03-02 14:02:58,908:INFO:Total runtime is 0.2114838004112244 minutes
2024-03-02 14:02:58,908:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:58,908:INFO:Initializing create_model()
2024-03-02 14:02:58,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:58,908:INFO:Checking exceptions
2024-03-02 14:02:58,908:INFO:Importing libraries
2024-03-02 14:02:58,908:INFO:Copying training dataset
2024-03-02 14:02:58,911:INFO:Defining folds
2024-03-02 14:02:58,911:INFO:Declaring metric variables
2024-03-02 14:02:58,912:INFO:Importing untrained model
2024-03-02 14:02:58,912:INFO:Linear Discriminant Analysis Imported successfully
2024-03-02 14:02:58,912:INFO:Starting cross validation
2024-03-02 14:02:58,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:59,042:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,043:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,048:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,051:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,051:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,054:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,057:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,059:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,061:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,061:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,063:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,065:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,066:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,067:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,067:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,067:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,068:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,069:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,069:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,070:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,070:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,071:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,072:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,073:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,073:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,073:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,074:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,074:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,075:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,075:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,076:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,078:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,080:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,081:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,083:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,084:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,087:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,088:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,090:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,090:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,091:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,091:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,092:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,093:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,095:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,096:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,096:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,097:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,106:INFO:Calculating mean and std
2024-03-02 14:02:59,107:INFO:Creating metrics dataframe
2024-03-02 14:02:59,108:INFO:Uploading results into container
2024-03-02 14:02:59,108:INFO:Uploading model into container now
2024-03-02 14:02:59,109:INFO:_master_model_container: 11
2024-03-02 14:02:59,109:INFO:_display_container: 2
2024-03-02 14:02:59,109:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-03-02 14:02:59,109:INFO:create_model() successfully completed......................................
2024-03-02 14:02:59,187:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:59,187:INFO:Creating metrics dataframe
2024-03-02 14:02:59,189:INFO:Initializing Extra Trees Classifier
2024-03-02 14:02:59,189:INFO:Total runtime is 0.2161656657854716 minutes
2024-03-02 14:02:59,189:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:59,189:INFO:Initializing create_model()
2024-03-02 14:02:59,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:59,190:INFO:Checking exceptions
2024-03-02 14:02:59,190:INFO:Importing libraries
2024-03-02 14:02:59,190:INFO:Copying training dataset
2024-03-02 14:02:59,193:INFO:Defining folds
2024-03-02 14:02:59,193:INFO:Declaring metric variables
2024-03-02 14:02:59,193:INFO:Importing untrained model
2024-03-02 14:02:59,193:INFO:Extra Trees Classifier Imported successfully
2024-03-02 14:02:59,193:INFO:Starting cross validation
2024-03-02 14:02:59,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:02:59,508:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,508:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,511:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,511:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,515:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,516:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,517:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,518:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,520:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,521:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,523:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,524:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,524:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,526:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,527:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,527:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,530:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,531:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,532:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,532:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,534:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,534:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,535:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,536:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,536:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,539:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,539:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,541:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,541:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,544:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,545:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,545:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,547:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,547:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,549:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,571:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,572:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,575:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,577:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,578:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,585:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,585:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:02:59,586:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,587:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,590:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,590:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,591:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,591:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:02:59,592:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,592:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:02:59,597:INFO:Calculating mean and std
2024-03-02 14:02:59,598:INFO:Creating metrics dataframe
2024-03-02 14:02:59,600:INFO:Uploading results into container
2024-03-02 14:02:59,600:INFO:Uploading model into container now
2024-03-02 14:02:59,600:INFO:_master_model_container: 12
2024-03-02 14:02:59,600:INFO:_display_container: 2
2024-03-02 14:02:59,601:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3194, verbose=0,
                     warm_start=False)
2024-03-02 14:02:59,601:INFO:create_model() successfully completed......................................
2024-03-02 14:02:59,684:INFO:SubProcess create_model() end ==================================
2024-03-02 14:02:59,684:INFO:Creating metrics dataframe
2024-03-02 14:02:59,686:INFO:Initializing Extreme Gradient Boosting
2024-03-02 14:02:59,686:INFO:Total runtime is 0.22444974581400554 minutes
2024-03-02 14:02:59,686:INFO:SubProcess create_model() called ==================================
2024-03-02 14:02:59,686:INFO:Initializing create_model()
2024-03-02 14:02:59,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:02:59,687:INFO:Checking exceptions
2024-03-02 14:02:59,687:INFO:Importing libraries
2024-03-02 14:02:59,687:INFO:Copying training dataset
2024-03-02 14:02:59,692:INFO:Defining folds
2024-03-02 14:02:59,693:INFO:Declaring metric variables
2024-03-02 14:02:59,693:INFO:Importing untrained model
2024-03-02 14:02:59,693:INFO:Extreme Gradient Boosting Imported successfully
2024-03-02 14:02:59,693:INFO:Starting cross validation
2024-03-02 14:02:59,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:03:00,099:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:00,100:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,104:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,105:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:00,107:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,132:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:00,134:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,136:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:00,136:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:00,137:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,138:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,138:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,139:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:00,140:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,140:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,141:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,142:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:00,142:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:00,143:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,144:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,144:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:00,146:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,149:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,150:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:00,152:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,165:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:00,166:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,169:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,170:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:00,171:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,182:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:00,184:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,187:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,188:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:00,190:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,200:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:00,201:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:00,201:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,202:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,202:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:00,204:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,204:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,205:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,205:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:00,206:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:00,206:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,206:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,207:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,207:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:00,209:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:00,213:INFO:Calculating mean and std
2024-03-02 14:03:00,214:INFO:Creating metrics dataframe
2024-03-02 14:03:00,215:INFO:Uploading results into container
2024-03-02 14:03:00,215:INFO:Uploading model into container now
2024-03-02 14:03:00,216:INFO:_master_model_container: 13
2024-03-02 14:03:00,216:INFO:_display_container: 2
2024-03-02 14:03:00,216:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-03-02 14:03:00,216:INFO:create_model() successfully completed......................................
2024-03-02 14:03:00,298:INFO:SubProcess create_model() end ==================================
2024-03-02 14:03:00,298:INFO:Creating metrics dataframe
2024-03-02 14:03:00,300:INFO:Initializing Light Gradient Boosting Machine
2024-03-02 14:03:00,300:INFO:Total runtime is 0.23467058738072713 minutes
2024-03-02 14:03:00,300:INFO:SubProcess create_model() called ==================================
2024-03-02 14:03:00,300:INFO:Initializing create_model()
2024-03-02 14:03:00,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:03:00,300:INFO:Checking exceptions
2024-03-02 14:03:00,300:INFO:Importing libraries
2024-03-02 14:03:00,300:INFO:Copying training dataset
2024-03-02 14:03:00,304:INFO:Defining folds
2024-03-02 14:03:00,304:INFO:Declaring metric variables
2024-03-02 14:03:00,304:INFO:Importing untrained model
2024-03-02 14:03:00,304:INFO:Light Gradient Boosting Machine Imported successfully
2024-03-02 14:03:00,304:INFO:Starting cross validation
2024-03-02 14:03:00,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:03:04,689:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:04,692:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,697:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,699:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:04,702:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,839:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:04,840:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:04,841:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,842:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,847:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,848:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,849:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:04,850:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:04,851:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,853:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,873:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:04,875:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,887:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,890:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:04,892:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:04,994:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,005:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,009:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,010:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,012:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,013:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,015:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,017:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,020:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,022:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,098:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,100:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,105:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,108:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,111:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,137:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,140:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,144:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,146:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,149:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,192:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,194:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,199:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,201:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,203:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,441:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,443:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,448:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,450:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,452:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,466:INFO:Calculating mean and std
2024-03-02 14:03:05,467:INFO:Creating metrics dataframe
2024-03-02 14:03:05,469:INFO:Uploading results into container
2024-03-02 14:03:05,469:INFO:Uploading model into container now
2024-03-02 14:03:05,470:INFO:_master_model_container: 14
2024-03-02 14:03:05,470:INFO:_display_container: 2
2024-03-02 14:03:05,471:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3194, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-03-02 14:03:05,471:INFO:create_model() successfully completed......................................
2024-03-02 14:03:05,566:INFO:SubProcess create_model() end ==================================
2024-03-02 14:03:05,567:INFO:Creating metrics dataframe
2024-03-02 14:03:05,569:INFO:Initializing Dummy Classifier
2024-03-02 14:03:05,569:INFO:Total runtime is 0.3224891821543376 minutes
2024-03-02 14:03:05,569:INFO:SubProcess create_model() called ==================================
2024-03-02 14:03:05,569:INFO:Initializing create_model()
2024-03-02 14:03:05,569:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020A47375BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:03:05,569:INFO:Checking exceptions
2024-03-02 14:03:05,569:INFO:Importing libraries
2024-03-02 14:03:05,570:INFO:Copying training dataset
2024-03-02 14:03:05,574:INFO:Defining folds
2024-03-02 14:03:05,574:INFO:Declaring metric variables
2024-03-02 14:03:05,574:INFO:Importing untrained model
2024-03-02 14:03:05,575:INFO:Dummy Classifier Imported successfully
2024-03-02 14:03:05,575:INFO:Starting cross validation
2024-03-02 14:03:05,576:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-03-02 14:03:05,710:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,713:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,716:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,718:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,720:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,722:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,724:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,729:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,730:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,732:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,740:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,741:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,744:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,746:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,748:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,750:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,752:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,752:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,754:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,754:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,756:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,756:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,757:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,757:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,758:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,759:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,759:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,760:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,760:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,761:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,762:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,762:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,765:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,767:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,768:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,770:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,770:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,771:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,773:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,774:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,775:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,776:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,777:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,777:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,778:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,780:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\frame.py", line 825, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-03-02 14:03:05,781:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,784:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,785:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-03-02 14:03:05,786:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Utilities') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-03-02 14:03:05,796:INFO:Calculating mean and std
2024-03-02 14:03:05,797:INFO:Creating metrics dataframe
2024-03-02 14:03:05,798:INFO:Uploading results into container
2024-03-02 14:03:05,799:INFO:Uploading model into container now
2024-03-02 14:03:05,799:INFO:_master_model_container: 15
2024-03-02 14:03:05,799:INFO:_display_container: 2
2024-03-02 14:03:05,799:INFO:DummyClassifier(constant=None, random_state=3194, strategy='prior')
2024-03-02 14:03:05,799:INFO:create_model() successfully completed......................................
2024-03-02 14:03:05,878:INFO:SubProcess create_model() end ==================================
2024-03-02 14:03:05,878:INFO:Creating metrics dataframe
2024-03-02 14:03:05,881:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-03-02 14:03:05,882:INFO:Initializing create_model()
2024-03-02 14:03:05,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020A45BBE670>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3194, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-03-02 14:03:05,882:INFO:Checking exceptions
2024-03-02 14:03:05,883:INFO:Importing libraries
2024-03-02 14:03:05,883:INFO:Copying training dataset
2024-03-02 14:03:05,886:INFO:Defining folds
2024-03-02 14:03:05,886:INFO:Declaring metric variables
2024-03-02 14:03:05,886:INFO:Importing untrained model
2024-03-02 14:03:05,886:INFO:Declaring custom model
2024-03-02 14:03:05,886:INFO:Ridge Classifier Imported successfully
2024-03-02 14:03:05,887:INFO:Cross validation set to False
2024-03-02 14:03:05,887:INFO:Fitting Model
2024-03-02 14:03:05,949:WARNING:C:\Users\crash\AppData\Local\Programs\Python\Python39\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.82241e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-03-02 14:03:05,950:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3194, solver='auto',
                tol=0.0001)
2024-03-02 14:03:05,950:INFO:create_model() successfully completed......................................
2024-03-02 14:03:06,044:INFO:_master_model_container: 15
2024-03-02 14:03:06,044:INFO:_display_container: 2
2024-03-02 14:03:06,044:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3194, solver='auto',
                tol=0.0001)
2024-03-02 14:03:06,044:INFO:compare_models() successfully completed......................................
2024-03-02 14:05:09,795:WARNING:D:\HackNITR\automata\polls\views.py:25: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  df = df.applymap(remove_percent_symbol).applymap(remove_currency_symbol)

2024-03-02 14:05:18,619:WARNING:D:\HackNITR\automata\polls\views.py:56: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 14:05:18,660:WARNING:D:\HackNITR\automata\polls\views.py:58: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 14:05:18,664:INFO:PyCaret RegressionExperiment
2024-03-02 14:05:18,665:INFO:Logging name: reg-default-name
2024-03-02 14:05:18,665:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 14:05:18,665:INFO:version 3.3.0
2024-03-02 14:05:18,665:INFO:Initializing setup()
2024-03-02 14:05:18,665:INFO:self.USI: 4368
2024-03-02 14:05:18,665:INFO:self._variable_keys: {'data', 'fold_generator', 'fold_shuffle_param', 'y', 'transform_target_param', 'pipeline', 'X_test', 'log_plots_param', 'gpu_n_jobs_param', 'n_jobs_param', 'X', 'gpu_param', 'target_param', 'fold_groups_param', 'exp_id', 'X_train', 'seed', '_available_plots', 'y_test', 'html_param', 'logging_param', 'idx', '_ml_usecase', 'memory', 'USI', 'y_train', 'exp_name_log'}
2024-03-02 14:05:18,665:INFO:Checking environment
2024-03-02 14:05:18,665:INFO:python_version: 3.9.0
2024-03-02 14:05:18,665:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 14:05:18,665:INFO:machine: AMD64
2024-03-02 14:05:18,665:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 14:05:18,673:INFO:Memory: svmem(total=16476958720, available=1965760512, percent=88.1, used=14511198208, free=1965760512)
2024-03-02 14:05:18,673:INFO:Physical Core: 8
2024-03-02 14:05:18,673:INFO:Logical Core: 16
2024-03-02 14:05:18,673:INFO:Checking libraries
2024-03-02 14:05:18,673:INFO:System:
2024-03-02 14:05:18,673:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 14:05:18,673:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 14:05:18,673:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 14:05:18,673:INFO:PyCaret required dependencies:
2024-03-02 14:05:18,673:INFO:                 pip: 23.3.2
2024-03-02 14:05:18,673:INFO:          setuptools: 49.2.1
2024-03-02 14:05:18,673:INFO:             pycaret: 3.3.0
2024-03-02 14:05:18,674:INFO:             IPython: 8.18.1
2024-03-02 14:05:18,674:INFO:          ipywidgets: 8.1.2
2024-03-02 14:05:18,674:INFO:                tqdm: 4.66.1
2024-03-02 14:05:18,674:INFO:               numpy: 1.25.2
2024-03-02 14:05:18,674:INFO:              pandas: 2.1.1
2024-03-02 14:05:18,674:INFO:              jinja2: 3.1.2
2024-03-02 14:05:18,674:INFO:               scipy: 1.11.4
2024-03-02 14:05:18,674:INFO:              joblib: 1.3.2
2024-03-02 14:05:18,674:INFO:             sklearn: 1.4.1.post1
2024-03-02 14:05:18,674:INFO:                pyod: 1.1.3
2024-03-02 14:05:18,674:INFO:            imblearn: 0.12.0
2024-03-02 14:05:18,674:INFO:   category_encoders: 2.6.3
2024-03-02 14:05:18,674:INFO:            lightgbm: 4.3.0
2024-03-02 14:05:18,674:INFO:               numba: 0.58.1
2024-03-02 14:05:18,674:INFO:            requests: 2.31.0
2024-03-02 14:05:18,674:INFO:          matplotlib: 3.7.5
2024-03-02 14:05:18,674:INFO:          scikitplot: 0.3.7
2024-03-02 14:05:18,675:INFO:         yellowbrick: 1.5
2024-03-02 14:05:18,675:INFO:              plotly: 5.19.0
2024-03-02 14:05:18,675:INFO:    plotly-resampler: Not installed
2024-03-02 14:05:18,675:INFO:             kaleido: 0.2.1
2024-03-02 14:05:18,675:INFO:           schemdraw: 0.15
2024-03-02 14:05:18,675:INFO:         statsmodels: 0.14.1
2024-03-02 14:05:18,675:INFO:              sktime: 0.27.0
2024-03-02 14:05:18,675:INFO:               tbats: 1.1.3
2024-03-02 14:05:18,675:INFO:            pmdarima: 2.0.4
2024-03-02 14:05:18,675:INFO:              psutil: 5.9.8
2024-03-02 14:05:18,675:INFO:          markupsafe: 2.1.3
2024-03-02 14:05:18,675:INFO:             pickle5: Not installed
2024-03-02 14:05:18,675:INFO:         cloudpickle: 3.0.0
2024-03-02 14:05:18,675:INFO:         deprecation: 2.1.0
2024-03-02 14:05:18,675:INFO:              xxhash: 3.4.1
2024-03-02 14:05:18,675:INFO:           wurlitzer: Not installed
2024-03-02 14:05:18,676:INFO:PyCaret optional dependencies:
2024-03-02 14:05:18,676:INFO:                shap: 0.44.1
2024-03-02 14:05:18,676:INFO:           interpret: Not installed
2024-03-02 14:05:18,676:INFO:                umap: Not installed
2024-03-02 14:05:18,676:INFO:     ydata_profiling: 4.6.5
2024-03-02 14:05:18,676:INFO:  explainerdashboard: 0.4.5
2024-03-02 14:05:18,676:INFO:             autoviz: Not installed
2024-03-02 14:05:18,676:INFO:           fairlearn: Not installed
2024-03-02 14:05:18,676:INFO:          deepchecks: Not installed
2024-03-02 14:05:18,676:INFO:             xgboost: 2.0.3
2024-03-02 14:05:18,676:INFO:            catboost: Not installed
2024-03-02 14:05:18,676:INFO:              kmodes: Not installed
2024-03-02 14:05:18,676:INFO:             mlxtend: Not installed
2024-03-02 14:05:18,676:INFO:       statsforecast: Not installed
2024-03-02 14:05:18,677:INFO:        tune_sklearn: Not installed
2024-03-02 14:05:18,677:INFO:                 ray: Not installed
2024-03-02 14:05:18,677:INFO:            hyperopt: Not installed
2024-03-02 14:05:18,677:INFO:              optuna: Not installed
2024-03-02 14:05:18,677:INFO:               skopt: Not installed
2024-03-02 14:05:18,677:INFO:              mlflow: Not installed
2024-03-02 14:05:18,677:INFO:              gradio: Not installed
2024-03-02 14:05:18,677:INFO:             fastapi: Not installed
2024-03-02 14:05:18,677:INFO:             uvicorn: Not installed
2024-03-02 14:05:18,677:INFO:              m2cgen: Not installed
2024-03-02 14:05:18,677:INFO:           evidently: Not installed
2024-03-02 14:05:18,677:INFO:               fugue: Not installed
2024-03-02 14:05:18,677:INFO:           streamlit: 1.27.2
2024-03-02 14:05:18,677:INFO:             prophet: Not installed
2024-03-02 14:05:18,677:INFO:None
2024-03-02 14:05:18,677:INFO:Set up data.
2024-03-02 14:05:18,691:INFO:Set up folding strategy.
2024-03-02 14:05:18,691:INFO:Set up train/test split.
2024-03-02 14:05:18,699:INFO:Set up index.
2024-03-02 14:05:18,699:INFO:Assigning column types.
2024-03-02 14:05:18,702:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 14:05:18,702:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,706:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,710:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,755:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,789:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,789:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:18,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:18,792:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,795:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,799:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,843:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,878:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:18,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:18,880:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 14:05:18,884:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,887:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,966:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:18,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:18,972:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:18,976:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,020:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,055:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:19,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:19,057:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 14:05:19,064:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,109:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,143:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,143:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:19,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:19,153:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,197:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,231:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,231:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:19,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:19,234:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 14:05:19,284:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,318:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,319:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:19,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:19,372:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,405:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,406:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:19,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:19,408:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 14:05:19,460:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,494:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:19,496:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:19,548:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:19,582:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:19,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:19,584:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 14:05:19,671:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:19,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:19,758:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:19,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:19,761:INFO:Preparing preprocessing pipeline...
2024-03-02 14:05:19,761:INFO:Set up simple imputation.
2024-03-02 14:05:19,764:INFO:Set up encoding of categorical features.
2024-03-02 14:05:19,764:INFO:Set up column name cleaning.
2024-03-02 14:05:25,203:WARNING:D:\HackNITR\automata\polls\views.py:56: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 14:05:25,246:WARNING:D:\HackNITR\automata\polls\views.py:58: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 14:05:25,252:INFO:PyCaret ClassificationExperiment
2024-03-02 14:05:25,252:INFO:Logging name: clf-default-name
2024-03-02 14:05:25,252:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-03-02 14:05:25,252:INFO:version 3.3.0
2024-03-02 14:05:25,252:INFO:Initializing setup()
2024-03-02 14:05:25,252:INFO:self.USI: 6a02
2024-03-02 14:05:25,252:INFO:self._variable_keys: {'data', 'fold_generator', 'fold_shuffle_param', 'y', 'pipeline', 'X_test', 'log_plots_param', 'is_multiclass', 'gpu_n_jobs_param', 'n_jobs_param', 'X', 'gpu_param', 'target_param', 'fold_groups_param', 'exp_id', 'X_train', 'seed', '_available_plots', 'y_test', 'html_param', 'logging_param', 'idx', 'fix_imbalance', '_ml_usecase', 'memory', 'USI', 'y_train', 'exp_name_log'}
2024-03-02 14:05:25,252:INFO:Checking environment
2024-03-02 14:05:25,252:INFO:python_version: 3.9.0
2024-03-02 14:05:25,252:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 14:05:25,252:INFO:machine: AMD64
2024-03-02 14:05:25,252:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 14:05:25,260:INFO:Memory: svmem(total=16476958720, available=1926377472, percent=88.3, used=14550581248, free=1926377472)
2024-03-02 14:05:25,260:INFO:Physical Core: 8
2024-03-02 14:05:25,260:INFO:Logical Core: 16
2024-03-02 14:05:25,260:INFO:Checking libraries
2024-03-02 14:05:25,260:INFO:System:
2024-03-02 14:05:25,260:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 14:05:25,260:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 14:05:25,260:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 14:05:25,260:INFO:PyCaret required dependencies:
2024-03-02 14:05:25,260:INFO:                 pip: 23.3.2
2024-03-02 14:05:25,260:INFO:          setuptools: 49.2.1
2024-03-02 14:05:25,260:INFO:             pycaret: 3.3.0
2024-03-02 14:05:25,260:INFO:             IPython: 8.18.1
2024-03-02 14:05:25,260:INFO:          ipywidgets: 8.1.2
2024-03-02 14:05:25,260:INFO:                tqdm: 4.66.1
2024-03-02 14:05:25,260:INFO:               numpy: 1.25.2
2024-03-02 14:05:25,260:INFO:              pandas: 2.1.1
2024-03-02 14:05:25,260:INFO:              jinja2: 3.1.2
2024-03-02 14:05:25,260:INFO:               scipy: 1.11.4
2024-03-02 14:05:25,260:INFO:              joblib: 1.3.2
2024-03-02 14:05:25,260:INFO:             sklearn: 1.4.1.post1
2024-03-02 14:05:25,260:INFO:                pyod: 1.1.3
2024-03-02 14:05:25,260:INFO:            imblearn: 0.12.0
2024-03-02 14:05:25,260:INFO:   category_encoders: 2.6.3
2024-03-02 14:05:25,260:INFO:            lightgbm: 4.3.0
2024-03-02 14:05:25,260:INFO:               numba: 0.58.1
2024-03-02 14:05:25,260:INFO:            requests: 2.31.0
2024-03-02 14:05:25,260:INFO:          matplotlib: 3.7.5
2024-03-02 14:05:25,260:INFO:          scikitplot: 0.3.7
2024-03-02 14:05:25,261:INFO:         yellowbrick: 1.5
2024-03-02 14:05:25,261:INFO:              plotly: 5.19.0
2024-03-02 14:05:25,261:INFO:    plotly-resampler: Not installed
2024-03-02 14:05:25,261:INFO:             kaleido: 0.2.1
2024-03-02 14:05:25,261:INFO:           schemdraw: 0.15
2024-03-02 14:05:25,261:INFO:         statsmodels: 0.14.1
2024-03-02 14:05:25,261:INFO:              sktime: 0.27.0
2024-03-02 14:05:25,261:INFO:               tbats: 1.1.3
2024-03-02 14:05:25,261:INFO:            pmdarima: 2.0.4
2024-03-02 14:05:25,261:INFO:              psutil: 5.9.8
2024-03-02 14:05:25,261:INFO:          markupsafe: 2.1.3
2024-03-02 14:05:25,261:INFO:             pickle5: Not installed
2024-03-02 14:05:25,261:INFO:         cloudpickle: 3.0.0
2024-03-02 14:05:25,261:INFO:         deprecation: 2.1.0
2024-03-02 14:05:25,261:INFO:              xxhash: 3.4.1
2024-03-02 14:05:25,261:INFO:           wurlitzer: Not installed
2024-03-02 14:05:25,261:INFO:PyCaret optional dependencies:
2024-03-02 14:05:25,261:INFO:                shap: 0.44.1
2024-03-02 14:05:25,261:INFO:           interpret: Not installed
2024-03-02 14:05:25,261:INFO:                umap: Not installed
2024-03-02 14:05:25,261:INFO:     ydata_profiling: 4.6.5
2024-03-02 14:05:25,261:INFO:  explainerdashboard: 0.4.5
2024-03-02 14:05:25,261:INFO:             autoviz: Not installed
2024-03-02 14:05:25,261:INFO:           fairlearn: Not installed
2024-03-02 14:05:25,261:INFO:          deepchecks: Not installed
2024-03-02 14:05:25,261:INFO:             xgboost: 2.0.3
2024-03-02 14:05:25,261:INFO:            catboost: Not installed
2024-03-02 14:05:25,261:INFO:              kmodes: Not installed
2024-03-02 14:05:25,261:INFO:             mlxtend: Not installed
2024-03-02 14:05:25,261:INFO:       statsforecast: Not installed
2024-03-02 14:05:25,261:INFO:        tune_sklearn: Not installed
2024-03-02 14:05:25,261:INFO:                 ray: Not installed
2024-03-02 14:05:25,261:INFO:            hyperopt: Not installed
2024-03-02 14:05:25,261:INFO:              optuna: Not installed
2024-03-02 14:05:25,261:INFO:               skopt: Not installed
2024-03-02 14:05:25,261:INFO:              mlflow: Not installed
2024-03-02 14:05:25,261:INFO:              gradio: Not installed
2024-03-02 14:05:25,261:INFO:             fastapi: Not installed
2024-03-02 14:05:25,261:INFO:             uvicorn: Not installed
2024-03-02 14:05:25,262:INFO:              m2cgen: Not installed
2024-03-02 14:05:25,262:INFO:           evidently: Not installed
2024-03-02 14:05:25,262:INFO:               fugue: Not installed
2024-03-02 14:05:25,262:INFO:           streamlit: 1.27.2
2024-03-02 14:05:25,262:INFO:             prophet: Not installed
2024-03-02 14:05:25,262:INFO:None
2024-03-02 14:05:25,262:INFO:Set up data.
2024-03-02 14:05:25,275:INFO:Set up folding strategy.
2024-03-02 14:05:25,275:INFO:Set up train/test split.
2024-03-02 14:05:43,928:WARNING:D:\HackNITR\automata\polls\views.py:56: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 14:05:43,971:WARNING:D:\HackNITR\automata\polls\views.py:58: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 14:05:43,976:INFO:PyCaret RegressionExperiment
2024-03-02 14:05:43,976:INFO:Logging name: reg-default-name
2024-03-02 14:05:43,976:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 14:05:43,976:INFO:version 3.3.0
2024-03-02 14:05:43,976:INFO:Initializing setup()
2024-03-02 14:05:43,976:INFO:self.USI: 75f0
2024-03-02 14:05:43,976:INFO:self._variable_keys: {'data', 'fold_generator', 'fold_shuffle_param', 'y', 'transform_target_param', 'pipeline', 'X_test', 'log_plots_param', 'gpu_n_jobs_param', 'n_jobs_param', 'X', 'gpu_param', 'target_param', 'fold_groups_param', 'exp_id', 'X_train', 'seed', '_available_plots', 'y_test', 'html_param', 'logging_param', 'idx', '_ml_usecase', 'memory', 'USI', 'y_train', 'exp_name_log'}
2024-03-02 14:05:43,976:INFO:Checking environment
2024-03-02 14:05:43,976:INFO:python_version: 3.9.0
2024-03-02 14:05:43,976:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 14:05:43,976:INFO:machine: AMD64
2024-03-02 14:05:43,976:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 14:05:43,983:INFO:Memory: svmem(total=16476958720, available=1969983488, percent=88.0, used=14506975232, free=1969983488)
2024-03-02 14:05:43,984:INFO:Physical Core: 8
2024-03-02 14:05:43,984:INFO:Logical Core: 16
2024-03-02 14:05:43,984:INFO:Checking libraries
2024-03-02 14:05:43,984:INFO:System:
2024-03-02 14:05:43,984:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 14:05:43,984:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 14:05:43,984:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 14:05:43,984:INFO:PyCaret required dependencies:
2024-03-02 14:05:43,984:INFO:                 pip: 23.3.2
2024-03-02 14:05:43,984:INFO:          setuptools: 49.2.1
2024-03-02 14:05:43,984:INFO:             pycaret: 3.3.0
2024-03-02 14:05:43,984:INFO:             IPython: 8.18.1
2024-03-02 14:05:43,984:INFO:          ipywidgets: 8.1.2
2024-03-02 14:05:43,984:INFO:                tqdm: 4.66.1
2024-03-02 14:05:43,984:INFO:               numpy: 1.25.2
2024-03-02 14:05:43,984:INFO:              pandas: 2.1.1
2024-03-02 14:05:43,984:INFO:              jinja2: 3.1.2
2024-03-02 14:05:43,984:INFO:               scipy: 1.11.4
2024-03-02 14:05:43,984:INFO:              joblib: 1.3.2
2024-03-02 14:05:43,984:INFO:             sklearn: 1.4.1.post1
2024-03-02 14:05:43,984:INFO:                pyod: 1.1.3
2024-03-02 14:05:43,984:INFO:            imblearn: 0.12.0
2024-03-02 14:05:43,984:INFO:   category_encoders: 2.6.3
2024-03-02 14:05:43,984:INFO:            lightgbm: 4.3.0
2024-03-02 14:05:43,984:INFO:               numba: 0.58.1
2024-03-02 14:05:43,984:INFO:            requests: 2.31.0
2024-03-02 14:05:43,984:INFO:          matplotlib: 3.7.5
2024-03-02 14:05:43,984:INFO:          scikitplot: 0.3.7
2024-03-02 14:05:43,984:INFO:         yellowbrick: 1.5
2024-03-02 14:05:43,984:INFO:              plotly: 5.19.0
2024-03-02 14:05:43,984:INFO:    plotly-resampler: Not installed
2024-03-02 14:05:43,985:INFO:             kaleido: 0.2.1
2024-03-02 14:05:43,985:INFO:           schemdraw: 0.15
2024-03-02 14:05:43,985:INFO:         statsmodels: 0.14.1
2024-03-02 14:05:43,985:INFO:              sktime: 0.27.0
2024-03-02 14:05:43,985:INFO:               tbats: 1.1.3
2024-03-02 14:05:43,985:INFO:            pmdarima: 2.0.4
2024-03-02 14:05:43,985:INFO:              psutil: 5.9.8
2024-03-02 14:05:43,985:INFO:          markupsafe: 2.1.3
2024-03-02 14:05:43,985:INFO:             pickle5: Not installed
2024-03-02 14:05:43,985:INFO:         cloudpickle: 3.0.0
2024-03-02 14:05:43,985:INFO:         deprecation: 2.1.0
2024-03-02 14:05:43,985:INFO:              xxhash: 3.4.1
2024-03-02 14:05:43,985:INFO:           wurlitzer: Not installed
2024-03-02 14:05:43,985:INFO:PyCaret optional dependencies:
2024-03-02 14:05:43,985:INFO:                shap: 0.44.1
2024-03-02 14:05:43,985:INFO:           interpret: Not installed
2024-03-02 14:05:43,985:INFO:                umap: Not installed
2024-03-02 14:05:43,985:INFO:     ydata_profiling: 4.6.5
2024-03-02 14:05:43,985:INFO:  explainerdashboard: 0.4.5
2024-03-02 14:05:43,985:INFO:             autoviz: Not installed
2024-03-02 14:05:43,985:INFO:           fairlearn: Not installed
2024-03-02 14:05:43,985:INFO:          deepchecks: Not installed
2024-03-02 14:05:43,985:INFO:             xgboost: 2.0.3
2024-03-02 14:05:43,985:INFO:            catboost: Not installed
2024-03-02 14:05:43,985:INFO:              kmodes: Not installed
2024-03-02 14:05:43,985:INFO:             mlxtend: Not installed
2024-03-02 14:05:43,985:INFO:       statsforecast: Not installed
2024-03-02 14:05:43,985:INFO:        tune_sklearn: Not installed
2024-03-02 14:05:43,985:INFO:                 ray: Not installed
2024-03-02 14:05:43,985:INFO:            hyperopt: Not installed
2024-03-02 14:05:43,985:INFO:              optuna: Not installed
2024-03-02 14:05:43,985:INFO:               skopt: Not installed
2024-03-02 14:05:43,985:INFO:              mlflow: Not installed
2024-03-02 14:05:43,985:INFO:              gradio: Not installed
2024-03-02 14:05:43,985:INFO:             fastapi: Not installed
2024-03-02 14:05:43,986:INFO:             uvicorn: Not installed
2024-03-02 14:05:43,986:INFO:              m2cgen: Not installed
2024-03-02 14:05:43,986:INFO:           evidently: Not installed
2024-03-02 14:05:43,986:INFO:               fugue: Not installed
2024-03-02 14:05:43,986:INFO:           streamlit: 1.27.2
2024-03-02 14:05:43,986:INFO:             prophet: Not installed
2024-03-02 14:05:43,986:INFO:None
2024-03-02 14:05:43,986:INFO:Set up data.
2024-03-02 14:05:43,999:INFO:Set up folding strategy.
2024-03-02 14:05:43,999:INFO:Set up train/test split.
2024-03-02 14:05:44,006:INFO:Set up index.
2024-03-02 14:05:44,006:INFO:Assigning column types.
2024-03-02 14:05:44,009:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 14:05:44,009:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,013:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,016:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,061:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,095:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,096:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:44,098:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,102:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,105:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,150:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,184:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,185:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:44,187:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 14:05:44,191:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,194:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,238:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,273:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,273:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:44,279:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,282:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,361:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,361:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:44,363:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 14:05:44,371:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,451:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,451:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:44,461:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,505:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,540:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,540:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:44,543:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 14:05:44,597:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,632:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,632:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:44,689:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,723:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:44,726:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 14:05:44,777:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,812:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:44,866:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:44,901:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:44,903:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 14:05:44,990:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:44,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:45,078:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:45,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:45,081:INFO:Preparing preprocessing pipeline...
2024-03-02 14:05:45,081:INFO:Set up simple imputation.
2024-03-02 14:05:45,084:INFO:Set up encoding of categorical features.
2024-03-02 14:05:45,085:INFO:Set up column name cleaning.
2024-03-02 14:05:51,068:WARNING:D:\HackNITR\automata\polls\views.py:56: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 14:05:51,116:WARNING:D:\HackNITR\automata\polls\views.py:58: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 14:05:51,120:INFO:PyCaret RegressionExperiment
2024-03-02 14:05:51,121:INFO:Logging name: reg-default-name
2024-03-02 14:05:51,121:INFO:ML Usecase: MLUsecase.REGRESSION
2024-03-02 14:05:51,121:INFO:version 3.3.0
2024-03-02 14:05:51,121:INFO:Initializing setup()
2024-03-02 14:05:51,121:INFO:self.USI: ad25
2024-03-02 14:05:51,121:INFO:self._variable_keys: {'data', 'fold_generator', 'fold_shuffle_param', 'y', 'transform_target_param', 'pipeline', 'X_test', 'log_plots_param', 'gpu_n_jobs_param', 'n_jobs_param', 'X', 'gpu_param', 'target_param', 'fold_groups_param', 'exp_id', 'X_train', 'seed', '_available_plots', 'y_test', 'html_param', 'logging_param', 'idx', '_ml_usecase', 'memory', 'USI', 'y_train', 'exp_name_log'}
2024-03-02 14:05:51,121:INFO:Checking environment
2024-03-02 14:05:51,121:INFO:python_version: 3.9.0
2024-03-02 14:05:51,121:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 14:05:51,121:INFO:machine: AMD64
2024-03-02 14:05:51,121:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 14:05:51,142:INFO:Memory: svmem(total=16476958720, available=1899941888, percent=88.5, used=14577016832, free=1899941888)
2024-03-02 14:05:51,143:INFO:Physical Core: 8
2024-03-02 14:05:51,143:INFO:Logical Core: 16
2024-03-02 14:05:51,143:INFO:Checking libraries
2024-03-02 14:05:51,143:INFO:System:
2024-03-02 14:05:51,143:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 14:05:51,143:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 14:05:51,143:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 14:05:51,143:INFO:PyCaret required dependencies:
2024-03-02 14:05:51,143:INFO:                 pip: 23.3.2
2024-03-02 14:05:51,143:INFO:          setuptools: 49.2.1
2024-03-02 14:05:51,143:INFO:             pycaret: 3.3.0
2024-03-02 14:05:51,143:INFO:             IPython: 8.18.1
2024-03-02 14:05:51,143:INFO:          ipywidgets: 8.1.2
2024-03-02 14:05:51,143:INFO:                tqdm: 4.66.1
2024-03-02 14:05:51,143:INFO:               numpy: 1.25.2
2024-03-02 14:05:51,143:INFO:              pandas: 2.1.1
2024-03-02 14:05:51,143:INFO:              jinja2: 3.1.2
2024-03-02 14:05:51,143:INFO:               scipy: 1.11.4
2024-03-02 14:05:51,143:INFO:              joblib: 1.3.2
2024-03-02 14:05:51,143:INFO:             sklearn: 1.4.1.post1
2024-03-02 14:05:51,143:INFO:                pyod: 1.1.3
2024-03-02 14:05:51,143:INFO:            imblearn: 0.12.0
2024-03-02 14:05:51,143:INFO:   category_encoders: 2.6.3
2024-03-02 14:05:51,144:INFO:            lightgbm: 4.3.0
2024-03-02 14:05:51,144:INFO:               numba: 0.58.1
2024-03-02 14:05:51,144:INFO:            requests: 2.31.0
2024-03-02 14:05:51,144:INFO:          matplotlib: 3.7.5
2024-03-02 14:05:51,144:INFO:          scikitplot: 0.3.7
2024-03-02 14:05:51,144:INFO:         yellowbrick: 1.5
2024-03-02 14:05:51,144:INFO:              plotly: 5.19.0
2024-03-02 14:05:51,144:INFO:    plotly-resampler: Not installed
2024-03-02 14:05:51,144:INFO:             kaleido: 0.2.1
2024-03-02 14:05:51,144:INFO:           schemdraw: 0.15
2024-03-02 14:05:51,144:INFO:         statsmodels: 0.14.1
2024-03-02 14:05:51,144:INFO:              sktime: 0.27.0
2024-03-02 14:05:51,144:INFO:               tbats: 1.1.3
2024-03-02 14:05:51,144:INFO:            pmdarima: 2.0.4
2024-03-02 14:05:51,144:INFO:              psutil: 5.9.8
2024-03-02 14:05:51,144:INFO:          markupsafe: 2.1.3
2024-03-02 14:05:51,144:INFO:             pickle5: Not installed
2024-03-02 14:05:51,144:INFO:         cloudpickle: 3.0.0
2024-03-02 14:05:51,144:INFO:         deprecation: 2.1.0
2024-03-02 14:05:51,144:INFO:              xxhash: 3.4.1
2024-03-02 14:05:51,144:INFO:           wurlitzer: Not installed
2024-03-02 14:05:51,145:INFO:PyCaret optional dependencies:
2024-03-02 14:05:51,145:INFO:                shap: 0.44.1
2024-03-02 14:05:51,145:INFO:           interpret: Not installed
2024-03-02 14:05:51,145:INFO:                umap: Not installed
2024-03-02 14:05:51,145:INFO:     ydata_profiling: 4.6.5
2024-03-02 14:05:51,145:INFO:  explainerdashboard: 0.4.5
2024-03-02 14:05:51,145:INFO:             autoviz: Not installed
2024-03-02 14:05:51,145:INFO:           fairlearn: Not installed
2024-03-02 14:05:51,145:INFO:          deepchecks: Not installed
2024-03-02 14:05:51,145:INFO:             xgboost: 2.0.3
2024-03-02 14:05:51,145:INFO:            catboost: Not installed
2024-03-02 14:05:51,145:INFO:              kmodes: Not installed
2024-03-02 14:05:51,145:INFO:             mlxtend: Not installed
2024-03-02 14:05:51,145:INFO:       statsforecast: Not installed
2024-03-02 14:05:51,146:INFO:        tune_sklearn: Not installed
2024-03-02 14:05:51,146:INFO:                 ray: Not installed
2024-03-02 14:05:51,146:INFO:            hyperopt: Not installed
2024-03-02 14:05:51,146:INFO:              optuna: Not installed
2024-03-02 14:05:51,146:INFO:               skopt: Not installed
2024-03-02 14:05:51,146:INFO:              mlflow: Not installed
2024-03-02 14:05:51,146:INFO:              gradio: Not installed
2024-03-02 14:05:51,146:INFO:             fastapi: Not installed
2024-03-02 14:05:51,146:INFO:             uvicorn: Not installed
2024-03-02 14:05:51,146:INFO:              m2cgen: Not installed
2024-03-02 14:05:51,146:INFO:           evidently: Not installed
2024-03-02 14:05:51,146:INFO:               fugue: Not installed
2024-03-02 14:05:51,146:INFO:           streamlit: 1.27.2
2024-03-02 14:05:51,146:INFO:             prophet: Not installed
2024-03-02 14:05:51,146:INFO:None
2024-03-02 14:05:51,146:INFO:Set up data.
2024-03-02 14:05:51,162:INFO:Set up folding strategy.
2024-03-02 14:05:51,162:INFO:Set up train/test split.
2024-03-02 14:05:51,171:INFO:Set up index.
2024-03-02 14:05:51,171:INFO:Assigning column types.
2024-03-02 14:05:51,174:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-03-02 14:05:51,174:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,177:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,181:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,227:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,261:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,261:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:51,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:51,264:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,267:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,271:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,315:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,349:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,350:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:51,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:51,352:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-03-02 14:05:51,356:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,359:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,404:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,438:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,439:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:51,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:51,444:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,448:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,492:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,526:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,527:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:51,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:51,529:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-03-02 14:05:51,536:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,582:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,616:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,617:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:51,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:51,626:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,670:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,704:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,704:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:51,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:51,706:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-03-02 14:05:51,757:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,791:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,791:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:51,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:51,844:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,878:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,879:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:51,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:51,881:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-03-02 14:05:51,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:51,967:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:51,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:52,020:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-03-02 14:05:52,054:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:52,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:52,057:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-03-02 14:05:52,141:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:52,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:52,229:INFO:Soft dependency imported: xgboost: 2.0.3
2024-03-02 14:05:52,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-03-02 14:05:52,232:INFO:Preparing preprocessing pipeline...
2024-03-02 14:05:52,232:INFO:Set up simple imputation.
2024-03-02 14:05:52,235:INFO:Set up encoding of categorical features.
2024-03-02 14:05:52,235:INFO:Set up column name cleaning.
2024-03-02 14:06:04,704:WARNING:D:\HackNITR\automata\polls\views.py:56: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df = pd.read_json(df_json)

2024-03-02 14:06:04,751:WARNING:D:\HackNITR\automata\polls\views.py:58: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.
  df_limited = pd.read_json(df_limited_json)

2024-03-02 14:06:04,756:INFO:PyCaret ClassificationExperiment
2024-03-02 14:06:04,756:INFO:Logging name: clf-default-name
2024-03-02 14:06:04,756:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-03-02 14:06:04,756:INFO:version 3.3.0
2024-03-02 14:06:04,756:INFO:Initializing setup()
2024-03-02 14:06:04,756:INFO:self.USI: 2a82
2024-03-02 14:06:04,756:INFO:self._variable_keys: {'data', 'fold_generator', 'fold_shuffle_param', 'y', 'pipeline', 'X_test', 'log_plots_param', 'is_multiclass', 'gpu_n_jobs_param', 'n_jobs_param', 'X', 'gpu_param', 'target_param', 'fold_groups_param', 'exp_id', 'X_train', 'seed', '_available_plots', 'y_test', 'html_param', 'logging_param', 'idx', 'fix_imbalance', '_ml_usecase', 'memory', 'USI', 'y_train', 'exp_name_log'}
2024-03-02 14:06:04,756:INFO:Checking environment
2024-03-02 14:06:04,757:INFO:python_version: 3.9.0
2024-03-02 14:06:04,757:INFO:python_build: ('tags/v3.9.0:9cf6752', 'Oct  5 2020 15:34:40')
2024-03-02 14:06:04,757:INFO:machine: AMD64
2024-03-02 14:06:04,757:INFO:platform: Windows-10-10.0.22621-SP0
2024-03-02 14:06:04,764:INFO:Memory: svmem(total=16476958720, available=1883013120, percent=88.6, used=14593945600, free=1883013120)
2024-03-02 14:06:04,764:INFO:Physical Core: 8
2024-03-02 14:06:04,764:INFO:Logical Core: 16
2024-03-02 14:06:04,764:INFO:Checking libraries
2024-03-02 14:06:04,764:INFO:System:
2024-03-02 14:06:04,764:INFO:    python: 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)]
2024-03-02 14:06:04,764:INFO:executable: C:\Users\crash\AppData\Local\Programs\Python\Python39\python.exe
2024-03-02 14:06:04,764:INFO:   machine: Windows-10-10.0.22621-SP0
2024-03-02 14:06:04,764:INFO:PyCaret required dependencies:
2024-03-02 14:06:04,764:INFO:                 pip: 23.3.2
2024-03-02 14:06:04,764:INFO:          setuptools: 49.2.1
2024-03-02 14:06:04,764:INFO:             pycaret: 3.3.0
2024-03-02 14:06:04,765:INFO:             IPython: 8.18.1
2024-03-02 14:06:04,765:INFO:          ipywidgets: 8.1.2
2024-03-02 14:06:04,765:INFO:                tqdm: 4.66.1
2024-03-02 14:06:04,765:INFO:               numpy: 1.25.2
2024-03-02 14:06:04,765:INFO:              pandas: 2.1.1
2024-03-02 14:06:04,765:INFO:              jinja2: 3.1.2
2024-03-02 14:06:04,765:INFO:               scipy: 1.11.4
2024-03-02 14:06:04,765:INFO:              joblib: 1.3.2
2024-03-02 14:06:04,765:INFO:             sklearn: 1.4.1.post1
2024-03-02 14:06:04,765:INFO:                pyod: 1.1.3
2024-03-02 14:06:04,765:INFO:            imblearn: 0.12.0
2024-03-02 14:06:04,765:INFO:   category_encoders: 2.6.3
2024-03-02 14:06:04,765:INFO:            lightgbm: 4.3.0
2024-03-02 14:06:04,765:INFO:               numba: 0.58.1
2024-03-02 14:06:04,765:INFO:            requests: 2.31.0
2024-03-02 14:06:04,765:INFO:          matplotlib: 3.7.5
2024-03-02 14:06:04,765:INFO:          scikitplot: 0.3.7
2024-03-02 14:06:04,765:INFO:         yellowbrick: 1.5
2024-03-02 14:06:04,765:INFO:              plotly: 5.19.0
2024-03-02 14:06:04,765:INFO:    plotly-resampler: Not installed
2024-03-02 14:06:04,765:INFO:             kaleido: 0.2.1
2024-03-02 14:06:04,765:INFO:           schemdraw: 0.15
2024-03-02 14:06:04,765:INFO:         statsmodels: 0.14.1
2024-03-02 14:06:04,765:INFO:              sktime: 0.27.0
2024-03-02 14:06:04,765:INFO:               tbats: 1.1.3
2024-03-02 14:06:04,765:INFO:            pmdarima: 2.0.4
2024-03-02 14:06:04,765:INFO:              psutil: 5.9.8
2024-03-02 14:06:04,765:INFO:          markupsafe: 2.1.3
2024-03-02 14:06:04,765:INFO:             pickle5: Not installed
2024-03-02 14:06:04,765:INFO:         cloudpickle: 3.0.0
2024-03-02 14:06:04,765:INFO:         deprecation: 2.1.0
2024-03-02 14:06:04,765:INFO:              xxhash: 3.4.1
2024-03-02 14:06:04,765:INFO:           wurlitzer: Not installed
2024-03-02 14:06:04,765:INFO:PyCaret optional dependencies:
2024-03-02 14:06:04,765:INFO:                shap: 0.44.1
2024-03-02 14:06:04,765:INFO:           interpret: Not installed
2024-03-02 14:06:04,765:INFO:                umap: Not installed
2024-03-02 14:06:04,765:INFO:     ydata_profiling: 4.6.5
2024-03-02 14:06:04,765:INFO:  explainerdashboard: 0.4.5
2024-03-02 14:06:04,766:INFO:             autoviz: Not installed
2024-03-02 14:06:04,766:INFO:           fairlearn: Not installed
2024-03-02 14:06:04,766:INFO:          deepchecks: Not installed
2024-03-02 14:06:04,766:INFO:             xgboost: 2.0.3
2024-03-02 14:06:04,766:INFO:            catboost: Not installed
2024-03-02 14:06:04,766:INFO:              kmodes: Not installed
2024-03-02 14:06:04,766:INFO:             mlxtend: Not installed
2024-03-02 14:06:04,766:INFO:       statsforecast: Not installed
2024-03-02 14:06:04,766:INFO:        tune_sklearn: Not installed
2024-03-02 14:06:04,766:INFO:                 ray: Not installed
2024-03-02 14:06:04,766:INFO:            hyperopt: Not installed
2024-03-02 14:06:04,766:INFO:              optuna: Not installed
2024-03-02 14:06:04,766:INFO:               skopt: Not installed
2024-03-02 14:06:04,766:INFO:              mlflow: Not installed
2024-03-02 14:06:04,766:INFO:              gradio: Not installed
2024-03-02 14:06:04,766:INFO:             fastapi: Not installed
2024-03-02 14:06:04,766:INFO:             uvicorn: Not installed
2024-03-02 14:06:04,766:INFO:              m2cgen: Not installed
2024-03-02 14:06:04,766:INFO:           evidently: Not installed
2024-03-02 14:06:04,766:INFO:               fugue: Not installed
2024-03-02 14:06:04,766:INFO:           streamlit: 1.27.2
2024-03-02 14:06:04,766:INFO:             prophet: Not installed
2024-03-02 14:06:04,766:INFO:None
2024-03-02 14:06:04,766:INFO:Set up data.
2024-03-02 14:06:04,780:INFO:Set up folding strategy.
2024-03-02 14:06:04,781:INFO:Set up train/test split.
2024-03-02 14:06:30,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 14:06:30,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 14:06:30,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 14:06:30,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:05:06,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:05:06,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:05:06,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:05:06,405:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:05:28,516:WARNING:D:\HackNITR\automata\polls\views.py:25: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.
  df = df.applymap(remove_percent_symbol).applymap(remove_currency_symbol)

2024-03-02 15:08:31,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:08:31,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:08:31,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:08:31,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:10:07,643:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:10:07,643:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:10:07,643:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:10:07,643:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:18:50,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:18:50,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:18:50,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:18:50,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:19:29,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:19:29,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:19:29,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:19:29,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:20:01,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:20:01,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:20:01,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:20:01,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:20:09,295:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:20:09,295:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:20:09,295:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-02 15:20:09,295:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
